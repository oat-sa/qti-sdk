<?xml version = "1.0" encoding = "UTF-8"?>
<xs:schema xmlns="http://www.imsglobal.org/xsd/imsqtiasi_v3p0"
     targetNamespace="http://www.imsglobal.org/xsd/imsqtiasi_v3p0"
     xmlns:xi="http://www.w3.org/2001/XInclude"
     xmlns:m3="http://www.w3.org/1998/Math/MathML"
     xmlns:ssml11="http://www.w3.org/2001/10/synthesis"
     xmlns:xs="http://www.w3.org/2001/XMLSchema"
     xmlns:sch="http://purl.oclc.org/dsdl/schematron"
     version="IMS QTI 3.0 ASI SBAC PROFILE 1.0"
     elementFormDefault="qualified"
     attributeFormDefault="unqualified">
    <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="../w3/xml.xsd" />
    <xs:import namespace="http://www.w3.org/2001/XInclude" schemaLocation="../w3/XInclude.xsd" />
    <xs:import namespace="http://www.w3.org/1998/Math/MathML" schemaLocation="../w3/mathml3/mathml3.xsd" />
    <xs:import namespace="http://www.w3.org/2001/10/synthesis" schemaLocation="../w3/ssml11/ssmlv1p1-core.xsd" />

    <xs:annotation>
        <xs:documentation>
            XSD Data File Information
            =========================
            Author:         Colin Smythe (IMS Global)
            Date:           1st May 2022
            Version:        1.0
            Status:         Final Release
            Description:    This is the SBAC profile of the QTI 3.0 Assessment, Section and Item (ASI) specification.

            History:        First release of the IMS QTI 3.0 ASI SBAC Profile.

            PROFILE:        This is the "SBAC". THIS IS A PROFILE OF THE BASE SPECIFICATION.
                            The changes to the base specification are:
                            * The schema version has been changed to "IMS QTI 3.0 ASI SBAC PROFILE 1.0".
                            * The "DataHTML5Extension" class/complexType and set of XML attributes have been deleted;
                            * The "CardEntry.Attr" class/complexType has been modified by:-
                              - The "data-contracted" attribute with a String data-type has been added;
                              - The "data-format" attribute with a String data-type has been added;
                              - The "data-math-representation" attribute with a String data-type has been added;
                              - The "data-type" attribute with a String data-type has been added;
                              - The "data-list-code" attribute with a String data-type has been added;
                              - The "data-list-type" attribute with a String data-type has been added;
                              - The "data-reading-type" attribute with a String data-type has been added;
                            * The "CustomInteraction.Attr" class/complexType has been modified by:-
                              - The "data-table-sub-type" attribute with a String data-type has been added;
                            * The "Div" class/complexType has been modified by:-
                              - The "data-sbac-term" XML attribute with a String data-type has been added;
                              - The "data-stimulus-idref" XML attribute with an NCName data-type has been added;
                            * The "HTMLText" class/complexType has been modified by:-
                              - The "data-sbac-term" XML attribute with a String data-type has been added;

            License:        IPR and Distribution Notices

                            This machine readable file is derived from the IMS Question and Test Interoperability (QTI): Assessment, Section  and Item (ASI) SBAC Profile Version 3.0
                            found at http://www.imsglobal.org/qti and the original IMS Global schema binding or code base
                            http://www.imsglobal.org/qti.

                            Recipients of this document are requested to submit, with their comments, notification of any relevant
                            patent claims or other intellectual property rights of which they may be aware that might be infringed by
                            any implementation of the specification set forth in this document, and to provide supporting documentation.

                            IMS takes no position regarding the validity or scope of any intellectual property or other rights that might
                            be claimed to pertain to the implementation or use of the technology described in this document or the extent
                            to which any license under such rights might or might not be available; neither does it represent that it has
                            made any effort to identify any such rights. Information on IMS procedures with respect to rights in IMS
                            specifications can be found at the IMS Global Intellectual Property Rights web page: http://www.imsglobal.org/ipr/imsipr_policyFinal.pdf.

                            Copyright (c) IMS Global Learning Consortium 1999-2022. All Rights Reserved.

                            Use of this specification to develop products or services is governed by the license with IMS found on the IMS website: http://www.imsglobal.org/license.html.

                            Permission is granted to all parties to use excerpts from this document as needed in producing requests for proposals.

                            The limited permissions granted above are perpetual and will not be revoked by IMS or its successors or assigns.

                            THIS SPECIFICATION IS BEING OFFERED WITHOUT ANY WARRANTY WHATSOEVER, AND IN PARTICULAR, ANY WARRANTY OF NONINFRINGEMENT IS
                            EXPRESSLY DISCLAIMED. ANY USE OF THIS SPECIFICATION SHALL BE MADE ENTIRELY AT THE IMPLEMENTERS OWN RISK, AND NEITHER THE CONSORTIUM
                            NOR ANY OF ITS MEMBERS OR SUBMITTERS, SHALL HAVE ANY LIABILITY WHATSOEVER TO ANY IMPLEMENTER OR THIRD PARTY FOR ANY DAMAGES OF
                            ANY NATURE WHATSOEVER, DIRECTLY OR INDIRECTLY, ARISING FROM THE USE OF THIS SPECIFICATION.

            Source UML File Information
            ===========================
            The source file information must be supplied as an XMI file (without diagram layout information).
            The supported UML authoring tools are:
            (a) Poseidon - v6 (and later)
            (b) Papyrus - v1.1.3 (and later)

            Source XSLT File Information
            ============================
            XSL Generator:    Specificationv1p0_GenerationToolv1.xsl
            XSLT Processor:   Saxon
            Release:          1.0
            Date:             31st January, 2021
            Autogen Engineer: Colin Smythe (IMS Global, UK)
            Autogen Date:     2022-05-09

            IMS Global Auto-generation Binding Tool-kit (I-BAT)
            ===================================================
            This file was auto-generated using the IMS Global Binding Auto-generation Tool-kit (I-BAT).  While every
            attempt has been made to ensure that this tool auto-generates the files correctly, users should be aware
            that this is an experimental tool.  Permission is given to make use of this tool.  IMS Global makes no
            claim on the materials created by third party users of this tool.  Details on how to use this tool
            are contained in the IMS Global "I-BAT" documentation available at the IMS Global web-site:
            http://www.imsglobal.org.

            Tool Copyright:  2012-2022  (c) IMS Global Learning Consortium Inc.  All Rights Reserved.
        </xs:documentation>
    </xs:annotation>

    <xs:annotation>
        <xs:documentation>
            Schematron Namespace Declaration
            =================================
            The set of namespaces used by the schematron rules.
        </xs:documentation>
        <xs:appinfo>
            <sch:ns uri="http://www.imsglobal.org/xsd/imsqtiasi_v3p0" prefix="qti" />
        </xs:appinfo>
    </xs:annotation>

    <xs:annotation>
        <xs:documentation>
            Schematron Strict Selection Validation Rules
            ============================================
            This is the set of Schematron rules that have been created to enforce the use of the "Unordered" stereotype.
            These rules ensure that the number of entries in an unordered complexType of an element obey the multiplicity constraints.
            This is required so that any-order/any-multiplicity complexTypes can be constructed and validated.
        </xs:documentation>
        <xs:appinfo>
            <sch:title>Schematron validation rules for the enforcement of the Unordered stereotype.</sch:title>

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="FigureDType">
                <sch:title>[RULESET] For the FigureDType complexType.</sch:title>

            </sch:pattern>
            <!-- *************************************************************************** -->

        </xs:appinfo>
    </xs:annotation>

    <xs:annotation>
        <xs:documentation>
            Schematron Extension Validation Rules
            =====================================
            This is the set of Schematron rules that have been created to enforce the validation constraints on namespaced extensions.
            These rules ensure that the names of the extension features conform to defined naming convention (expressed using a REGEX).
            At present these rules are limited to permitted names for the proprietary XML attributes.
        </xs:documentation>
        <xs:appinfo>
            <sch:title>Schematron validation rules for the enforcement naming constraints on XML attribute provided as proprietary extensions.</sch:title>

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULESET_ROOTELEMENT_DATAEXTENSIONRULES">
                <sch:title>Rules applied to Root Elements that have constrained extension attributes.</sch:title>
                <!-- The "//qti:qti-assessment-item" root element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-assessment-section" root element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-assessment-stimulus" root element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-assessment-test" root element XML attribute data extension has been prohibited **** -->

            </sch:pattern>
            <!-- RULESET ******************************************************************* -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULESET_GLOBALELEMENT_DATAEXTENSIONRULES">
                <sch:title>Rules applied to Global Elements that have constrained extension attributes.</sch:title>
                <!-- The "//qti:a" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:abbr" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:acronym" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:address" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:article" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:aside" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:audio" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:b" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:bdi" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:bdo" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:big" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:blockquote" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:br" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:caption" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:cite" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:code" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:col" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:colgroup" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:dd" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:details" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:dfn" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:div" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:dl" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:dt" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:em" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:figcaption" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:figure" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:footer" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:h1" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:h2" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:h3" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:h4" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:h5" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:h6" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:header" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:hr" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:i" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:img" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:kbd" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:label" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:li" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:nav" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:object" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:ol" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:p" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:picture" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:pre" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:q" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:rb" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:rp" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:rt" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:rtc" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:ruby" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:samp" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:section" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:small" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:source" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:span" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:strong" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:sub" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:summary" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:sup" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:table" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:tbody" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:td" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:tfoot" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:th" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:thead" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:tr" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:track" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:tt" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:ul" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:var" global element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:video" global element XML attribute data extension has been prohibited **** -->

            </sch:pattern>
            <!-- RULESET ******************************************************************* -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULESET_LOCALELEMENT_DATAEXTENSIONRULES">
                <sch:title>Rules applied to Local Elements that have constrained extension attributes.</sch:title>
                <!-- The "//qti:qti-assessment-item-ref" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-assessment-section-ref" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-assessment-stimulus-ref" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-associable-hotspot" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-associate-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-card-entry" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-choice-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-custom-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-drawing-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-end-attempt-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-extended-text-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-feedback-block" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-feedback-inline" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-gap" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-gap-img" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-gap-match-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-gap-text" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-graphic-associate-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-graphic-gap-match-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-graphic-order-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-hotspot-choice" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-hotspot-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-hottext" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-hottext-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-html-content" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-inline-choice" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-inline-choice-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-label" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-match-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-media-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-modal-feedback" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-order-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-portable-custom-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-position-object-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-position-object-stage" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-prompt" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-rubric-block" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-rubric-block" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-select-point-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-simple-associable-choice" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-simple-choice" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-simple-match-set" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-slider-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-template-block" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-template-inline" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-template-inline" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-test-feedback" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-test-part" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-text-entry-interaction" local element XML attribute data extension has been prohibited **** -->
                <!-- The "//qti:qti-upload-interaction" local element XML attribute data extension has been prohibited **** -->

            </sch:pattern>
            <!-- RULESET ******************************************************************* -->

        </xs:appinfo>
    </xs:annotation>

    <xs:annotation>
        <xs:documentation>
            Definition of Schematron Validation Rules
            =========================================
            Author:         Colin Smythe (IMS Global, UK)
            Date:           1st May 2022
            Version:        1.0
            Status:         Final Release

            Description:    This is the set of Schematron Rules to further enforce the QTI v3.0 Information Model. The rule sets that have been defined are:

                            [RULE_SET_ARIA_ROLES_1] Enforce the correct use of the ARIA Role attribute.
                            [RULE_SET_GENERAL_1] Ensure that certain expressions are NOT used for Response Processing.
                            [RULE_SET_INTERACTION-RELATED_1] Enforce the correct use of the GapText attributes.
                            [RULE_SET_INTERACTION-RELATED_2] Enforce the correct use of the GapImg attributes.
                            [RULE_SET_INTERACTION-RELATED_3] Enforce the correct use of the AssociableHotspot attributes.
                            [RULE_SET_INTERACTION-RELATED_4] Enforce the correct use of the SimpleAssociableChoice attributes.
                            [RULE_SET_INTERACTION_01A] Enforce the prohibiting of nested interactions within the TextEntryInteraction.
                            [RULE_SET_INTERACTION_01B] Enforce the correct use of the TextEntryInteraction attributes.
                            [RULE_SET_INTERACTION_02A] Enforce the prohibiting of nested interactions within ChoiceInteraction and InlineChoiceInteraction.
                            [RULE_SET_INTERACTION_02B] Enforce the correct use of the ChoiceInteraction and InlineChoiceInteraction attributes.
                            [RULE_SET_INTERACTION_03A] Enforce the prohibiting of nested interactions within the ExtendedTextEntryInteraction.
                            [RULE_SET_INTERACTION_03B] Enforce the correct use of the ExtendedTextInteraction attributes.
                            [RULE_SET_INTERACTION_04A] Enforce the prohibiting of nested interactions within the HotspotInteraction.
                            [RULE_SET_INTERACTION_04B] Enforce the correct use of the HotspotInteraction attributes.
                            [RULE_SET_INTERACTION_05A] Enforce the prohibiting of nested interactions within the GraphicOrderInteraction.
                            [RULE_SET_INTERACTION_05B] Enforce the correct use of the GraphicOrderInteraction attributes.
                            [RULE_SET_INTERACTION_06A] Enforce the prohibiting of nested interactions within the PositionObjectInteraction.
                            [RULE_SET_INTERACTION_06B] Enforce the correct use of the PositionObjectInteraction attributes.
                            [RULE_SET_INTERACTION_07A] Enforce the prohibiting of nested interactions within the SelectPointInteraction.
                            [RULE_SET_INTERACTION_07B] Enforce the correct use of the SelectPointInteraction attributes.
                            [RULE_SET_INTERACTION_08A] Enforce the prohibiting of nested interactions within the OrderInteraction.
                            [RULE_SET_INTERACTION_08B] Enforce the correct use of the OrderInteraction attributes.
                            [RULE_SET_INTERACTION_09A] Enforce the prohibiting of nested interactions within the HotTextInteraction.
                            [RULE_SET_INTERACTION_09B] Enforce the correct use of the HotTextInteraction attributes.
                            [RULE_SET_INTERACTION_10A] Enforce the prohibiting of nested interactions within the GraphicAssociateInteraction.
                            [RULE_SET_INTERACTION_10B] Enforce the correct use of the GraphicAssociateInteraction attributes.
                            [RULE_SET_INTERACTION_11A] Enforce the prohibiting of nested interactions within the MatchInteraction.
                            [RULE_SET_INTERACTION_11B] Enforce the correct use of the MatchInteraction attributes.
                            [RULE_SET_INTERACTION_12A] Enforce the prohibiting of nested interactions within the AssociateInteraction.
                            [RULE_SET_INTERACTION_12B] Enforce the correct use of the AssociateInteraction attributes.
                            [RULE_SET_INTERACTION_13A] Enforce the prohibiting of nested interactions within the MediaInteraction.
                            [RULE_SET_INTERACTION_13B] Enforce the correct use of the MediaInteraction attributes.
                            [RULE_SET_INTERACTION_14A] Enforce the prohibiting of nested interactions within the SliderInteraction.
                            [RULE_SET_INTERACTION_14B] Enforce the correct use of the SliderInteraction attributes.
                            [RULE_SET_INTERACTION_15A] Enforce the prohibiting of nested interactions within the DrawingInteraction.
                            [RULE_SET_INTERACTION_15B] Enforce the correct use of the DrawingInteraction attributes.
                            [RULE_SET_INTERACTION_16A] Enforce the prohibiting of nested interactions within the UploadInteraction.
                            [RULE_SET_INTERACTION_16B] Enforce the correct use of the UploadInteraction attributes.
                            [RULE_SET_INTERACTION_17A] Enforce the prohibiting of nested interactions within the EndAttemptInteraction.
                            [RULE_SET_INTERACTION_17B] Enforce the correct use of the EndAttemptInteraction attributes.
                            [RULE_SET_INTERACTION_18A] Enforce the prohibiting of nested interactions within the GapMatchInteraction.
                            [RULE_SET_INTERACTION_18B] Enforce the correct use of the GapMatchInteraction attributes.
                            [RULE_SET_INTERACTION_19A] Enforce the prohibiting of nested interactions within the GraphicGapMatchInteraction.
                            [RULE_SET_INTERACTION_19B] Enforce the correct use of the GraphicGapMatchInteraction attributes.
                            [RULE_SET_INTERACTION_20A] Enforce the prohibiting of nested interactions within CustomInteracion and PortableCustomInteraction.
                            [RULE_SET_INTERACTION_20B] Enforce the correct use of the PortableCustomInteraction attributes.
                            [RULE_SET_RUBRICBLOCK] Ensure that the constraints on the use of Rubric Blocks are imposed.
                            [RULE_SET_SPECIFIC_CLASS_OUTCOMEDEC] Enforce the correct use of the OutcomeDeclaration attributes.
                            [RULE_SET_SPECIFIC_CLASS_RESPONSEDEC] Enforce the correct use of the ResponseDeclaration attributes.

                            RULE_SET_ARIA_ROLES_1: Enforce the correct use of the ARIA Role attribute. The set of rules are:-
                            * RULE ARIA ROLE 1a-Assertion 1 :- The 'source' tag must not have an ARIA role attribute.
                            * RULE ARIA ROLE 1b-Assertion 1 :- The 'h1' tag may have an ARIA role value of 'heading' or 'tab' or 'presentation' only.

                            RULE_SET_GENERAL_1: Ensure that certain expressions are NOT used for Response Processing. The set of rules are:-
                            * RULE GENERAL 1a-Assertion 1 :- The expression qti-outcome-minimum must NOT be used in ResponseProcessing.
                            * RULE GENERAL 1a-Assertion 2 :- The expression qti-outcome-maximum must NOT be used in ResponseProcessing.
                            * RULE GENERAL 1a-Assertion 3 :- The expression qti-test-variables must NOT be used in ResponseProcessing.

                            RULE_SET_INTERACTION-RELATED_1: Enforce the correct use of the GapText attributes. The set of rules are:-
                            * RULE INTERACTION-RELATED 1a-Assertion 1 :- The match-max attribute value, provided it is not 0, must not be less than the match-min value.

                            RULE_SET_INTERACTION-RELATED_2: Enforce the correct use of the GapImg attributes. The set of rules are:-
                            * RULE INTERACTION-RELATED 2a-Assertion 1 :- The match-max attribute value, provided it is not 0, must not be less than the match-min value.

                            RULE_SET_INTERACTION-RELATED_3: Enforce the correct use of the AssociableHotspot attributes. The set of rules are:-
                            * RULE INTERACTION-RELATED 3a-Assertion 1 :- The match-max attribute value, provided it is not 0, must not be less than the match-min value.

                            RULE_SET_INTERACTION-RELATED_4: Enforce the correct use of the SimpleAssociableChoice attributes. The set of rules are:-
                            * RULE INTERACTION-RELATED 4a-Assertion 1 :- The match-max attribute value, provided it is not 0, must not be less than the match-min value.

                            RULE_SET_INTERACTION_01A: Enforce the prohibiting of nested interactions within the TextEntryInteraction. The set of rules are:-
                            * RULE INTERACTION 1Aa-Assertion 01 :- A TextEntryInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 1Aa-Assertion 02 :- A TextEntryInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 1Aa-Assertion 03 :- A TextEntryInteraction MUST NOT contain a AssociateInteraction.
                            * RULE INTERACTION 1Aa-Assertion 04 :- A TextEntryInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 1Aa-Assertion 05 :- A TextEntryInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 1Aa-Assertion 06 :- A TextEntryInteraction MUST NOT contain a EndAttemptInteraction.
                            * RULE INTERACTION 1Aa-Assertion 07 :- A TextEntryInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 1Aa-Assertion 08 :- A TextEntryInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 1Aa-Assertion 09 :- A TextEntryInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 1Aa-Assertion 10 :- A TextEntryInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 1Aa-Assertion 11 :- A TextEntryInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 1Aa-Assertion 12 :- A TextEntryInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 1Aa-Assertion 13 :- A TextEntryInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 1Aa-Assertion 14 :- A TextEntryInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 1Aa-Assertion 15 :- A TextEntryInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 1Aa-Assertion 16 :- A TextEntryInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 1Aa-Assertion 17 :- A TextEntryInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 1Aa-Assertion 18 :- A TextEntryInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 1Aa-Assertion 19 :- A TextEntryInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 1Aa-Assertion 20 :- A TextEntryInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 1Aa-Assertion 21 :- A TextEntryInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 1Aa-Assertion 22 :- A TextEntryInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_01B: Enforce the correct use of the TextEntryInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 1Ba-Assertion 1 :- The String-Identifier and Response-Identifier attribute values must not be the same.
                            * RULE INTERACTION 1Bb-Assertion 1 :- The base-type must have a value of either string, float or integer.

                            RULE_SET_INTERACTION_02A: Enforce the prohibiting of nested interactions within ChoiceInteraction and InlineChoiceInteraction. The set of rules are:-
                            * RULE INTERACTION 2Aa-Assertion 01 :- A ChoiceInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 2Aa-Assertion 02 :- A ChoiceInteraction MUST NOT contain a AssociateInteraction.
                            * RULE INTERACTION 2Aa-Assertion 03 :- A ChoiceInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 2Aa-Assertion 04 :- A ChoiceInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 2Aa-Assertion 05 :- A ChoiceInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 2Aa-Assertion 06 :- A ChoiceInteraction MUST NOT contain an ExtendedText.
                            * RULE INTERACTION 2Aa-Assertion 07 :- A ChoiceInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 2Aa-Assertion 08 :- A ChoiceInteraction MUST NOT contain a GraphicAssocciateInteraction.
                            * RULE INTERACTION 2Aa-Assertion 09 :- A ChoiceInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 2Aa-Assertion 10 :- A ChoiceInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 2Aa-Assertion 11 :- A ChoiceInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 2Aa-Assertion 12 :- A ChoiceInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 2Aa-Assertion 13 :- A ChoiceInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 2Aa-Assertion 14 :- A ChoiceInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 2Aa-Assertion 15 :- A ChoiceInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 2Aa-Assertion 16 :- A ChoiceInteraction MUST NOT contain a OrderInteraction.
                            * RULE INTERACTION 2Aa-Assertion 17 :- A ChoiceInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 2Aa-Assertion 18 :- A ChoiceInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 2Aa-Assertion 19 :- A ChoiceInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 2Aa-Assertion 20 :- A ChoiceInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 2Aa-Assertion 21 :- A ChoiceInteraction MUST NOT contain a TextEnryInteraction.
                            * RULE INTERACTION 2Aa-Assertion 22 :- A ChoiceInteraction MUST NOT contain a UploadInteraction.
                            * RULE INTERACTION 2Ab-Assertion 01 :- An InlineChoiceInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 2Ab-Assertion 02 :- An InlineChoiceInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 2Ab-Assertion 03 :- An InlineChoiceInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 2Ab-Assertion 04 :- An InlineChoiceInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 2Ab-Assertion 05 :- An InlineChoiceInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 2Ab-Assertion 06 :- An InlineChoiceInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 2Ab-Assertion 07 :- An InlineChoiceInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 2Ab-Assertion 08 :- An InlineChoiceInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 2Ab-Assertion 09 :- An InlineChoiceInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 2Ab-Assertion 10 :- An InlineChoiceInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 2Ab-Assertion 11 :- An InlineChoiceInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 2Ab-Assertion 12 :- An InlineChoiceInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 2Ab-Assertion 13 :- An InlineChoiceInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 2Ab-Assertion 14 :- An InlineChoiceInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 2Ab-Assertion 15 :- An InlineChoiceInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 2Ab-Assertion 16 :- An InlineChoiceInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 2Ab-Assertion 17 :- An InlineChoiceInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 2Ab-Assertion 18 :- An InlineChoiceInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 2Ab-Assertion 19 :- An InlineChoiceInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 2Ab-Assertion 20 :- An InlineChoiceInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 2Ab-Assertion 21 :- An InlineChoiceInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 2Ab-Assertion 22 :- An InlineChoiceInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_02B: Enforce the correct use of the ChoiceInteraction and InlineChoiceInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 2Ba-Assertion 1 :- The  max-choices attribute value, provided it is not 0, must not be less than the Min-Choices value.

                            RULE_SET_INTERACTION_03A: Enforce the prohibiting of nested interactions within the ExtendedTextEntryInteraction. The set of rules are:-
                            * RULE INTERACTION 3Aa-Assertion 01 :- An ExtendedTextInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 3Aa-Assertion 02 :- An ExtendedTextInteraction MUST NOT contain an AssociateTextInteraction.
                            * RULE INTERACTION 3Aa-Assertion 03 :- An ExtendedTextInteraction MUST NOT contain an ChoiceTextInteraction.
                            * RULE INTERACTION 3Aa-Assertion 04 :- An ExtendedTextInteraction MUST NOT contain an CustomInteraction.
                            * RULE INTERACTION 3Aa-Assertion 05 :- An ExtendedTextInteraction MUST NOT contain an DrawingInteraction.
                            * RULE INTERACTION 3Aa-Assertion 06 :- An ExtendedTextInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 3Aa-Assertion 07 :- An ExtendedTextInteraction MUST NOT contain an GapMatchInteraction.
                            * RULE INTERACTION 3Aa-Assertion 08 :- An ExtendedTextInteraction MUST NOT contain an GraphicAssociateInteraction.
                            * RULE INTERACTION 3Aa-Assertion 09 :- An ExtendedTextInteraction MUST NOT contain an GraphicGapMatchInteraction.
                            * RULE INTERACTION 3Aa-Assertion 10 :- An ExtendedTextInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 3Aa-Assertion 11 :- An ExtendedTextInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 3Aa-Assertion 12 :- An ExtendedTextInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 3Aa-Assertion 13 :- An ExtendedTextInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 3Aa-Assertion 14 :- An ExtendedTextInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 3Aa-Assertion 15 :- An ExtendedTextInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 3Aa-Assertion 16 :- An ExtendedTextInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 3Aa-Assertion 17 :- An ExtendedTextInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 3Aa-Assertion 18 :- An ExtendedTextInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 3Aa-Assertion 19 :- An ExtendedTextInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 3Aa-Assertion 20 :- An ExtendedTextInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 3Aa-Assertion 21 :- An ExtendedTextInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 3Aa-Assertion 22 :- An ExtendedTextInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_03B: Enforce the correct use of the ExtendedTextInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 3Ba-Assertion 1 :- The string-identifier and response-identifier attribute values must not be the same.

                            RULE_SET_INTERACTION_04A: Enforce the prohibiting of nested interactions within the HotspotInteraction. The set of rules are:-
                            * RULE INTERACTION 4Aa-Assertion 01 :- A HotspotInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 4Aa-Assertion 02 :- A HotspotInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 4Aa-Assertion 03 :- A HotspotInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 4Aa-Assertion 04 :- A HotspotInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 4Aa-Assertion 05 :- A HotspotInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 4Aa-Assertion 06 :- A HotspotInteraction MUST NOT contain a EndAttemptInteraction.
                            * RULE INTERACTION 4Aa-Assertion 07 :- A HotspotInteraction MUST NOT contain a ExtendedTextInteraction.
                            * RULE INTERACTION 4Aa-Assertion 08 :- A HotspotInteraction MUST NOT contain a GraphMatchInteraction.
                            * RULE INTERACTION 4Aa-Assertion 09 :- A HotspotInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 4Aa-Assertion 10 :- A HotspotInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 4Aa-Assertion 11 :- A HotspotInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 4Aa-Assertion 12 :- A HotspotInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 4Aa-Assertion 13 :- A HotspotInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 4Aa-Assertion 14 :- A HotspotInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 4Aa-Assertion 15 :- A HotspotInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 4Aa-Assertion 16 :- A HotspotInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 4Aa-Assertion 17 :- A HotspotInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 4Aa-Assertion 18 :- A HotspotInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 4Aa-Assertion 19 :- A HotspotInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 4Aa-Assertion 20 :- A HotspotInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 4Aa-Assertion 21 :- A HotspotInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 4Aa-Assertion 22 :- A HotspotInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_04B: Enforce the correct use of the HotspotInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 4Ba-Assertion 1 :- The max-choices attribute value, provided it is not 0, must not be less than the min-choices value.

                            RULE_SET_INTERACTION_05A: Enforce the prohibiting of nested interactions within the GraphicOrderInteraction. The set of rules are:-
                            * RULE INTERACTION 5Aa-Assertion 01 :- A GraphicOrderInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 5Aa-Assertion 02 :- A GraphicOrderInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 5Aa-Assertion 03 :- A GraphicOrderInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 5Aa-Assertion 04 :- A GraphicOrderInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 5Aa-Assertion 05 :- A GraphicOrderInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 5Aa-Assertion 06 :- A GraphicOrderInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 5Aa-Assertion 07 :- A GraphicOrderInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 5Aa-Assertion 08 :- A GraphicOrderInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 5Aa-Assertion 09 :- A GraphicOrderInteraction MUST NOT contain a GraphicAssocciateInteraction.
                            * RULE INTERACTION 5Aa-Assertion 10 :- A GraphicOrderInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 5Aa-Assertion 11 :- A GraphicOrderInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 5Aa-Assertion 12 :- A GraphicOrderInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 5Aa-Assertion 13 :- A GraphicOrderInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 5Aa-Assertion 14 :- A GraphicOrderInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 5Aa-Assertion 15 :- A GraphicOrderInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 5Aa-Assertion 16 :- A GraphicOrderInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 5Aa-Assertion 17 :- A GraphicOrderInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 5Aa-Assertion 18 :- A GraphicOrderInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 5Aa-Assertion 19 :- A GraphicOrderInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 5Aa-Assertion 20 :- A GraphicOrderInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 5Aa-Assertion 21 :- A GraphicOrderInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 5Aa-Assertion 22 :- A GraphicOrderInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_05B: Enforce the correct use of the GraphicOrderInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 5Ba-Assertion 1 :- The max-choices attribute value, provided it is not 0, must not be less than the min-choices value.

                            RULE_SET_INTERACTION_06A: Enforce the prohibiting of nested interactions within the PositionObjectInteraction. The set of rules are:-
                            * RULE INTERACTION 6Aa-Assertion 01 :- A PositionObjectInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 6Aa-Assertion 02 :- A PositionObjectInteraction MUST NOT contain a AssociateInteraction.
                            * RULE INTERACTION 6Aa-Assertion 03 :- A PositionObjectInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 6Aa-Assertion 04 :- A PositionObjectInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 6Aa-Assertion 07 :- A PositionObjectInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 6Aa-Assertion 08 :- A PositionObjectInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 6Aa-Assertion 09 :- A PositionObjectInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 6Aa-Assertion 10 :- A PositionObjectInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 6Aa-Assertion 11 :- A PositionObjectInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 6Aa-Assertion 12 :- A PositionObjectInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 6Aa-Assertion 13 :- A PositionObjectInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 6Aa-Assertion 14 :- A PositionObjectInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 6Aa-Assertion 15 :- A PositionObjectInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 6Aa-Assertion 16 :- A PositionObjectInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 6Aa-Assertion 17 :- A PositionObjectInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 6Aa-Assertion 18 :- A PositionObjectInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 6Aa-Assertion 19 :- A PositionObjectInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 6Aa-Assertion 20 :- A PositionObjectInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 6Aa-Assertion 21 :- A PositionObjectInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 6Aa-Assertion 22 :- A PositionObjectInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_06B: Enforce the correct use of the PositionObjectInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 6Ba-Assertion 1 :- The max-choices attribute value, provided it is not 0, must not be less than the min-choices value.

                            RULE_SET_INTERACTION_07A: Enforce the prohibiting of nested interactions within the SelectPointInteraction. The set of rules are:-
                            * RULE INTERACTION 7Aa-Assertion 01 :- A SelectPointInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 7Aa-Assertion 02 :- A SelectPointInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 7Aa-Assertion 03 :- A SelectPointInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 7Aa-Assertion 04 :- A SelectPointInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 7Aa-Assertion 05 :- A SelectPointInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 7Aa-Assertion 06 :- A SelectPointInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 7Aa-Assertion 07 :- A SelectPointInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 7Aa-Assertion 08 :- A SelectPointInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 7Aa-Assertion 09 :- A SelectPointInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 7Aa-Assertion 11 :- A SelectPointInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 7Aa-Assertion 12 :- A SelectPointInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 7Aa-Assertion 13 :- A SelectPointInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 7Aa-Assertion 14 :- A SelectPointInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 7Aa-Assertion 15 :- A SelectPointInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 7Aa-Assertion 16 :- A SelectPointInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 7Aa-Assertion 17 :- A SelectPointInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 7Aa-Assertion 18 :- A SelectPointInteraction MUST NOT contain a PortableInteraction.
                            * RULE INTERACTION 7Aa-Assertion 19 :- A SelectPointInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 7Aa-Assertion 20 :- A SelectPointInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 7Aa-Assertion 21 :- A SelectPointInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 7Aa-Assertion 22 :- A SelectPointInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_07B: Enforce the correct use of the SelectPointInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 7Ba-Assertion 1 :- The max-choices attribute value, provided it is not 0, must not be less than the min-choices value.

                            RULE_SET_INTERACTION_08A: Enforce the prohibiting of nested interactions within the OrderInteraction. The set of rules are:-
                            * RULE INTERACTION 8Aa-Assertion 01 :- An OrderInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 8Aa-Assertion 02 :- An OrderInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 8Aa-Assertion 03 :- An OrderInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 8Aa-Assertion 04 :- An OrderInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 8Aa-Assertion 05 :- An OrderInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 8Aa-Assertion 06 :- An OrderInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 8Aa-Assertion 07 :- An OrderInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 8Aa-Assertion 08 :- An OrderInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 8Aa-Assertion 09 :- An OrderInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 8Aa-Assertion 10 :- An OrderInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 8Aa-Assertion 11 :- An OrderInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 8Aa-Assertion 12 :- An OrderInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 8Aa-Assertion 13 :- An OrderInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 8Aa-Assertion 14 :- An OrderInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 8Aa-Assertion 15 :- An OrderInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 8Aa-Assertion 16 :- An OrderInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 8Aa-Assertion 17 :- An OrderInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 8Aa-Assertion 18 :- An OrderInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 8Aa-Assertion 19 :- An OrderInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 8Aa-Assertion 20 :- An OrderInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 8Aa-Assertion 21 :- An OrderInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 8Aa-Assertion 22 :- An OrderInteraction MUST NOT contain a UploadInteraction.

                            RULE_SET_INTERACTION_08B: Enforce the correct use of the OrderInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 8Ba-Assertion 1 :- The max-choices attribute value, provided it is not 0, must not be less than the min-choices value.

                            RULE_SET_INTERACTION_09A: Enforce the prohibiting of nested interactions within the HotTextInteraction. The set of rules are:-
                            * RULE INTERACTION 9Aa-Assertion 01 :- A HottextInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 9Aa-Assertion 02 :- A HottextInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 9Aa-Assertion 03 :- A HottextInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 9Aa-Assertion 04 :- A HottextInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 9Aa-Assertion 05 :- A HottextInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 9Aa-Assertion 06 :- A HottextInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 9Aa-Assertion 07 :- A HottextInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 9Aa-Assertion 08 :- A HottextInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 9Aa-Assertion 09 :- A HottextInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 9Aa-Assertion 10 :- A HottextInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 9Aa-Assertion 11 :- A HottextInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 9Aa-Assertion 12 :- A HottextInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 9Aa-Assertion 13 :- A HottextInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 9Aa-Assertion 14 :- A HottextInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 9Aa-Assertion 15 :- A HottextInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 9Aa-Assertion 16 :- A HottextInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 9Aa-Assertion 17 :- A HottextInteraction MUST NOT contain an PortableCustomInteraction.
                            * RULE INTERACTION 9Aa-Assertion 18 :- A HottextInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 9Aa-Assertion 19 :- A HottextInteraction MUST NOT contain a SelectPointInteraction.A
                            * RULE INTERACTION 9Aa-Assertion 20 :- A HottextInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 9Aa-Assertion 21 :- A HottextInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 9Aa-Assertion 22 :- A HottextInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_09B: Enforce the correct use of the HotTextInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 9Ba-Assertion 1 :- The max-choices attribute value, provided it is not 0, must not be less than the min-choices value.

                            RULE_SET_INTERACTION_10A: Enforce the prohibiting of nested interactions within the GraphicAssociateInteraction. The set of rules are:-
                            * RULE INTERACTION 10Aa-Assertion 01 :- A GraphicAssociateInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 10Aa-Assertion 02 :- A GraphicAssociateInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 10Aa-Assertion 03 :- A GraphicAssociateInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 10Aa-Assertion 04 :- A GraphicAssociateInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 10Aa-Assertion 05 :- A GraphicAssociateInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 10Aa-Assertion 06 :- A GraphicAssociateInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 10Aa-Assertion 07 :- A GraphicAssociateInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 10Aa-Assertion 08 :- A GraphicAssociateInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 10Aa-Assertion 09 :- A GraphicAssociateInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 10Aa-Assertion 10 :- A GraphicAssociateInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 10Aa-Assertion 11 :- A GraphicAssociateInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 10Aa-Assertion 12 :- A GraphicAssociateInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 10Aa-Assertion 13 :- A GraphicAssociateInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 10Aa-Assertion 14 :- A GraphicAssociateInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 10Aa-Assertion 15 :- A GraphicAssociateInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 10Aa-Assertion 16 :- A GraphicAssociateInteraction MUST NOT contain a OrderInteraction.
                            * RULE INTERACTION 10Aa-Assertion 17 :- A GraphicAssociateInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 10Aa-Assertion 18 :- A GraphicAssociateInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 10Aa-Assertion 19 :- A GraphicAssociateInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 10Aa-Assertion 20 :- A GraphicAssociateInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 10Aa-Assertion 21 :- A GraphicAssociateInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 10Aa-Assertion 22 :- A GraphicAssociateInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_10B: Enforce the correct use of the GraphicAssociateInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 10Ba-Assertion 1 :- The max-associations attribute value, provided it is not 0, must not be less than the min-associations value.

                            RULE_SET_INTERACTION_11A: Enforce the prohibiting of nested interactions within the MatchInteraction. The set of rules are:-
                            * RULE INTERACTION 11Aa-Assertion 01 :- A MatchInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 11Aa-Assertion 02 :- A MatchInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 11Aa-Assertion 03 :- A MatchInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 11Aa-Assertion 04 :- A MatchInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 11Aa-Assertion 05 :- A MatchInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 11Aa-Assertion 06 :- A MatchInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 11Aa-Assertion 07 :- A MatchInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 11Aa-Assertion 08 :- A MatchInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 11Aa-Assertion 09 :- A MatchInteraction MUST NOT contain a GraphicAsssociateInteraction.
                            * RULE INTERACTION 11Aa-Assertion 10 :- A MatchInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 11Aa-Assertion 11 :- A MatchInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 11Aa-Assertion 12 :- A MatchInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 11Aa-Assertion 13 :- A MatchInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 11Aa-Assertion 14 :- A MatchInteraction MUST NOT contain a InlineChoiceInteraction.
                            * RULE INTERACTION 11Aa-Assertion 15 :- A MatchInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 11Aa-Assertion 16 :- A MatchInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 11Aa-Assertion 17 :- A MatchInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 11Aa-Assertion 18 :- A MatchInteraction MUST NOT contain a PositionObjecInteraction.
                            * RULE INTERACTION 11Aa-Assertion 19 :- A MatchInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 11Aa-Assertion 20 :- A MatchInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 11Aa-Assertion 21 :- A MatchInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 11Aa-Assertion 22 :- A MatchInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_11B: Enforce the correct use of the MatchInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 11Ba-Assertion 1 :- The max-associations attribute value, provided it is not 0, must not be less than the min-associations value.

                            RULE_SET_INTERACTION_12A: Enforce the prohibiting of nested interactions within the AssociateInteraction. The set of rules are:-
                            * RULE INTERACTION 12Aa-Assertion 01 :- An AssociateInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 12Aa-Assertion 02 :- An AssociateInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 12Aa-Assertion 03 :- An AssociateInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 12Aa-Assertion 04 :- An AssociateInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 12Aa-Assertion 05 :- An AssociateInteraction MUST NOT contain an EndAtemptInteraction.
                            * RULE INTERACTION 12Aa-Assertion 06 :- An AssociateInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 12Aa-Assertion 07 :- An AssociateInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 12Aa-Assertion 08 :- An AssociateInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 12Aa-Assertion 09 :- An AssociateInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 12Aa-Assertion 10 :- An AssociateInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 12Aa-Assertion 11 :- An AssociateInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 12Aa-Assertion 12 :- An AssociateInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 12Aa-Assertion 13 :- An AssociateInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 12Aa-Assertion 14 :- An AssociateInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 12Aa-Assertion 15 :- An AssociateInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 12Aa-Assertion 16 :- An AssociateInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 12Aa-Assertion 17 :- An AssociateInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 12Aa-Assertion 18 :- An AssociateInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 12Aa-Assertion 19 :- An AssociateInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 12Aa-Assertion 20 :- An AssociateInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 12Aa-Assertion 21 :- An AssociateInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 12Aa-Assertion 22 :- An AssociateInteraction MUST NOT contain a UploadInteraction.

                            RULE_SET_INTERACTION_12B: Enforce the correct use of the AssociateInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 12Ba-Assertion 1 :- The max-associations attribute value, provided it is not 0, must not be less than the min-associations value.

                            RULE_SET_INTERACTION_13A: Enforce the prohibiting of nested interactions within the MediaInteraction. The set of rules are:-
                            * RULE INTERACTION 13Aa-Assertion 01 :- A MediaInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 13Aa-Assertion 02 :- A MediaInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 13Aa-Assertion 03 :- A MediaInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 13Aa-Assertion 04 :- A MediaInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 13Aa-Assertion 05 :- A MediaInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 13Aa-Assertion 06 :- A MediaInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 13Aa-Assertion 07 :- A MediaInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 13Aa-Assertion 08 :- A MediaInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 13Aa-Assertion 09 :- A MediaInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 13Aa-Assertion 10 :- A MediaInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 13Aa-Assertion 11 :- A MediaInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 13Aa-Assertion 12 :- A MediaInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 13Aa-Assertion 13 :- A MediaInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 13Aa-Assertion 14 :- A MediaInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 13Aa-Assertion 15 :- A MediaInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 13Aa-Assertion 16 :- A MediaInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 13Aa-Assertion 17 :- A MediaInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 13Aa-Assertion 18 :- A MediaInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 13Aa-Assertion 19 :- A MediaInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 13Aa-Assertion 20 :- A MediaInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 13Aa-Assertion 21 :- A MediaInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 13Aa-Assertion 22 :- A MediaInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_13B: Enforce the correct use of the MediaInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 13Ba-Assertion 1 :- The max-plays attribute value must not be less than the min-plays value.

                            RULE_SET_INTERACTION_14A: Enforce the prohibiting of nested interactions within the SliderInteraction. The set of rules are:-
                            * RULE INTERACTION 14Aa-Assertion 01 :- A SliderInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 14Aa-Assertion 02 :- A SliderInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 14Aa-Assertion 03 :- A SliderInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 14Aa-Assertion 04 :- A SliderInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 14Aa-Assertion 05 :- A SliderInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 14Aa-Assertion 06 :- A SliderInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 14Aa-Assertion 07 :- A SliderInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 14Aa-Assertion 08 :- A SliderInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 14Aa-Assertion 09 :- A SliderInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 14Aa-Assertion 10 :- A SliderInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 14Aa-Assertion 11 :- A SliderInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 14Aa-Assertion 12 :- A SliderInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 14Aa-Assertion 13 :- A SliderInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 14Aa-Assertion 14 :- A SliderInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 14Aa-Assertion 15 :- A SliderInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 14Aa-Assertion 16 :- A SliderInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 14Aa-Assertion 17 :- A SliderInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 14Aa-Assertion 18 :- A SliderInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 14Aa-Assertion 19 :- A SliderInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 14Aa-Assertion 20 :- A SliderInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 14Aa-Assertion 21 :- A SliderInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 14Aa-Assertion 22 :- A SliderInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_14B: Enforce the correct use of the SliderInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 14Ba-Assertion 1 :- The upper-bound attribute value must not be less than the lower-bound value.

                            RULE_SET_INTERACTION_15A: Enforce the prohibiting of nested interactions within the DrawingInteraction. The set of rules are:-
                            * RULE INTERACTION 15Aa-Assertion 01 :- A DrawingInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 15Aa-Assertion 02 :- A DrawingInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 15Aa-Assertion 03 :- A DrawingInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 15Aa-Assertion 04 :- A DrawingInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 15Aa-Assertion 05 :- A DrawingInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 15Aa-Assertion 06 :- A DrawingInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 15Aa-Assertion 07 :- A DrawingInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 15Aa-Assertion 08 :- A DrawingInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 15Aa-Assertion 09 :- A DrawingInteraction MUST NOT contain a GraphicGapMatcheInteraction.
                            * RULE INTERACTION 15Aa-Assertion 10 :- A DrawingInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 15Aa-Assertion 11 :- A DrawingInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 15Aa-Assertion 12 :- A DrawingInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 15Aa-Assertion 13 :- A DrawingInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 15Aa-Assertion 14 :- A DrawingInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 15Aa-Assertion 15 :- A DrawingInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 15Aa-Assertion 16 :- A DrawingInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 15Aa-Assertion 17 :- A DrawingInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 15Aa-Assertion 18 :- A DrawingInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 15Aa-Assertion 19 :- A DrawingInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 15Aa-Assertion 20 :- A DrawingInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 15Aa-Assertion 21 :- A DrawingInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 15Aa-Assertion 22 :- A DrawingInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_15B: Enforce the correct use of the DrawingInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 15Ba-Assertion 1 :- The base-type must have a value of file.

                            RULE_SET_INTERACTION_16A: Enforce the prohibiting of nested interactions within the UploadInteraction. The set of rules are:-
                            * RULE INTERACTION 16Aa-Assertion 01 :- An UploadInteraction MUST NOT contain an UploadInteraction.
                            * RULE INTERACTION 16Aa-Assertion 02 :- An UploadInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 16Aa-Assertion 03 :- An UploadInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 16Aa-Assertion 04 :- An UploadInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 16Aa-Assertion 05 :- An UploadInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 16Aa-Assertion 06 :- An UploadInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 16Aa-Assertion 07 :- An UploadInteraction MUST NOT contain a ExtendedTextInteraction.
                            * RULE INTERACTION 16Aa-Assertion 08 :- An UploadInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 16Aa-Assertion 09 :- An UploadInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 16Aa-Assertion 11 :- An UploadInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 16Aa-Assertion 12 :- An UploadInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 16Aa-Assertion 13 :- An UploadInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 16Aa-Assertion 14 :- An UploadInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 16Aa-Assertion 15 :- An UploadInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 16Aa-Assertion 16 :- An UploadInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 16Aa-Assertion 17 :- An UploadInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 16Aa-Assertion 18 :- An UploadInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 16Aa-Assertion 19 :- An UploadInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 16Aa-Assertion 20 :- An UploadInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 16Aa-Assertion 21 :- An UploadInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 16Aa-Assertion 22 :- An UploadInteraction MUST NOT contain a TextEntryInteraction.

                            RULE_SET_INTERACTION_16B: Enforce the correct use of the UploadInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 16Ba-Assertion 1 :- The base-type must have a value of file.

                            RULE_SET_INTERACTION_17A: Enforce the prohibiting of nested interactions within the EndAttemptInteraction. The set of rules are:-
                            * RULE INTERACTION 17Aa-Assertion 01 :- An EndAttempInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 17Aa-Assertion 02 :- An EndAttempInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 17Aa-Assertion 03 :- An EndAttempInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 17Aa-Assertion 04 :- An EndAttempInteraction MUST NOT contain a CusomInteraction.
                            * RULE INTERACTION 17Aa-Assertion 05 :- An EndAttempInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 17Aa-Assertion 06 :- An EndAttempInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 17Aa-Assertion 07 :- An EndAttempInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 17Aa-Assertion 08 :- An EndAttempInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 17Aa-Assertion 09 :- An EndAttempInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 17Aa-Assertion 10 :- An EndAttempInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 17Aa-Assertion 11 :- An EndAttempInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 17Aa-Assertion 12 :- An EndAttempInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 17Aa-Assertion 13 :- An EndAttempInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 17Aa-Assertion 14 :- An EndAttempInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 17Aa-Assertion 15 :- An EndAttempInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 17Aa-Assertion 16 :- An EndAttempInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 17Aa-Assertion 17 :- An EndAttempInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 17Aa-Assertion 18 :- An EndAttempInteraction MUST NOT contain a PositionObjectnteraction.
                            * RULE INTERACTION 17Aa-Assertion 19 :- An EndAttempInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 17Aa-Assertion 20 :- An EndAttempInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 17Aa-Assertion 21 :- An EndAttempInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 17Aa-Assertion 22 :- An EndAttempInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_17B: Enforce the correct use of the EndAttemptInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 17Ba-Assertion 1 :- The base-type must have a value of boolean.

                            RULE_SET_INTERACTION_18A: Enforce the prohibiting of nested interactions within the GapMatchInteraction. The set of rules are:-
                            * RULE INTERACTION 18Aa-Assertion 01 :- A GapMatchInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 18Aa-Assertion 02 :- A GapMatchInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 18Aa-Assertion 03 :- A GapMatchInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 18Aa-Assertion 04 :- A GapMatchInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 18Aa-Assertion 05 :- A GapMatchInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 18Aa-Assertion 06 :- A GapMatchInteraction MUST NOT contain an EndAttempInteraction.
                            * RULE INTERACTION 18Aa-Assertion 07 :- A GapMatchInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 18Aa-Assertion 08 :- A GapMatchInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 18Aa-Assertion 09 :- A GapMatchInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 18Aa-Assertion 10 :- A GapMatchInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 18Aa-Assertion 11 :- A GapMatchInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 18Aa-Assertion 12 :- A GapMatchInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 18Aa-Assertion 13 :- A GapMatchInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 18Aa-Assertion 14 :- A GapMatchInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 18Aa-Assertion 15 :- A GapMatchInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 18Aa-Assertion 16 :- A GapMatchInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 18Aa-Assertion 17 :- A GapMatchInteraction MUST NOT contain a PorableCustomInteraction.
                            * RULE INTERACTION 18Aa-Assertion 18 :- A GapMatchInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 18Aa-Assertion 19 :- A GapMatchInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 18Aa-Assertion 20 :- A GapMatchInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 18Aa-Assertion 21 :- A GapMatchInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 18Aa-Assertion 22 :- A GapMatchInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_18B: Enforce the correct use of the GapMatchInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 18Ba-Assertion 1 :- The base-type must have a value of directedPair.
                            * RULE INTERACTION 18Ba-Assertion 2 :- The max-associations attribute value, provided it is not 0, must not be less than the min-associations value.

                            RULE_SET_INTERACTION_19A: Enforce the prohibiting of nested interactions within the GraphicGapMatchInteraction. The set of rules are:-
                            * RULE INTERACTION 19Aa-Assertion 01 :- A GraphicGapMatchInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 19Aa-Assertion 02 :- A GraphicGapMatchInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 19Aa-Assertion 03 :- A GraphicGapMatchInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 19Aa-Assertion 04 :- A GraphicGapMatchInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 19Aa-Assertion 05 :- A GraphicGapMatchInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 19Aa-Assertion 06 :- A GraphicGapMatchInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 19Aa-Assertion 07 :- A GraphicGapMatchInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 19Aa-Assertion 08 :- A GraphicGapMatchInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 19Aa-Assertion 09 :- A GraphicGapMatchInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 19Aa-Assertion 10 :- A GraphicGapMatchInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 19Aa-Assertion 11 :- A GraphicGapMatchInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 19Aa-Assertion 12 :- A GraphicGapMatchInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 19Aa-Assertion 13 :- A GraphicGapMatchInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 19Aa-Assertion 14 :- A GraphicGapMatchInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 19Aa-Assertion 15 :- A GraphicGapMatchInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 19Aa-Assertion 16 :- A GraphicGapMatchInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 19Aa-Assertion 17 :- A GraphicGapMatchInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 19Aa-Assertion 18 :- A GraphicGapMatchInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 19Aa-Assertion 19 :- A GraphicGapMatchInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 19Aa-Assertion 20 :- A GraphicGapMatchInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 19Aa-Assertion 21 :- A GraphicGapMatchInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 19Aa-Assertion 22 :- A GraphicGapMatchInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_19B: Enforce the correct use of the GraphicGapMatchInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 19Ba-Assertion 1 :- The base-type must have a value of directedPair.

                            RULE_SET_INTERACTION_20A: Enforce the prohibiting of nested interactions within CustomInteracion and PortableCustomInteraction. The set of rules are:-
                            * RULE INTERACTION 20Aa-Assertion 01 :- A CustomInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 20Aa-Assertion 02 :- A CustomInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 20Aa-Assertion 03 :- A CustomInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 20Aa-Assertion 04 :- A CustomInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 20Aa-Assertion 05 :- A CustomInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 20Aa-Assertion 06 :- A CustomInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 20Aa-Assertion 07 :- A CustomInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 20Aa-Assertion 08 :- A CustomInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 20Aa-Assertion 09 :- A CustomInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 20Aa-Assertion 10 :- A CustomInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 20Aa-Assertion 11 :- A CustomInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 20Aa-Assertion 12 :- A CustomInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 20Aa-Assertion 13 :- A CustomInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 20Aa-Assertion 14 :- A CustomInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 20Aa-Assertion 15 :- A CustomInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 20Aa-Assertion 16 :- A CustomInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 20Aa-Assertion 17 :- A CustomInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 20Aa-Assertion 18 :- A CustomInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 20Aa-Assertion 19 :- A CustomInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 20Aa-Assertion 20 :- A CustomInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 20Aa-Assertion 21 :- A CustomInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 20Aa-Assertion 22 :- A CustomInteraction MUST NOT contain an UploadInteraction.
                            * RULE INTERACTION 20Ab-Assertion 01 :- A PortableCustomInteraction MUST NOT contain a PortableCustomInteraction.
                            * RULE INTERACTION 20Ab-Assertion 02 :- A PortableCustomInteraction MUST NOT contain an AssociateInteraction.
                            * RULE INTERACTION 20Ab-Assertion 03 :- A PortableCustomInteraction MUST NOT contain a ChoiceInteraction.
                            * RULE INTERACTION 20Ab-Assertion 04 :- A PortableCustomInteraction MUST NOT contain a CustomInteraction.
                            * RULE INTERACTION 20Ab-Assertion 05 :- A PortableCustomInteraction MUST NOT contain a DrawingInteraction.
                            * RULE INTERACTION 20Ab-Assertion 06 :- A PortableCustomInteraction MUST NOT contain an EndAttemptInteraction.
                            * RULE INTERACTION 20Ab-Assertion 07 :- A PortableCustomInteraction MUST NOT contain an ExtendedTextInteraction.
                            * RULE INTERACTION 20Ab-Assertion 08 :- A PortableCustomInteraction MUST NOT contain a GapMatchInteraction.
                            * RULE INTERACTION 20Ab-Assertion 09 :- A PortableCustomInteraction MUST NOT contain a GraphicAssociateInteraction.
                            * RULE INTERACTION 20Ab-Assertion 10 :- A PortableCustomInteraction MUST NOT contain a GraphicGapMatchInteraction.
                            * RULE INTERACTION 20Ab-Assertion 11 :- A PortableCustomInteraction MUST NOT contain a GraphicOrderInteraction.
                            * RULE INTERACTION 20Ab-Assertion 12 :- A PortableCustomInteraction MUST NOT contain a HotspotInteraction.
                            * RULE INTERACTION 20Ab-Assertion 13 :- A PortableCustomInteraction MUST NOT contain a HottextInteraction.
                            * RULE INTERACTION 20Ab-Assertion 14 :- A PortableCustomInteraction MUST NOT contain an InlineChoiceInteraction.
                            * RULE INTERACTION 20Ab-Assertion 15 :- A PortableCustomInteraction MUST NOT contain a MatchInteraction.
                            * RULE INTERACTION 20Ab-Assertion 16 :- A PortableCustomInteraction MUST NOT contain a MediaInteraction.
                            * RULE INTERACTION 20Ab-Assertion 17 :- A PortableCustomInteraction MUST NOT contain an OrderInteraction.
                            * RULE INTERACTION 20Ab-Assertion 18 :- A PortableCustomInteraction MUST NOT contain a PositionObjectInteraction.
                            * RULE INTERACTION 20Ab-Assertion 19 :- A PortableCustomInteraction MUST NOT contain a SelectPointInteraction.
                            * RULE INTERACTION 20Ab-Assertion 20 :- A PortableCustomInteraction MUST NOT contain a SliderInteraction.
                            * RULE INTERACTION 20Ab-Assertion 21 :- A PortableCustomInteraction MUST NOT contain a TextEntryInteraction.
                            * RULE INTERACTION 20Ab-Assertion 22 :- A PortableCustomInteraction MUST NOT contain an UploadInteraction.

                            RULE_SET_INTERACTION_20B: Enforce the correct use of the PortableCustomInteraction attributes. The set of rules are:-
                            * RULE INTERACTION 20Ba-Assertion 1 :- The 'qti-context-variable' does NOT have a value defined by a 'qti-context-declaration' in the parent AssessmentItem.
                            * RULE INTERACTION 20Bb-Assertion 1 :- The 'qti-template-variable' does NOT have a value defined by a 'qti-template-declaration' in the parent AssessmentItem.

                            RULE_SET_RUBRICBLOCK: Ensure that the constraints on the use of Rubric Blocks are imposed. The set of rules are:-
                            * RULE RUBRICBLOCK 1-Assertion 1 :- The property qti-rubric-block MUST NOT be a child of a qti-rubric-block property i.e. nesting of rubric blocks is not permitted.

                            RULE_SET_SPECIFIC_CLASS_OUTCOMEDEC: Enforce the correct use of the OutcomeDeclaration attributes. The set of rules are:-
                            * RULE SPECIFIC CLASS OUTCOMEDEC 1-Assertion 1 :- The mastery-value attribute value must not be less than the normal-minimum value.
                            * RULE SPECIFIC CLASS OUTCOMEDEC 1-Assertion 2 :- The mastery-value attribute value must not be greater than the normal-maximum value.

                            RULE_SET_SPECIFIC_CLASS_RESPONSEDEC: Enforce the correct use of the ResponseDeclaration attributes. The set of rules are:-
                            * RULE 1 SPECIFIC CLASS RESPONSEDEC-Assertion 1 :- The response variable has an invalid cardinality attribute value (this MUST be single) with respect to the associated InlineChoiceInteraction.
                            * RULE 2 SPECIFIC CLASS RESPONSEDEC-Assertion 1 :- The value of the cardinality attribute for the response variable is inconsistent with the value of the max-choices attribute for the associated ChoiceInteraction.

            History:        Version 1.0: The first set of schematron rules for the IMS Global QTI v3.0 specification.

        </xs:documentation>

        <xs:appinfo>
            <sch:title>Schematron Validation Rules for QTI 3.0 Specification.</sch:title>

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_ARIA_ROLES_1">
                <sch:title>Enforce the correct use of the ARIA Role attribute.</sch:title>

                <sch:rule abstract="false" context="//qti:source">
                    <sch:assert test="count(@role)=0">
                        [RULE ARIA ROLE 1a: Assertion 1] The 'source' tag must not have an ARIA role attribute.<sch:value-of select="concat('The ARIA role value is:', @role)" />
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qti:h1">
                    <sch:assert test="count(@role)=0 or (count(@role)=1 and (@role='heading' or @role='tab' or @role='presentation'))">
                        [RULE ARIA ROLE 1b: Assertion 1] The 'h1' tag may have an ARIA role value of 'heading' or 'tab' or 'presentation' only.<sch:value-of select="concat('The invalid ARIA role value is:', @role)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_GENERAL_1">
                <sch:title>Ensure that certain expressions are NOT used for Response Processing.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-assessment-item/qti:qti-response-processing">
                    <sch:assert test="count(descendant::qti:qti-outcome-minimum) = 0">
                        [RULE GENERAL 1a: Assertion 1] The expression qti-outcome-minimum must NOT be used in ResponseProcessing.<sch:value-of select="concat('The Assessment Item identifier is:', ../@identifier)" />
                    </sch:assert>
                    <sch:assert test="count(descendant::qti:qti-outcome-maximum) = 0">
                        [RULE GENERAL 1a: Assertion 2] The expression qti-outcome-maximum must NOT be used in ResponseProcessing.<sch:value-of select="concat('The Assessment Item identifier is:', ../@identifier)" />
                    </sch:assert>
                    <sch:assert test="count(descendant::qti:qti-test-variables) = 0">
                        [RULE GENERAL 1a: Assertion 3] The expression qti-test-variables must NOT be used in ResponseProcessing.<sch:value-of select="concat('The Assessment Item identifier is:', ../@identifier)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION-RELATED_1">
                <sch:title>Enforce the correct use of the GapText attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-gap-text">
                    <sch:assert test="not(not(@match-max=0) and @match-max &lt; @match-min)">
                        [RULE INTERACTION-RELATED 1a: Assertion 1] The match-max attribute value, provided it is not 0, must not be less than the match-min value.<sch:value-of select="concat('The match-max value is:', @match-max)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION-RELATED_2">
                <sch:title>Enforce the correct use of the GapImg attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-gap-img">
                    <sch:assert test="not(not(@match-max=0) and @match-max &lt; @match-min)">
                        [RULE INTERACTION-RELATED 2a: Assertion 1] The match-max attribute value, provided it is not 0, must not be less than the match-min value.<sch:value-of select="concat('The match-max value is:', @match-max)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION-RELATED_3">
                <sch:title>Enforce the correct use of the AssociableHotspot attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-associable-hotspot">
                    <sch:assert test="not(not(@match-max=0) and @match-max &lt; @match-min)">
                        [RULE INTERACTION-RELATED 3a: Assertion 1] The match-max attribute value, provided it is not 0, must not be less than the match-min value.<sch:value-of select="concat('The match-max value is:', @match-max)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION-RELATED_4">
                <sch:title>Enforce the correct use of the SimpleAssociableChoice attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-simple-associable-choice">
                    <sch:assert test="not(not(@match-max=0) and @match-max &lt; @match-min)">
                        [RULE INTERACTION-RELATED 4a: Assertion 1] The match-max attribute value, provided it is not 0, must not be less than the match-min value.<sch:value-of select="concat('The match-max value is:', @match-max)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_01A">
                <sch:title>Enforce the prohibiting of nested interactions within the TextEntryInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-text-entry-interaction">
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 01] A TextEntryInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 02] A TextEntryInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 03] A TextEntryInteraction MUST NOT contain a AssociateInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 04] A TextEntryInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 05] A TextEntryInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 06] A TextEntryInteraction MUST NOT contain a EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 07] A TextEntryInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 08] A TextEntryInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 09] A TextEntryInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 10] A TextEntryInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 11] A TextEntryInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 12] A TextEntryInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 13] A TextEntryInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 14] A TextEntryInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 15] A TextEntryInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 16] A TextEntryInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 17] A TextEntryInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 18] A TextEntryInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 19] A TextEntryInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 20] A TextEntryInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 21] A TextEntryInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 1Aa: Assertion 22] A TextEntryInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent TextEntryInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_01B">
                <sch:title>Enforce the correct use of the TextEntryInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-text-entry-interaction">
                    <sch:assert test="not(@string-identifier=@response-identifier)">
                        [RULE INTERACTION 1Ba: Assertion 1] The String-Identifier and Response-Identifier attribute values must not be the same.<sch:value-of select="concat('The String Identifier value is:', @string-identifier)" />
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qti:qti-text-entry-interaction[@response-identifier=//qti:qti-response-declaration/@identifier]">
                    <sch:assert test="//qti:qti-response-declaration[@base-type='string'] or //qti:qti-response-declaration[@base-type='float'] or //qti:qti-response-declaration[@base-type='integer']">
                        [RULE INTERACTION 1Bb: Assertion 1] The base-type must have a value of either string, float or integer.<sch:value-of select="concat('The base-type value is:', //qti:qti-response-declaration/@base-type)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_02A">
                <sch:title>Enforce the prohibiting of nested interactions within ChoiceInteraction and InlineChoiceInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-choice-interaction">
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 01] A ChoiceInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 02] A ChoiceInteraction MUST NOT contain a AssociateInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 03] A ChoiceInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 04] A ChoiceInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 05] A ChoiceInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 06] A ChoiceInteraction MUST NOT contain an ExtendedText.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-match-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 07] A ChoiceInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 08] A ChoiceInteraction MUST NOT contain a GraphicAssocciateInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 09] A ChoiceInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 10] A ChoiceInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 11] A ChoiceInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 12] A ChoiceInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 13] A ChoiceInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 14] A ChoiceInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 15] A ChoiceInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 16] A ChoiceInteraction MUST NOT contain a OrderInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 17] A ChoiceInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 18] A ChoiceInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 19] A ChoiceInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 20] A ChoiceInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 21] A ChoiceInteraction MUST NOT contain a TextEnryInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 2Aa: Assertion 22] A ChoiceInteraction MUST NOT contain a UploadInteraction.<sch:value-of select="concat('The ID for the parent ChoiceInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qti:qti-inline-choice-interaction">
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 01] An InlineChoiceInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 02] An InlineChoiceInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 03] An InlineChoiceInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 04] An InlineChoiceInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 05] An InlineChoiceInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 06] An InlineChoiceInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 07] An InlineChoiceInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 08] An InlineChoiceInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 09] An InlineChoiceInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 10] An InlineChoiceInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 11] An InlineChoiceInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 12] An InlineChoiceInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 13] An InlineChoiceInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 14] An InlineChoiceInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 15] An InlineChoiceInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 16] An InlineChoiceInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 17] An InlineChoiceInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 18] An InlineChoiceInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 19] An InlineChoiceInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 20] An InlineChoiceInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 21] An InlineChoiceInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 2Ab: Assertion 22] An InlineChoiceInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent InlineChoiceInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_02B">
                <sch:title>Enforce the correct use of the ChoiceInteraction and InlineChoiceInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-choice-interaction">
                    <sch:assert test="not(not(@max-choices=0) and @max-choices &lt; @min-choices)">
                        [RULE INTERACTION 2Ba: Assertion 1] The  max-choices attribute value, provided it is not 0, must not be less than the Min-Choices value.<sch:value-of select="concat('The max-choices value is:', @max-choices)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_03A">
                <sch:title>Enforce the prohibiting of nested interactions within the ExtendedTextEntryInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-extended-text-interaction">
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 01] An ExtendedTextInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 02] An ExtendedTextInteraction MUST NOT contain an AssociateTextInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 03] An ExtendedTextInteraction MUST NOT contain an ChoiceTextInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 04] An ExtendedTextInteraction MUST NOT contain an CustomInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 05] An ExtendedTextInteraction MUST NOT contain an DrawingInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 06] An ExtendedTextInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 07] An ExtendedTextInteraction MUST NOT contain an GapMatchInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 08] An ExtendedTextInteraction MUST NOT contain an GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 09] An ExtendedTextInteraction MUST NOT contain an GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 10] An ExtendedTextInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 11] An ExtendedTextInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 12] An ExtendedTextInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 13] An ExtendedTextInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 14] An ExtendedTextInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 15] An ExtendedTextInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 16] An ExtendedTextInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 17] An ExtendedTextInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 18] An ExtendedTextInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 19] An ExtendedTextInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 20] An ExtendedTextInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 21] An ExtendedTextInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 3Aa: Assertion 22] An ExtendedTextInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent ExtendedTextInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_03B">
                <sch:title>Enforce the correct use of the ExtendedTextInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-extended-text-interaction">
                    <sch:assert test="not(@string-identifier=@response-identifier)">
                        [RULE INTERACTION 3Ba: Assertion 1] The string-identifier and response-identifier attribute values must not be the same.<sch:value-of select="concat('The string-identifier value is:', @string-identifier)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_04A">
                <sch:title>Enforce the prohibiting of nested interactions within the HotspotInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-hotspot-interaction">
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 01] A HotspotInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 02] A HotspotInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 03] A HotspotInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 04] A HotspotInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 05] A HotspotInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 06] A HotspotInteraction MUST NOT contain a EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 07] A HotspotInteraction MUST NOT contain a ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graph-match-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 08] A HotspotInteraction MUST NOT contain a GraphMatchInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 09] A HotspotInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 10] A HotspotInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 11] A HotspotInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 12] A HotspotInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 13] A HotspotInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 14] A HotspotInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 15] A HotspotInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-ordeer-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 16] A HotspotInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 17] A HotspotInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 18] A HotspotInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 19] A HotspotInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 20] A HotspotInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 21] A HotspotInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-uploadd-interaction)=0">
                        [RULE INTERACTION 4Aa: Assertion 22] A HotspotInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent HospotInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_04B">
                <sch:title>Enforce the correct use of the HotspotInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-hotspot-interaction">
                    <sch:assert test="not(not(@max-choices=0) and @max-choices &lt; @min-choices)">
                        [RULE INTERACTION 4Ba: Assertion 1] The max-choices attribute value, provided it is not 0, must not be less than the min-choices value.<sch:value-of select="concat('The max-choices value is:', @max-choices)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_05A">
                <sch:title>Enforce the prohibiting of nested interactions within the GraphicOrderInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-graphic-order-interaction">
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 01] A GraphicOrderInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 02] A GraphicOrderInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 03] A GraphicOrderInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 04] A GraphicOrderInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 05] A GraphicOrderInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 06] A GraphicOrderInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 07] A GraphicOrderInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 08] A GraphicOrderInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 09] A GraphicOrderInteraction MUST NOT contain a GraphicAssocciateInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 10] A GraphicOrderInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 11] A GraphicOrderInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 12] A GraphicOrderInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 13] A GraphicOrderInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 14] A GraphicOrderInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 15] A GraphicOrderInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 16] A GraphicOrderInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 17] A GraphicOrderInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 18] A GraphicOrderInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 19] A GraphicOrderInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 20] A GraphicOrderInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 21] A GraphicOrderInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 5Aa: Assertion 22] A GraphicOrderInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent GraphicOrderInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_05B">
                <sch:title>Enforce the correct use of the GraphicOrderInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-graphic-order-interaction">
                    <sch:assert test="not(not(@max-choices=0) and @max-choices &lt; @min-choices)">
                        [RULE INTERACTION 5Ba: Assertion 1] The max-choices attribute value, provided it is not 0, must not be less than the min-choices value.<sch:value-of select="concat('The max-choices value is:', @max-choices)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_06A">
                <sch:title>Enforce the prohibiting of nested interactions within the PositionObjectInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-position-object-interaction">
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 01] A PositionObjectInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 02] A PositionObjectInteraction MUST NOT contain a AssociateInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 03] A PositionObjectInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 04] A PositionObjectInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 07] A PositionObjectInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 08] A PositionObjectInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 09] A PositionObjectInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 10] A PositionObjectInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 11] A PositionObjectInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 12] A PositionObjectInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 13] A PositionObjectInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 14] A PositionObjectInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 15] A PositionObjectInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 16] A PositionObjectInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 17] A PositionObjectInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 18] A PositionObjectInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 19] A PositionObjectInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 20] A PositionObjectInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 21] A PositionObjectInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 6Aa: Assertion 22] A PositionObjectInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent PositionObjectInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_06B">
                <sch:title>Enforce the correct use of the PositionObjectInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-position-object-interaction">
                    <sch:assert test="not(not(@max-choices=0) and @max-choices &lt; @min-choices)">
                        [RULE INTERACTION 6Ba: Assertion 1] The max-choices attribute value, provided it is not 0, must not be less than the min-choices value.<sch:value-of select="concat('The Max-Choices value is:', @max-choices)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_07A">
                <sch:title>Enforce the prohibiting of nested interactions within the SelectPointInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-select-point-interaction">
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 01] A SelectPointInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 02] A SelectPointInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 03] A SelectPointInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 04] A SelectPointInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 05] A SelectPointInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 06] A SelectPointInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 07] A SelectPointInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 08] A SelectPointInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 09] A SelectPointInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 11] A SelectPointInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-hotspot-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 12] A SelectPointInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 13] A SelectPointInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 14] A SelectPointInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 15] A SelectPointInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 16] A SelectPointInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 17] A SelectPointInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 18] A SelectPointInteraction MUST NOT contain a PortableInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 19] A SelectPointInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 20] A SelectPointInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 21] A SelectPointInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 7Aa: Assertion 22] A SelectPointInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent SelectPointInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_07B">
                <sch:title>Enforce the correct use of the SelectPointInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-select-point-interaction">
                    <sch:assert test="not(not(@max-choices=0) and @max-choices &lt; @min-choices)">
                        [RULE INTERACTION 7Ba: Assertion 1] The max-choices attribute value, provided it is not 0, must not be less than the min-choices value.<sch:value-of select="concat('The max-choices value is:', @max-choices)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_08A">
                <sch:title>Enforce the prohibiting of nested interactions within the OrderInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-order-interaction">
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 01] An OrderInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 02] An OrderInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 03] An OrderInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 04] An OrderInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 05] An OrderInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 06] An OrderInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 07] An OrderInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 08] An OrderInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 09] An OrderInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 10] An OrderInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 11] An OrderInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 12] An OrderInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 13] An OrderInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 14] An OrderInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 15] An OrderInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 16] An OrderInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 17] An OrderInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 18] An OrderInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 19] An OrderInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 20] An OrderInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 21] An OrderInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 8Aa: Assertion 22] An OrderInteraction MUST NOT contain a UploadInteraction.<sch:value-of select="concat('The ID for the parent OrderInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_08B">
                <sch:title>Enforce the correct use of the OrderInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-order-interaction">
                    <sch:assert test="not(not(@max-choices=0) and @max-choices &lt; @min-choices)">
                        [RULE INTERACTION 8Ba: Assertion 1] The max-choices attribute value, provided it is not 0, must not be less than the min-choices value.<sch:value-of select="concat('The max-choices value is:', @max-choices)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_09A">
                <sch:title>Enforce the prohibiting of nested interactions within the HotTextInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-hottext-interaction">
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 01] A HottextInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 02] A HottextInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 03] A HottextInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 04] A HottextInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 05] A HottextInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 06] A HottextInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 07] A HottextInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 08] A HottextInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 09] A HottextInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 10] A HottextInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 11] A HottextInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-hotspot-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 12] A HottextInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-inline-choice-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 13] A HottextInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-match-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 14] A HottextInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 15] A HottextInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 16] A HottextInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 17] A HottextInteraction MUST NOT contain an PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 18] A HottextInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 19] A HottextInteraction MUST NOT contain a SelectPointInteraction.A<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 20] A HottextInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 21] A HottextInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 9Aa: Assertion 22] A HottextInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent HottextInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_09B">
                <sch:title>Enforce the correct use of the HotTextInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-hottext-interaction">
                    <sch:assert test="not(not(@max-choices=0) and @max-choices &lt; @min-choices)">
                        [RULE INTERACTION 9Ba: Assertion 1] The max-choices attribute value, provided it is not 0, must not be less than the min-choices value.<sch:value-of select="concat('The max-choices value is:', @max-choices)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_10A">
                <sch:title>Enforce the prohibiting of nested interactions within the GraphicAssociateInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-graphic-associate-interaction">
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 01] A GraphicAssociateInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 02] A GraphicAssociateInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 03] A GraphicAssociateInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 04] A GraphicAssociateInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 05] A GraphicAssociateInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 06] A GraphicAssociateInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 07] A GraphicAssociateInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 08] A GraphicAssociateInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 09] A GraphicAssociateInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 10] A GraphicAssociateInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 11] A GraphicAssociateInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 12] A GraphicAssociateInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 13] A GraphicAssociateInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 14] A GraphicAssociateInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 15] A GraphicAssociateInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 16] A GraphicAssociateInteraction MUST NOT contain a OrderInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 17] A GraphicAssociateInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 18] A GraphicAssociateInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 19] A GraphicAssociateInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 20] A GraphicAssociateInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 21] A GraphicAssociateInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 10Aa: Assertion 22] A GraphicAssociateInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent GraphicAssociateInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_10B">
                <sch:title>Enforce the correct use of the GraphicAssociateInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-graphic-associate-interaction">
                    <sch:assert test="not(not(@max-associations=0) and @max-associations &lt; @min-associations)">
                        [RULE INTERACTION 10Ba: Assertion 1] The max-associations attribute value, provided it is not 0, must not be less than the min-associations value.<sch:value-of select="concat('The max-associations value is:', @max-associations)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_11A">
                <sch:title>Enforce the prohibiting of nested interactions within the MatchInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-match-interaction">
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 01] A MatchInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 02] A MatchInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 03] A MatchInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 04] A MatchInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 05] A MatchInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 06] A MatchInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 07] A MatchInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 08] A MatchInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 09] A MatchInteraction MUST NOT contain a GraphicAsssociateInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 10] A MatchInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 11] A MatchInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 12] A MatchInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 13] A MatchInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 14] A MatchInteraction MUST NOT contain a InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 15] A MatchInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="count(ancestor::qti:qti-media-interaction)=0" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 16] A MatchInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 17] A MatchInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 18] A MatchInteraction MUST NOT contain a PositionObjecInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 19] A MatchInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 20] A MatchInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 21] A MatchInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 11Aa: Assertion 22] A MatchInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent MatchInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_11B">
                <sch:title>Enforce the correct use of the MatchInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-match-interaction">
                    <sch:assert test="not(not(@max-associations=0) and @max-associations &lt; @min-associations)">
                        [RULE INTERACTION 11Ba: Assertion 1] The max-associations attribute value, provided it is not 0, must not be less than the min-associations value.<sch:value-of select="concat('The max-associations value is:', @max-associations)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_12A">
                <sch:title>Enforce the prohibiting of nested interactions within the AssociateInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-associate-interaction">
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 01] An AssociateInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 02] An AssociateInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 03] An AssociateInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 04] An AssociateInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 05] An AssociateInteraction MUST NOT contain an EndAtemptInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 06] An AssociateInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 07] An AssociateInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 08] An AssociateInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 09] An AssociateInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 10] An AssociateInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 11] An AssociateInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 12] An AssociateInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 13] An AssociateInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 14] An AssociateInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 15] An AssociateInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 16] An AssociateInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 17] An AssociateInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 18] An AssociateInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 19] An AssociateInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 20] An AssociateInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 21] An AssociateInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 12Aa: Assertion 22] An AssociateInteraction MUST NOT contain a UploadInteraction.<sch:value-of select="concat('The ID for the parent AssociateInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_12B">
                <sch:title>Enforce the correct use of the AssociateInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-associate-interaction">
                    <sch:assert test="not(not(@max-associations=0) and @max-associations &lt; @min-associations)">
                        [RULE INTERACTION 12Ba: Assertion 1] The max-associations attribute value, provided it is not 0, must not be less than the min-associations value.<sch:value-of select="concat('The max-associations value is:', @max-associations)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_13A">
                <sch:title>Enforce the prohibiting of nested interactions within the MediaInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-media-interaction">
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 01] A MediaInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 02] A MediaInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 03] A MediaInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 04] A MediaInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 05] A MediaInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 06] A MediaInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 07] A MediaInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 08] A MediaInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 09] A MediaInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 10] A MediaInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gaphic-order-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 11] A MediaInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 12] A MediaInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 13] A MediaInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 14] A MediaInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 15] A MediaInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 16] A MediaInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 17] A MediaInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 18] A MediaInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 19] A MediaInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 20] A MediaInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 21] A MediaInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 13Aa: Assertion 22] A MediaInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent MediaInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_13B">
                <sch:title>Enforce the correct use of the MediaInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-media-interaction">
                    <sch:assert test="not(@max-plays &lt; @min-plays)">
                        [RULE INTERACTION 13Ba: Assertion 1] The max-plays attribute value must not be less than the min-plays value.<sch:value-of select="concat('The max-plays value is:', @max-plays)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_14A">
                <sch:title>Enforce the prohibiting of nested interactions within the SliderInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-slider-interaction">
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 01] A SliderInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 02] A SliderInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 03] A SliderInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 04] A SliderInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 05] A SliderInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 06] A SliderInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extend-text-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 07] A SliderInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 08] A SliderInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 09] A SliderInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 10] A SliderInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 11] A SliderInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 12] A SliderInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 13] A SliderInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 14] A SliderInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 15] A SliderInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 16] A SliderInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 17] A SliderInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 18] A SliderInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 19] A SliderInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 20] A SliderInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 21] A SliderInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 14Aa: Assertion 22] A SliderInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent SliderInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_14B">
                <sch:title>Enforce the correct use of the SliderInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-slider-interaction">
                    <sch:assert test="not(@upper-bound &lt; @lower-bound)">
                        [RULE INTERACTION 14Ba: Assertion 1] The upper-bound attribute value must not be less than the lower-bound value.<sch:value-of select="concat('The upper-bound value is:', @upper-bound)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_15A">
                <sch:title>Enforce the prohibiting of nested interactions within the DrawingInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-drawing-interaction">
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 01] A DrawingInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 02] A DrawingInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 03] A DrawingInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 04] A DrawingInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 05] A DrawingInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 06] A DrawingInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 07] A DrawingInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 08] A DrawingInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 09] A DrawingInteraction MUST NOT contain a GraphicGapMatcheInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 10] A DrawingInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 11] A DrawingInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 12] A DrawingInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 13] A DrawingInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 14] A DrawingInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 15] A DrawingInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 16] A DrawingInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 17] A DrawingInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 18] A DrawingInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 19] A DrawingInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 20] A DrawingInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 21] A DrawingInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 15Aa: Assertion 22] A DrawingInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent DrawingInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_15B">
                <sch:title>Enforce the correct use of the DrawingInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-drawing-interaction">
                    <sch:assert test="//qti:qti-response-declaration[@base-type='file']">
                        [RULE INTERACTION 15Ba: Assertion 1] The base-type must have a value of file.<sch:value-of select="concat('The base-type value is:', //qti:qti-response-declaration/@base-type)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_16A">
                <sch:title>Enforce the prohibiting of nested interactions within the UploadInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-upload-interaction">
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 01] An UploadInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 02] An UploadInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 03] An UploadInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 04] An UploadInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 05] An UploadInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 06] An UploadInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 07] An UploadInteraction MUST NOT contain a ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 08] An UploadInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 09] An UploadInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 11] An UploadInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 12] An UploadInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 13] An UploadInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 14] An UploadInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 15] An UploadInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 16] An UploadInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 17] An UploadInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 18] An UploadInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 19] An UploadInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 20] An UploadInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 21] An UploadInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 16Aa: Assertion 22] An UploadInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent UploadInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_16B">
                <sch:title>Enforce the correct use of the UploadInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-upload-interaction">
                    <sch:assert test="//qti:qti-response-declaration[@base-type='file']">
                        [RULE INTERACTION 16Ba: Assertion 1] The base-type must have a value of file.<sch:value-of select="concat('The base-type value is:', //qti:qti-response-declaration/@base-type)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_17A">
                <sch:title>Enforce the prohibiting of nested interactions within the EndAttemptInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-end-attempt-interaction">
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 01] An EndAttempInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 02] An EndAttempInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 03] An EndAttempInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-accustom-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 04] An EndAttempInteraction MUST NOT contain a CusomInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 05] An EndAttempInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 06] An EndAttempInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 07] An EndAttempInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 08] An EndAttempInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 09] An EndAttempInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 10] An EndAttempInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 11] An EndAttempInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 12] An EndAttempInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 13] An EndAttempInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 14] An EndAttempInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 15] An EndAttempInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 16] An EndAttempInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 17] An EndAttempInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 18] An EndAttempInteraction MUST NOT contain a PositionObjectnteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 19] An EndAttempInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 20] An EndAttempInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 21] An EndAttempInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 17Aa: Assertion 22] An EndAttempInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent EndAttemptInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_17B">
                <sch:title>Enforce the correct use of the EndAttemptInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-end-attempt-interaction">
                    <sch:assert test="//qti:qti-response-declaration[@base-type='boolean']">
                        [RULE INTERACTION 17Ba: Assertion 1] The base-type must have a value of boolean.<sch:value-of select="concat('The base-type value is:', //qti:qti-response-declaration/@base-type)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_18A">
                <sch:title>Enforce the prohibiting of nested interactions within the GapMatchInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-gap-match-interaction">
                    <sch:assert test="count(ancestor::qti:qi-gap-match-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 01] A GapMatchInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 02] A GapMatchInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 03] A GapMatchInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 04] A GapMatchInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 05] A GapMatchInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 06] A GapMatchInteraction MUST NOT contain an EndAttempInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 07] A GapMatchInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 08] A GapMatchInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 09] A GapMatchInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 10] A GapMatchInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 11] A GapMatchInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 12] A GapMatchInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inloine-choice-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 13] A GapMatchInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 14] A GapMatchInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 15] A GapMatchInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 16] A GapMatchInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 17] A GapMatchInteraction MUST NOT contain a PorableCustomInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 18] A GapMatchInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 19] A GapMatchInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 20] A GapMatchInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 21] A GapMatchInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 18Aa: Assertion 22] A GapMatchInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent GapMatchInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_18B">
                <sch:title>Enforce the correct use of the GapMatchInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-gap-match-interaction">
                    <sch:assert test="//qti:qti-response-declaration[@base-type='directedPair']">
                        [RULE INTERACTION 18Ba: Assertion 1] The base-type must have a value of directedPair.<sch:value-of select="concat('The base-type value is:', //qti:qti-response-declaration/@base-type)" />
                    </sch:assert>
                    <sch:assert test="not(not(@max-associations=0) and @max-associations &lt; @min-associations)">
                        [RULE INTERACTION 18Ba: Assertion 2] The max-associations attribute value, provided it is not 0, must not be less than the min-associations value.<sch:value-of select="concat('The max-associations value is:', @max-associations)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_19A">
                <sch:title>Enforce the prohibiting of nested interactions within the GraphicGapMatchInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-graphic-gap-match-interaction">
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 01] A GraphicGapMatchInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 02] A GraphicGapMatchInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 03] A GraphicGapMatchInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 04] A GraphicGapMatchInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 05] A GraphicGapMatchInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 06] A GraphicGapMatchInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 07] A GraphicGapMatchInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 08] A GraphicGapMatchInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 09] A GraphicGapMatchInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 10] A GraphicGapMatchInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 11] A GraphicGapMatchInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 12] A GraphicGapMatchInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 13] A GraphicGapMatchInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 14] A GraphicGapMatchInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 15] A GraphicGapMatchInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 16] A GraphicGapMatchInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 17] A GraphicGapMatchInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 18] A GraphicGapMatchInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 19] A GraphicGapMatchInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 20] A GraphicGapMatchInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 21] A GraphicGapMatchInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 19Aa: Assertion 22] A GraphicGapMatchInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent GraphicGapMatch is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_19B">
                <sch:title>Enforce the correct use of the GraphicGapMatchInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-graphic-gap-match-interaction">
                    <sch:assert test="//qti:qti-response-declaration[@base-type='directedPair']">
                        [RULE INTERACTION 19Ba: Assertion 1] The base-type must have a value of directedPair.<sch:value-of select="concat('The base-type value is:', //qti:qti-response-declaration/@base-type)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_20A">
                <sch:title>Enforce the prohibiting of nested interactions within CustomInteracion and PortableCustomInteraction.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-custom-interation">
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 01] A CustomInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 02] A CustomInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 03] A CustomInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 04] A CustomInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 05] A CustomInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 06] A CustomInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 07] A CustomInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 08] A CustomInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 09] A CustomInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 10] A CustomInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 11] A CustomInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 12] A CustomInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 13] A CustomInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 14] A CustomInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 15] A CustomInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 16] A CustomInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 17] A CustomInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 18] A CustomInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 19] A CustomInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 20] A CustomInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 21] A CustomInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 20Aa: Assertion 22] A CustomInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent CustomInteraction', @id)" />
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qti:qti-portable-custom-interaction">
                    <sch:assert test="count(ancestor::qti:qti-portable-custom-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 01] A PortableCustomInteraction MUST NOT contain a PortableCustomInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-associate-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 02] A PortableCustomInteraction MUST NOT contain an AssociateInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-choice-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 03] A PortableCustomInteraction MUST NOT contain a ChoiceInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-custom-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 04] A PortableCustomInteraction MUST NOT contain a CustomInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-drawing-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 05] A PortableCustomInteraction MUST NOT contain a DrawingInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-end-attempt-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 06] A PortableCustomInteraction MUST NOT contain an EndAttemptInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-extended-text-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 07] A PortableCustomInteraction MUST NOT contain an ExtendedTextInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-gap-match-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 08] A PortableCustomInteraction MUST NOT contain a GapMatchInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-associate-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 09] A PortableCustomInteraction MUST NOT contain a GraphicAssociateInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-gap-match-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 10] A PortableCustomInteraction MUST NOT contain a GraphicGapMatchInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-graphic-order-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 11] A PortableCustomInteraction MUST NOT contain a GraphicOrderInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hotspot-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 12] A PortableCustomInteraction MUST NOT contain a HotspotInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-hottext-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 13] A PortableCustomInteraction MUST NOT contain a HottextInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-inline-choice-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 14] A PortableCustomInteraction MUST NOT contain an InlineChoiceInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-match-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 15] A PortableCustomInteraction MUST NOT contain a MatchInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-media-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 16] A PortableCustomInteraction MUST NOT contain a MediaInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-order-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 17] A PortableCustomInteraction MUST NOT contain an OrderInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-position-object-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 18] A PortableCustomInteraction MUST NOT contain a PositionObjectInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-select-point-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 19] A PortableCustomInteraction MUST NOT contain a SelectPointInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-slider-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 20] A PortableCustomInteraction MUST NOT contain a SliderInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-text-entry-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 21] A PortableCustomInteraction MUST NOT contain a TextEntryInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                    <sch:assert test="count(ancestor::qti:qti-upload-interaction)=0">
                        [RULE INTERACTION 20Ab: Assertion 22] A PortableCustomInteraction MUST NOT contain an UploadInteraction.<sch:value-of select="concat('The ID for the parent PortableCustomInteraction is:', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_INTERACTION_20B">
                <sch:title>Enforce the correct use of the PortableCustomInteraction attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-portable-custom-interaction/qti:qti-context-variable">
                    <sch:assert test="@identifier=//qti:qti-assessment-item/qti:qti-context-declaration/@identifier">
                        [RULE INTERACTION 20Ba: Assertion 1] The 'qti-context-variable' does NOT have a value defined by a 'qti-context-declaration' in the parent AssessmentItem.<sch:value-of select="concat('The PCI identifier is [ ', ../@custom-interaction-type-identifier, ' ] for invalid context variable [ ', @identifier, ' ]')" />
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qti:qti-portable-custom-interaction/qti:qti-template-variable">
                    <sch:assert test="@templateIdentifier=//qti:qti-assessment-item/qti:qti-template-declaration/@identifier">
                        [RULE INTERACTION 20Bb: Assertion 1] The 'qti-template-variable' does NOT have a value defined by a 'qti-template-declaration' in the parent AssessmentItem.<sch:value-of select="concat('The PCI identifier is [ ', ../@custom-interaction-type-identifier, ' ] for invalid context variable [ ', @identifier, ' ]')" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_RUBRICBLOCK">
                <sch:title>Ensure that the constraints on the use of Rubric Blocks are imposed.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-rubric-block">
                    <sch:assert test="count(descendant::qti:qti-rubric-block) = 0">
                        [RULE RUBRICBLOCK 1: Assertion 1] The property qti-rubric-block MUST NOT be a child of a qti-rubric-block property i.e. nesting of rubric blocks is not permitted.<sch:value-of select="concat('The identifier for the parent object is: ', ../@identifier)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_SPECIFIC_CLASS_OUTCOMEDEC">
                <sch:title>Enforce the correct use of the OutcomeDeclaration attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-outcome-declaration">
                    <sch:assert test="not(@mastery-value &lt; @normal-minimum)">
                        [RULE SPECIFIC CLASS OUTCOMEDEC 1: Assertion 1] The mastery-value attribute value must not be less than the normal-minimum value.<sch:value-of select="concat('The mastery-value value is:', @mastery-value)" />
                    </sch:assert>
                    <sch:assert test="not(@mastery-value &gt; @normal-maximum)">
                        [RULE SPECIFIC CLASS OUTCOMEDEC 1: Assertion 2] The mastery-value attribute value must not be greater than the normal-maximum value.<sch:value-of select="concat('The mastery-value value is:', @mastery-value)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_SPECIFIC_CLASS_RESPONSEDEC">
                <sch:title>Enforce the correct use of the ResponseDeclaration attributes.</sch:title>

                <sch:rule abstract="false" context="//qti:qti-inline-choice-interaction">
                    <sch:assert test="count(//qti:qti-response-declaration[not(@cardinality='single')][@identifier=//qti:qti-inline-choice-interaction[@max-choices and not(@max-choices=1)]/@response-identifier])=0">
                        [RULE 1 SPECIFIC CLASS RESPONSEDEC: Assertion 1] The response variable has an invalid cardinality attribute value (this MUST be single) with respect to the associated InlineChoiceInteraction.<sch:value-of select="concat('The invalid response declaration cardinality value is:', //qti:qti-response-declaration[@identifier=//qti:qti-inline-choice-interaction/@response-identifier and not(@cardinality='single')]/@cardinality)" />
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qti:qti-choice-interaction">
                    <sch:assert test="count(//qti:qti-response-declaration[@cardinality='single'][@identifier=//qti:qti-choice-interaction[@max-choices and not(@max-choices=1)]/@response-identifier])=0">
                        [RULE 2 SPECIFIC CLASS RESPONSEDEC: Assertion 1] The value of the cardinality attribute for the response variable is inconsistent with the value of the max-choices attribute for the associated ChoiceInteraction.<sch:value-of select="concat('The inconsistent response declaration identifier is:', @response-identifier)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

        </xs:appinfo>
    </xs:annotation>

    <!-- Generate Global Attributes (non-assigned) ******************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate Global Attributes *********************************************************************** -->

    <xs:attributeGroup name="extension.CustomInteraction.Attr">
        <xs:anyAttribute namespace = "##other" processContents = "lax" />
    </xs:attributeGroup>

    <xs:attributeGroup name="extension.CustomOperator.Attr">
        <xs:anyAttribute namespace = "##other" processContents = "lax" />
    </xs:attributeGroup>

    <xs:attributeGroup name="extension.Ordering.Attr">
        <xs:anyAttribute namespace = "##other" processContents = "strict" />
    </xs:attributeGroup>

    <xs:attributeGroup name="extension.Selection.Attr">
        <xs:anyAttribute namespace = "##other" processContents = "strict" />
    </xs:attributeGroup>

    <!-- ================================================================================================== -->

    <!-- Generate Global List Types *********************************************************************** -->

    <xs:simpleType name="IdentifierListDType">
        <xs:restriction base="xs:NCName" />
    </xs:simpleType>

    <xs:simpleType name="IntegerListDType">
        <xs:restriction base="xs:int" />
    </xs:simpleType>

    <xs:simpleType name="MimeTypeListDType">
        <xs:restriction base="MimeTypeDType" />
    </xs:simpleType>

    <xs:simpleType name="StringListDType">
        <xs:restriction base="xs:string" />
    </xs:simpleType>

    <xs:simpleType name="ToleranceListDType">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string" />
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:double" />
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="ARIARelevantListDType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="additions" />
            <xs:enumeration value="removals" />
            <xs:enumeration value="text" />
            <xs:enumeration value="all" />
            <xs:enumeration value="additions text" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ViewEnumDType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="author" />
            <xs:enumeration value="candidate" />
            <xs:enumeration value="proctor" />
            <xs:enumeration value="scorer" />
            <xs:enumeration value="testConstructor" />
            <xs:enumeration value="tutor" />
        </xs:restriction>
    </xs:simpleType>

    <!-- ================================================================================================== -->

    <!-- Generate Namespaced extension Group  ************************************************************* -->

    <xs:group name="grpStrict.any">
        <xs:annotation>
            <xs:documentation>
                Any namespaced element from any namespace, other than the target namespace, may be included within an "any" element.
                The namespace for the imported element must be defined in the instance, and the schema must be imported.
                The extension has a definition of "strict" i.e. they must have their own namespace.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:any namespace = "##other" processContents = "strict" minOccurs = "0" maxOccurs = "unbounded" />
        </xs:sequence>
    </xs:group>

    <xs:group name="grpLax.any">
        <xs:annotation>
            <xs:documentation>
                Any namespaced element from any namespace, other than the target namespace, may be included within an "any" element.
                The namespace for the imported element must be defined in the instance, and the schema must be imported.
                The extension has a definition of "lax" i.e. validation is not required if the XSD for the extension is not available.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:any namespace = "##other" processContents = "lax" minOccurs = "0" maxOccurs = "unbounded" />
        </xs:sequence>
    </xs:group>

    <xs:group name="grpAnyLax.any">
        <xs:annotation>
            <xs:documentation>
                Any namespaced element from any namespace may be included within an "any" element.
                The namespace for the imported element must be defined in the instance, and the schema must be imported.
                The extension has a definition of "lax" i.e. validation is not required if the XSD for the extension is not available.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:any namespace = "##any" processContents = "lax" minOccurs = "0" maxOccurs = "unbounded" />
        </xs:sequence>
    </xs:group>

    <!-- ================================================================================================== -->

    <!-- Generate Special DataTypes  ********************************************************************** -->

    <xs:complexType name="EmptyPrimitiveTypeDType">
        <xs:complexContent>
            <xs:restriction base="xs:anyType" />
        </xs:complexContent>
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Generate the enumerated simpleType declarations ************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Parameter) ***************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Derived) ******************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Union) ********************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Complex) ******************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the derived data-type elements based upon simpleType ************************************ -->

    <xs:simpleType name="ARIALevelIntegerDType">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="1" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="CoordsDType">
        <xs:restriction base="xs:normalizedString">
            <xs:pattern value="(([0-9]+%?[,]){2}([0-9]+%?))|(([0-9]+%?[,]){3}([0-9]+%?))|(([0-9]+%?[,]){2}(([0-9]+%?[,]){2})+([0-9]+%?[,])([0-9]+%?))" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EncVariableStringDType">
        <xs:restriction base="xs:string">
            <xs:pattern value="\{[\i-[:]][\c-[:]]*\}" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="FileHrefDType">
        <xs:restriction base="xs:anyURI" />
    </xs:simpleType>

    <xs:simpleType name="IdentifierDType">
        <xs:restriction base="xs:NCName" />
    </xs:simpleType>

    <xs:simpleType name="LengthDType">
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9]+%?" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="MimeTypeDType">
        <xs:restriction base="xs:normalizedString">
            <xs:pattern value="[\p{IsBasicLatin}-[()&lt;&gt;@,;:\\&quot;/\[\]?=]]+/[\p{IsBasicLatin}-[()&lt;&gt;@,;:\\&quot;/\[\]?=]]+" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="NonNegativeDoubleDType">
        <xs:restriction base="xs:double">
            <xs:minInclusive value="0.0" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="SupportExtStringDType">
        <xs:restriction base="xs:normalizedString">
            <xs:pattern value="(ext:)[a-zA-Z0-9_\.\-]+" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="URLDType">
        <xs:restriction base="xs:normalizedString" />
    </xs:simpleType>

    <xs:simpleType name="UniqueIdentifierDType">
        <xs:restriction base="xs:ID" />
    </xs:simpleType>

    <xs:simpleType name="UniqueIdentifierRefDType">
        <xs:restriction base="xs:IDREF" />
    </xs:simpleType>

    <xs:simpleType name="UseExtensionStringDType">
        <xs:restriction base="xs:normalizedString">
            <xs:pattern value="(ext:)[a-zA-Z0-9_\.\-]+" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="VariableStringDType">
        <xs:restriction base="xs:string">
            <xs:pattern value="[\i-[:]][\c-[:]]*" />
        </xs:restriction>
    </xs:simpleType>

    <!-- ================================================================================================== -->

    <!-- Generate the derived data-type elements based upon derived simpleType **************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the ComplexTypes ************************************************************************ -->

    <xs:complexType name="ADType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the functionality of the HTML 'a' tag and is used to identifiy a link. If t-
                he 'a' tag has an href attribute, then it represents a hyperlink (a hypertext anchor) lab-
                eled by its contents. If the a element has no href attribute, then the element represents
                a placeholder for where a link might otherwise have been placed, if it had been relevant,
                consisting of just the element's contents.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-text-entry-interaction" type="TextEntryInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hottext" type="HotTextDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-gap" type="GapDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-inline-choice-interaction" type="InlineChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-end-attempt-interaction" type="EndAttemptInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-custom-interaction" type="CustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="href" use="required" type="xs:anyURI" />
                <xs:attribute name="type" use="optional" type="MimeTypeDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AdaptiveSelectionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the set of data that is to be supplied to a Computer Adaptive T-
                esting (CAT) engine. This information is required when a CAT engine is to be used to dete-
                rmine which items are to be supplied next. The details for this data is defined in the IMS
                Computer Adaptive Testing 1.0 specification [CAT, 19] which defines the API to the CAT en-
                gine. When using an extenal CAT engine there are implementation issues that MUST be addre-
                ssed to ensure consistent behavior with other QTI features such as Selection, Ordering, B-
                ranching, etc.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-adaptive-engine-ref" type="AdaptiveHrefDType" minOccurs="1" maxOccurs="1" />
            <xs:element name="qti-adaptive-settings-ref" type="AdaptiveHrefDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-usagedata-ref" type="AdaptiveHrefDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-metadata-ref" type="AdaptiveHrefDType" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="AnyNDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is one of the expression functions. The 'anyN' operator takes one or more sub-expres-
                sions each with a base-type of boolean and single cardinality. The result is a single boo-
                lean which is true if at least min of the sub-expressions are true and at most max of the
                sub-expressions are true. If more than n - min sub-expressions are false (where n is the
                total number of sub-expressions) or more than max sub-expressions are true then the result
                is false. If one or more sub-expressions are NULL then it is possible that neither of the-
                se conditions is satisfied, in which case the operator results in NULL. For example, if m-
                in is 3 and max is 4 and the sub-expressions have values {true,true,false,NULL} then the
                operator results in NULL whereas {true,false,false,NULL} results in false and {true,true,-
                true,NULL} results in true. The result NULL indicates that the correct value for the oper-
                ator cannot be determined.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="min" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:integer" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="VariableStringDType" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="max" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:integer" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="VariableStringDType" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="AreaMappingDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A special class used to create a mapping from a source set of point values to a target set
                of float values. When mapping containers, the result is the sum of the mapped values from
                the target set. See mapResponsePoint for details. The attributes have the same meaning as
                the similarly named attributes on mapping.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-area-map-entry" type="AreaMapEntryDType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="lower-bound" use="optional" type="xs:double" />
        <xs:attribute name="upper-bound" use="optional" type="xs:double" />
        <xs:attribute name="default-value" use="optional" default="0" type="xs:double" />
    </xs:complexType>

    <xs:complexType name="ARIABaseDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a base class for all of the ARIA characteristics for a non-empty instance. It is
                from this container that all of the other non-empty classes inherit their set of ARIA cap-
                abilities. This set of characteristics is taken from the Accessible Rich Internet Applica-
                tions (WAI-ARIA) specification [ARIA, 14], [WAI-ARIA, 17] and [WAI-ARIA, 21]. This specif-
                ication provides an ontology of roles, states, and properties that define accessible user
                interface elements and can be used to improve the accessibility and interoperability of w-
                eb content and applications. These semantics are designed to allow an author to properly
                convey user interface behaviors and structural information to assistive technologies in d-
                ocument-level markup.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
        </xs:sequence>
        <xs:attribute name="role" use="optional">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        The permitted set of values for the ARIA roles that have been identified as applicable to
                        QTI XML markup.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="article" />
                    <xs:enumeration value="columnheader" />
                    <xs:enumeration value="definition" />
                    <xs:enumeration value="document" />
                    <xs:enumeration value="group" />
                    <xs:enumeration value="heading" />
                    <xs:enumeration value="img" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="listitem" />
                    <xs:enumeration value="math" />
                    <xs:enumeration value="note" />
                    <xs:enumeration value="presentation" />
                    <xs:enumeration value="region" />
                    <xs:enumeration value="row" />
                    <xs:enumeration value="rowgroup" />
                    <xs:enumeration value="rowheader" />
                    <xs:enumeration value="separator" />
                    <xs:enumeration value="toolbar" />
                    <xs:enumeration value="button" />
                    <xs:enumeration value="checkbox" />
                    <xs:enumeration value="gridcell" />
                    <xs:enumeration value="link" />
                    <xs:enumeration value="log" />
                    <xs:enumeration value="option" />
                    <xs:enumeration value="radio" />
                    <xs:enumeration value="slider" />
                    <xs:enumeration value="spinbutton" />
                    <xs:enumeration value="status" />
                    <xs:enumeration value="tab" />
                    <xs:enumeration value="tabpanel" />
                    <xs:enumeration value="textbox" />
                    <xs:enumeration value="timer" />
                    <xs:enumeration value="listbox" />
                    <xs:enumeration value="radiogroup" />
                    <xs:enumeration value="tablist" />
                    <xs:enumeration value="complementary" />
                    <xs:enumeration value="contentinfo" />
                    <xs:enumeration value="alert" />
                    <xs:enumeration value="alertdialog" />
                    <xs:enumeration value="application" />
                    <xs:enumeration value="banner" />
                    <xs:enumeration value="combobox" />
                    <xs:enumeration value="dialog" />
                    <xs:enumeration value="form" />
                    <xs:enumeration value="grid" />
                    <xs:enumeration value="main" />
                    <xs:enumeration value="marquee" />
                    <xs:enumeration value="menu" />
                    <xs:enumeration value="menubar" />
                    <xs:enumeration value="menuitem" />
                    <xs:enumeration value="menuitemcheckbox" />
                    <xs:enumeration value="menuitemradio" />
                    <xs:enumeration value="navigation" />
                    <xs:enumeration value="progressbar" />
                    <xs:enumeration value="scrollbar" />
                    <xs:enumeration value="search" />
                    <xs:enumeration value="tooltip" />
                    <xs:enumeration value="tree" />
                    <xs:enumeration value="treegrid" />
                    <xs:enumeration value="treeitem" />
                    <xs:enumeration value="searchbox" />
                    <xs:enumeration value="switch" />
                    <xs:enumeration value="term" />
                    <xs:enumeration value="figure" />
                    <xs:enumeration value="code" />
                    <xs:enumeration value="time" />
                    <xs:enumeration value="subscript" />
                    <xs:enumeration value="superscript" />
                    <xs:enumeration value="meter" />
                    <xs:enumeration value="generic" />
                    <xs:enumeration value="insertion" />
                    <xs:enumeration value="deletion" />
                    <xs:enumeration value="strong" />
                    <xs:enumeration value="emphasis" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="aria-controls" use="optional" type="xs:IDREFS" />
        <xs:attribute name="aria-describedby" use="optional" type="xs:IDREFS" />
        <xs:attribute name="aria-flowto" use="optional" type="xs:IDREFS" />
        <xs:attribute name="aria-label" use="optional" type="xs:normalizedString" />
        <xs:attribute name="aria-labelledby" use="optional" type="xs:IDREFS" />
        <xs:attribute name="aria-level" use="optional" type="ARIALevelIntegerDType" />
        <xs:attribute name="aria-live" use="optional" default="off">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                         The permitted set of values for the aria-live ARIA annotations.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="off" />
                    <xs:enumeration value="polite" />
                    <xs:enumeration value="assertive" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="aria-orientation" use="optional" default="horizontal">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        The set of permitted values that indicate the orientation of the associated element.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="vertical" />
                    <xs:enumeration value="horizontal" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="aria-owns" use="optional" type="xs:IDREFS" />
        <xs:attribute name="aria-hidden" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="aria-activedescendant" use="optional" type="xs:IDREF" />
        <xs:attribute name="aria-atomic" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="aria-autocomplete" use="optional" default="none">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        The permitted set of values for the aria-autocomplete ARIA annotations.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="inline" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="both" />
                    <xs:enumeration value="none" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="aria-busy" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="aria-checked" use="optional" default="undefined">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                         The permitted set of values for the aria-checked ARIA annotations.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="mixed" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="aria-disabled" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="aria-expanded" use="optional" default="undefined">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                         The permitted set of values for the aria-expanded ARIA annotations.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="aria-haspopup" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="aria-invalid" use="optional" default="false">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                         The permitted set of values for the aria-invalid ARIA annotations.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="grammar" />
                    <xs:enumeration value="spelling" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="aria-multiline" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="aria-multiselectable" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="aria-posinset" use="optional" type="ARIALevelIntegerDType" />
        <xs:attribute name="aria-pressed" use="optional" default="undefined">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                         The permitted set of values for the aria-pressed ARIA annotations.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="mixed" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="aria-readonly" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="aria-relevant" use="optional" default="additions text">
            <xs:simpleType>
                <xs:list itemType="ARIARelevantListDType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="aria-required" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="aria-selected" use="optional" default="undefined">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                         The permitted set of values for the aria-selected ARIA annotations.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="aria-setsize" use="optional" type="xs:integer" />
        <xs:attribute name="aria-sort" use="optional" default="none">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                         The permitted set of values for the aria-sort ARIA annotations.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ascending" />
                    <xs:enumeration value="descending" />
                    <xs:enumeration value="none" />
                    <xs:enumeration value="other" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="aria-valuemax" use="optional" type="xs:decimal" />
        <xs:attribute name="aria-valuemin" use="optional" type="xs:decimal" />
        <xs:attribute name="aria-valuenow" use="optional" type="xs:decimal" />
        <xs:attribute name="aria-valuetext" use="optional" type="xs:string" />
        <xs:attribute name="aria-modal" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="aria-current" use="optional" default="false">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        This is the permitted vocabulary for the 'aria-current' characteristic. The 'aria-current'
                        attribute is used when an element within a set of related elements is visually styled to
                        indicate it is the current item in the set.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="page" />
                    <xs:enumeration value="step" />
                    <xs:enumeration value="location" />
                    <xs:enumeration value="date" />
                    <xs:enumeration value="time" />
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="aria-placeholder" use="optional" type="xs:string" />
        <xs:attribute name="aria-colcount" use="optional" type="xs:nonNegativeInteger" />
        <xs:attribute name="aria-rowcount" use="optional" type="xs:nonNegativeInteger" />
        <xs:attribute name="aria-colindex" use="optional" type="xs:nonNegativeInteger" />
        <xs:attribute name="aria-rowindex" use="optional" type="xs:nonNegativeInteger" />
        <xs:attribute name="aria-colspan" use="optional" type="xs:nonNegativeInteger" />
        <xs:attribute name="aria-rowspan" use="optional" type="xs:nonNegativeInteger" />
        <xs:attribute name="aria-keyshortcuts" use="optional" type="xs:string" />
        <xs:attribute name="aria-roledescription" use="optional" type="xs:string" />
        <xs:attribute name="aria-errormessage" use="optional" type="xs:IDREF" />
        <xs:attribute name="aria-details" use="optional" type="xs:IDREF" />
    </xs:complexType>

    <xs:complexType name="AssessmentItemDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An assessment item encompasses the information that is presented to a candidate and infor-
                mation about how to score the item. Scoring takes place when candidate responses are tran-
                sformed into outcomes by response processing rules. It is sometimes desirable to have sev-
                eral different items that appear the same to the candidate but which are scored different-
                ly. In this specification, these are distinct items by definition and must therefore have
                distinct identifiers. To help facilitate the exchange of items that share significant par-
                ts of their presentation this specification supports the inclusion of separately managed
                item fragments (see Item and Test Fragments) in the qti-item-body.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-context-declaration" type="ContextDeclarationDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-response-declaration" type="ResponseDeclarationDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element ref="qti-outcome-declaration" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-template-declaration" type="TemplateDeclarationDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-template-processing" type="TemplateProcessingDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-assessment-stimulus-ref" type="AssessmentStimulusRefDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-companion-materials-info" type="CompanionMaterialsInfoDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-stylesheet" type="StyleSheetDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-item-body" type="ItemBodyDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-catalog-info" type="CatalogInfoDType" minOccurs="0" maxOccurs="1" />
            <xs:element ref="qti-response-processing" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-modal-feedback" type="ModalFeedbackDType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="identifier" use="required" type="IdentifierDType" />
        <xs:attribute name="title" use="required" type="xs:normalizedString" />
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
        <xs:attribute ref="xml:lang" use="optional" />
        <xs:attribute name="tool-name" use="optional" type="xs:normalizedString" />
        <xs:attribute name="tool-version" use="optional" type="xs:normalizedString" />
        <xs:attribute name="adaptive" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="time-dependent" use="required" type="xs:boolean" />
        <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
    </xs:complexType>

    <xs:complexType name="AssessmentItemRefDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Items are incorporated into the test by reference and not by direct aggregation. Note that
                the identifier of the reference need not have any meaning outside the test. In particular
                it is not required to be unique in the context of any catalog, or be represented in the i-
                tem's metadata.

            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-pre-condition" type="LogicSingleDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-branch-rule" type="BranchRuleDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-item-session-control" type="ItemSessionControlDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-time-limits" type="TimeLimitsDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-variable-mapping" type="VariableMappingDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-weight" type="WeightDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-template-default" type="TemplateDefaultDType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="identifier" use="required" type="IdentifierDType" />
        <xs:attribute name="required" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="fixed" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringListDType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="href" use="required" type="xs:anyURI" />
        <xs:attribute name="category" use="optional">
            <xs:simpleType>
                <xs:list itemType="IdentifierListDType" />
            </xs:simpleType>
        </xs:attribute>
        <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
    </xs:complexType>

    <xs:complexType name="AssessmentSectionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An assessment section groups together individual item references and/or sub-sections. A s-
                ection can be composed of any hierarchy/combination of items and sections. A section can
                only reference an item using a qti-assessment-item-ref object but it may contain or refer-
                ence other sections. The grouping of the sections/items depends upon the nature of the pa-
                rent section i.e. each section can be used for different grouping criteria e.g. organizat-
                ional, pedagogic, etc.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-pre-condition" type="LogicSingleDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-branch-rule" type="BranchRuleDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-item-session-control" type="ItemSessionControlDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-time-limits" type="TimeLimitsDType" minOccurs="0" maxOccurs="1" />
            <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element name="qti-adaptive-selection" type="AdaptiveSelectionDType" minOccurs="1" maxOccurs="1"/>
                <xs:sequence minOccurs="1" maxOccurs="1">
                    <xs:element name="qti-selection" type="SelectionDType" minOccurs="0" maxOccurs="1"/>
                    <xs:element name="qti-ordering" type="OrderingDType" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:choice>
            <xs:element name="qti-rubric-block" type="TestRubricBlockDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-assessment-item-ref" type="AssessmentItemRefDType" minOccurs="1" maxOccurs="1"/>
                <xs:element ref="qti-assessment-section" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-assessment-section-ref" type="AssessmentSectionRefDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="identifier" use="required" type="IdentifierDType" />
        <xs:attribute name="required" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="fixed" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="title" use="required" type="xs:normalizedString" />
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringListDType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="visible" use="required" type="xs:boolean" />
        <xs:attribute name="keep-together" use="optional" default="true" type="xs:boolean" />
        <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
    </xs:complexType>

    <xs:complexType name="AssessmentStimulusDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An assessment stimulus object is the used to enable content to be shared by several Asses-
                sment Items. The key feature is that this shared stimulus content must be supplied in the
                same context for each of the Assessment Items that make use of it. The assessment stimulus
                approach provides a mechanism to allow the stimulus content to be managed independently.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-stylesheet" type="StyleSheetDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-stimulus-body" type="StimulusBodyDType" minOccurs="1" maxOccurs="1" />
            <xs:element name="qti-catalog-info" type="CatalogInfoDType" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="identifier" use="required" type="IdentifierDType" />
        <xs:attribute name="title" use="required" type="xs:normalizedString" />
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
        <xs:attribute ref="xml:lang" use="optional" />
        <xs:attribute name="tool-name" use="optional" type="xs:normalizedString" />
        <xs:attribute name="tool-version" use="optional" type="xs:normalizedString" />
        <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
    </xs:complexType>

    <xs:complexType name="AssessmentTestDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An assessment test is a group of assessmentItems with an associated set of rules that det-
                ermine which of the items the candidate sees, in what order, and in what way the candidate
                interacts with them. The rules describe the valid paths through the test, when responses
                are submitted for response processing and when (if at all) feedback is to be given. Asses-
                sment tests are composed of one or more test parts.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-context-declaration" type="ContextDeclarationDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element ref="qti-outcome-declaration" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-time-limits" type="TimeLimitsDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-stylesheet" type="StyleSheetDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-rubric-block" type="TestRubricBlockDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-test-part" type="TestPartDType" minOccurs="1" maxOccurs="unbounded" />
            <xs:element ref="qti-outcome-processing" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-test-feedback" type="TestFeedbackDType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="identifier" use="required" type="IdentifierDType" />
        <xs:attribute name="title" use="required" type="xs:normalizedString" />
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringListDType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="tool-name" use="optional" type="xs:normalizedString" />
        <xs:attribute name="tool-version" use="optional" type="xs:normalizedString" />
        <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
    </xs:complexType>

    <xs:complexType name="AssociableHotspotDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is used to define the hotspots that are associated with the features in the 'graphic-
                AssociateInteraction' and 'graphicGapMatchInteraction' interactions.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmptyDType">
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="template-identifier" use="optional" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional" default="show">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="match-group" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="IdentifierListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="shape" use="required">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The permitted set of values for the shape of the associated region. A value of a shape is
                                always accompanied by coordinates (see coords and an associated image which provides a co-
                                ntext for interpreting them).
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="circle" />
                            <xs:enumeration value="default" />
                            <xs:enumeration value="ellipse" />
                            <xs:enumeration value="poly" />
                            <xs:enumeration value="rect" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="coords" use="required" type="CoordsDType" />
                <xs:attribute name="hotspot-label" use="optional" type="xs:string" />
                <xs:attribute name="match-max" use="required" type="xs:nonNegativeInteger" />
                <xs:attribute name="match-min" use="optional" default="0" type="xs:nonNegativeInteger" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AssociateInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An Associate Interaction is a blockInteraction that presents candidates with a number of
                choices and allows them to create associations between them. The associateInteraction must
                be bound to a response variable with base-type pair and either single or multiple cardina-
                lity.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteractionDType">
                <xs:sequence>
                    <xs:element name="qti-simple-associable-choice" type="SimpleAssociableChoiceDType" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="shuffle" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="max-associations" use="optional" default="1" type="xs:nonNegativeInteger" />
                <xs:attribute name="min-associations" use="optional" default="0" type="xs:nonNegativeInteger" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AudioDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'audio' tag is an HTML5 feature. An audio tag represents a sound or audio stream. Con-
                tent may be provided inside the audio tag. User agents should not show this content to the
                user; it is intended for older Web browsers which do not support audio, so that legacy au-
                dio plugins can be tried, or to show text to the users of these older browsers informing
                them of how to access the audio contents.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:element ref="source" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element ref="track" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="src" use="optional" type="URLDType" />
                <xs:attribute name="crossorigin" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The permitted set of values for the Cross Origin Resource Sharing ARIA settings.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="anonymous" />
                            <xs:enumeration value="use-credentials" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="preload" use="optional" default="metadata">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                This is the permitted set of values for the 'preload' attribute on the HTML5 'audio' and
                                'video' tags.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="none" />
                            <xs:enumeration value="auto" />
                            <xs:enumeration value="metadata" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="autoplay" use="optional" type="xs:boolean" />
                <xs:attribute name="mediagroup" use="optional" type="xs:normalizedString" />
                <xs:attribute name="loop" use="optional" type="xs:boolean" />
                <xs:attribute name="muted" use="optional" type="xs:boolean" />
                <xs:attribute name="controls" use="optional" type="xs:boolean" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BaseHTML5FlowDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the base class for the HTML5 tags that support a large range of child HTML and QTI
                interaction tags. This set of child tags are used to create a coherent flow of content.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-feedback-block" type="FeedbackBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hottext" type="HotTextDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-block" type="TemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-text-entry-interaction" type="TextEntryInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-inline-choice-interaction" type="InlineChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-end-attempt-interaction" type="EndAttemptInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-custom-interaction" type="CustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-portable-custom-interaction" type="PortableCustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-drawing-interaction" type="DrawingInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-gap-match-interaction" type="GapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-match-interaction" type="MatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-graphic-gap-match-interaction" type="GraphicGapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hotspot-interaction" type="HotspotInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-graphic-order-interaction" type="GraphicOrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-select-point-interaction" type="SelectPointInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-graphic-associate-interaction" type="GraphicAssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-slider-interaction" type="SliderInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-choice-interaction" type="ChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-media-interaction" type="MediaInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hottext-interaction" type="HotTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-order-interaction" type="OrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-extended-text-interaction" type="ExtendedTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-upload-interaction" type="UploadInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-associate-interaction" type="AssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BaseHTML5PhrasingDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This class is used to enable the complex capabilities of the 'ruby' tag.  Ruby annotations
                are short runs of text presented alongside base text, primarily used in East Asian typogr-
                aphy as a guide for pronunciation or to include other annotations.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BasePromptInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The BasePromptInteraction is the base class for the QTI interactions that support a Promp-
                t. This also consists of a set of children characteristics.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ARIABaseDType">
                <xs:sequence>
                    <xs:element name="qti-prompt" type="PromptDType" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
                <xs:attribute name="id" use="optional" type="UniqueIdentifierDType" />
                <xs:attribute name="class" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="StringListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="lang" use="optional" type="xs:normalizedString" />
                <xs:attribute ref="xml:lang" use="optional" />
                <xs:attribute name="label" use="optional" type="xs:normalizedString" />
                <xs:attribute ref="xml:base" use="optional" />
                <xs:attribute name="response-identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="dir" use="optional" default="auto">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                To define the direction of the text layout as part of the Bi-direction (bidi) element in
                                HTML.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="ltr" />
                            <xs:enumeration value="rtl" />
                            <xs:enumeration value="auto" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="data-catalog-idref" use="optional" type="xs:IDREF" />
                <xs:attribute name="data-qti-suppress-tts" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                This is the permitted set of values for the 'data-qti-suppress-tts' attribute which is us-
                                ed to to instruct the delivery/presentation system on whether, or not, the associated con-
                                tent should be read out loud to the candidate.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="computer-read-aloud" />
                            <xs:enumeration value="screen-reader" />
                            <xs:enumeration value="all" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BaseSequenceDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The BaseSequence class provides the base characteristics for some of the HTML tag and QTI
                interactions.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ARIABaseDType">
                <xs:attribute name="id" use="optional" type="UniqueIdentifierDType" />
                <xs:attribute name="class" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="StringListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="lang" use="optional" type="xs:normalizedString" />
                <xs:attribute ref="xml:lang" use="optional" />
                <xs:attribute name="label" use="optional" type="xs:normalizedString" />
                <xs:attribute name="dir" use="optional" default="auto">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                To define the direction of the text layout as part of the Bi-direction (bidi) element in
                                HTML.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="ltr" />
                            <xs:enumeration value="rtl" />
                            <xs:enumeration value="auto" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="data-catalog-idref" use="optional" type="xs:IDREF" />
                <xs:attribute name="data-qti-suppress-tts" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                This is the permitted set of values for the 'data-qti-suppress-tts' attribute which is us-
                                ed to to instruct the delivery/presentation system on whether, or not, the associated con-
                                tent should be read out loud to the candidate.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="computer-read-aloud" />
                            <xs:enumeration value="screen-reader" />
                            <xs:enumeration value="all" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BaseSequenceEmptyDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This class provides the base characteristics for some of the HTML tag and QTI interactions
                which MUST NOT have any child tags.
                This class provides the base characteristics for some of the HTML tag and QTI interactions which MUST NOT have any child tags.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ARIABaseEmptyDType">
                <xs:attribute name="id" use="optional" type="UniqueIdentifierDType" />
                <xs:attribute name="class" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="StringListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="lang" use="optional" type="xs:normalizedString" />
                <xs:attribute ref="xml:lang" use="optional" />
                <xs:attribute name="label" use="optional" type="xs:normalizedString" />
                <xs:attribute name="dir" use="optional" default="auto">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                To define the direction of the text layout as part of the Bi-direction (bidi) element in
                                HTML.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="ltr" />
                            <xs:enumeration value="rtl" />
                            <xs:enumeration value="auto" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="data-catalog-idref" use="optional" type="xs:IDREF" />
                <xs:attribute name="data-qti-suppress-tts" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                This is the permitted set of values for the 'data-qti-suppress-tts' attribute which is us-
                                ed to to instruct the delivery/presentation system on whether, or not, the associated con-
                                tent should be read out loud to the candidate.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="computer-read-aloud" />
                            <xs:enumeration value="screen-reader" />
                            <xs:enumeration value="all" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BaseSequenceFullDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The BaseSequenceFull class provides the base characteristics for some of the QTI interact-
                ions that support the full set of base characteristics.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ARIABaseDType">
                <xs:attribute name="id" use="optional" type="UniqueIdentifierDType" />
                <xs:attribute name="class" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="StringListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="lang" use="optional" type="xs:normalizedString" />
                <xs:attribute ref="xml:lang" use="optional" />
                <xs:attribute name="label" use="optional" type="xs:normalizedString" />
                <xs:attribute name="response-identifier" use="required" type="IdentifierDType" />
                <xs:attribute ref="xml:base" use="optional" />
                <xs:attribute name="dir" use="optional" default="auto">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                To define the direction of the text layout as part of the Bi-direction (bidi) element in
                                HTML.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="ltr" />
                            <xs:enumeration value="rtl" />
                            <xs:enumeration value="auto" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="data-catalog-idref" use="optional" type="xs:IDREF" />
                <xs:attribute name="data-qti-suppress-tts" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                This is the permitted set of values for the 'data-qti-suppress-tts' attribute which is us-
                                ed to to instruct the delivery/presentation system on whether, or not, the associated con-
                                tent should be read out loud to the candidate.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="computer-read-aloud" />
                            <xs:enumeration value="screen-reader" />
                            <xs:enumeration value="all" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BaseSequenceRIdentDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The BaseSequenceRIdent class provides the base characteristics (as per the BaseSequence p-
                lus 'rident') for some of the QTI interactions.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ARIABaseDType">
                <xs:attribute name="id" use="optional" type="UniqueIdentifierDType" />
                <xs:attribute name="class" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="StringListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="lang" use="optional" type="xs:normalizedString" />
                <xs:attribute ref="xml:lang" use="optional" />
                <xs:attribute name="label" use="optional" type="xs:normalizedString" />
                <xs:attribute name="response-identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="dir" use="optional" default="auto">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                To define the direction of the text layout as part of the Bi-direction (bidi) element in
                                HTML.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="ltr" />
                            <xs:enumeration value="rtl" />
                            <xs:enumeration value="auto" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="data-catalog-idref" use="optional" type="xs:IDREF" />
                <xs:attribute name="data-qti-suppress-tts" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                This is the permitted set of values for the 'data-qti-suppress-tts' attribute which is us-
                                ed to to instruct the delivery/presentation system on whether, or not, the associated con-
                                tent should be read out loud to the candidate.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="computer-read-aloud" />
                            <xs:enumeration value="screen-reader" />
                            <xs:enumeration value="all" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BaseSequenceXBaseDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The BaseSequenceXBase class provides the base characteristics (as per the BaseSequence pl-
                us 'base') for some of the HTML tags and QTI interactions.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ARIABaseDType">
                <xs:attribute name="id" use="optional" type="UniqueIdentifierDType" />
                <xs:attribute name="class" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="StringListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="lang" use="optional" type="xs:normalizedString" />
                <xs:attribute ref="xml:lang" use="optional" />
                <xs:attribute name="label" use="optional" type="xs:normalizedString" />
                <xs:attribute ref="xml:base" use="optional" />
                <xs:attribute name="dir" use="optional" default="auto">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                To define the direction of the text layout as part of the Bi-direction (bidi) element in
                                HTML.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="ltr" />
                            <xs:enumeration value="rtl" />
                            <xs:enumeration value="auto" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="data-catalog-idref" use="optional" type="xs:IDREF" />
                <xs:attribute name="data-qti-suppress-tts" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                This is the permitted set of values for the 'data-qti-suppress-tts' attribute which is us-
                                ed to to instruct the delivery/presentation system on whether, or not, the associated con-
                                tent should be read out loud to the candidate.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="computer-read-aloud" />
                            <xs:enumeration value="screen-reader" />
                            <xs:enumeration value="all" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="data-ssml" use="optional" type="xs:string" />
                <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BaseSequenceXBaseEmptyDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the base class for the HTML features and some QTI interactions that have no child-
                ren elements i.e. must be empty. This consists of a set of child characteristics.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ARIABaseEmptyDType">
                <xs:attribute name="id" use="optional" type="UniqueIdentifierDType" />
                <xs:attribute name="class" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="StringListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="lang" use="optional" type="xs:normalizedString" />
                <xs:attribute ref="xml:lang" use="optional" />
                <xs:attribute name="label" use="optional" type="xs:normalizedString" />
                <xs:attribute ref="xml:base" use="optional" />
                <xs:attribute name="dir" use="optional" default="auto">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                To define the direction of the text layout as part of the Bi-direction (bidi) element in
                                HTML.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="ltr" />
                            <xs:enumeration value="rtl" />
                            <xs:enumeration value="auto" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="data-catalog-idref" use="optional" type="xs:IDREF" />
                <xs:attribute name="data-qti-suppress-tts" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                This is the permitted set of values for the 'data-qti-suppress-tts' attribute which is us-
                                ed to to instruct the delivery/presentation system on whether, or not, the associated con-
                                tent should be read out loud to the candidate.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="computer-read-aloud" />
                            <xs:enumeration value="screen-reader" />
                            <xs:enumeration value="all" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BDIDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'bdi' tag is an HTML5 feature. This defines the content for defining bidirectional co-
                ntent. The bdi tag represents a span of text that is to be isolated from its surroundings
                for the purposes of bidirectional text formatting.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                        <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BDODType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This enables the HTML 'bdo' tag. The 'bdo' tag represents explicit text directionality fo-
                rmatting control for its children. It allows authors to override the Unicode bidirectional
                algorithm by explicitly specifying a direction override. Authors must specify the dir att-
                ribute on this tag, with the value ltr to specify a left-to-right override and with the v-
                alue rtl to specify a right-to-left override. The auto value must not be specified.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="title" use="optional" type="xs:string" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BlockQuoteDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the content of the 'blockquote' HTML tag. The 'blockquote' tag represents co-
                ntent that is quoted from another source, optionally with a citation which must be within
                a footer or cite element, and optionally with in-line changes such as annotations and abb-
                reviations. Content inside a blockquote other than citations and in-line changes must be
                quoted from another source, whose address, if it has one, may be cited in the cite attrib-
                ute. The content of a blockquote may be abbreviated, may have context added or may have a-
                nnotations. Any such additions or changes to quoted text must be indicated in the text (at
                the text level). This may mean the use of notational conventions or explicit remarks, such
                as "emphasis mine".
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                        <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="cite" use="optional" type="xs:anyURI" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BRDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the functionality of the HTML 'br' tag. The 'br' tag represents a line brea-
                k.This tag has no children.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmptyDType" />
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BranchRuleDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A branch-rule is a simple expression attached to an assessment-item-ref, assessment-secti-
                on or test-part that is evaluated after the item, section or part has been presented to t-
                he candidate. If the expression evaluates to 'true' the test jumps forward to the item, s-
                ection or part referred to by the target identifier. In the case of an item or section, t-
                he target must refer to an item or section in the same test-part that has not yet been pr-
                esented. For test-parts, the target must refer to another test-part.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="target" use="required" type="IdentifierDType" />
    </xs:complexType>

    <xs:complexType name="CalculatorDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the information about the calculator that is required/permitted
                for use by the learner undertaking the assessment.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-calculator-type" minOccurs="1" maxOccurs="1">
                <xs:simpleType>
                    <xs:annotation>
                        <xs:documentation source="documentation">
                            The permitted values for the type of calculator that can be supplied as companion materia-
                            ls.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="basic" />
                        <xs:enumeration value="standard" />
                        <xs:enumeration value="scientific" />
                        <xs:enumeration value="graphing" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="qti-description" type="xs:normalizedString" minOccurs="1" maxOccurs="1" />
            <xs:element name="qti-calculator-info" type="ItemFileInfoDType" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CaptionDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                Provides the HTML 'caption' tag functionality. The 'caption' tag represents the title of
                the table that is its parent, if it has a parent and that is a 'table' tag. The caption t-
                ag takes part in the table model. When a table tag is the only content in a figure tag ot-
                her than the figcaption, the caption tag should be omitted in favor of the figcaption. A
                caption can introduce context for a table, making it significantly easier to understand.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-feedback-block" type="FeedbackBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hottext" type="HotTextDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-block" type="TemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-text-entry-interaction" type="TextEntryInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-inline-choice-interaction" type="InlineChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-end-attempt-interaction" type="EndAttemptInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-custom-interaction" type="CustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-portable-custom-interaction" type="PortableCustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-drawing-interaction" type="DrawingInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-gap-match-interaction" type="GapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-match-interaction" type="MatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-graphic-gap-match-interaction" type="GraphicGapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hotspot-interaction" type="HotspotInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-graphic-order-interaction" type="GraphicOrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-select-point-interaction" type="SelectPointInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-graphic-associate-interaction" type="GraphicAssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-slider-interaction" type="SliderInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-choice-interaction" type="ChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-media-interaction" type="MediaInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hottext-interaction" type="HotTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-order-interaction" type="OrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-extended-text-interaction" type="ExtendedTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-upload-interaction" type="UploadInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-associate-interaction" type="AssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="CardDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A data structure within a catalog which contains dormant HTML content or a resource refer-
                ence for a specific support/feature. A card may also contain multiple CardEntry container-
                s. For example, you might have multiple CardEntry nodes for different language versions of
                a particular support.
            </xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:sequence minOccurs="1" maxOccurs="1">
                <xs:element name="qti-html-content" type="HTMLContentDType" minOccurs="0" maxOccurs="1"/>
                <xs:element name="qti-file-href" type="FileHrefCardDType" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
            <xs:element name="qti-card-entry" type="CardEntryDType" minOccurs="1" maxOccurs="unbounded" />
        </xs:choice>
        <xs:attribute name="support" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="SupportExtStringDType" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="additional-directions" />
                            <xs:enumeration value="audio-description" />
                            <xs:enumeration value="braille" />
                            <xs:enumeration value="glossary-on-screen" />
                            <xs:enumeration value="high-contrast" />
                            <xs:enumeration value="keyboard-directions" />
                            <xs:enumeration value="keyword-translation" />
                            <xs:enumeration value="linguistic-guidance" />
                            <xs:enumeration value="long-description" />
                            <xs:enumeration value="sign-language" />
                            <xs:enumeration value="simplified-language-portions" />
                            <xs:enumeration value="simplified-graphics" />
                            <xs:enumeration value="spoken" />
                            <xs:enumeration value="tactile" />
                            <xs:enumeration value="transcript" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:complexType>

    <xs:complexType name="CardEntryDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A content container within a catalog card. Each instance of a CardEntry provides a differ-
                ent resource where an attribute (often custom attributes) on the CardEntry element declar-
                es the difference between the resources, and where the attribute value aligns with a spec-
                ific preference/need from the candidate's PNP (or an assessment program's settings). For
                example, there could be multiple CardEntry nodes for different language versions for a pa-
                rticular support.
                [SBAC] Profile - the changes to the XML attribute list are:
                * The "data-contracted" attribute with data-type String has been added;
                * The "data-format" attribute with data-type String has been added;
                * The "data-math-representation" attribute with data-type String has been added;
                * The "data-type" attribute with data-type String has been added;
                * The "data-list-code" attribute with data-type String has been added;
                * The "data-list-type" attribute with data-type String has been added;
                * The "data-reading-type" attribute with data-type String has been added;
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-html-content" type="HTMLContentDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-file-href" type="FileHrefCardDType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute ref="xml:lang" use="optional" />
        <xs:attribute name="default" use="optional" default="false" type="xs:boolean" />
        <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
        <xs:attribute name="data-contracted" use="optional" type="xs:string" />
        <xs:attribute name="data-format" use="optional" type="xs:string" />
        <xs:attribute name="data-math-representation" use="optional" type="xs:string" />
        <xs:attribute name="data-type" use="optional" type="xs:string" />
        <xs:attribute name="data-list-code" use="optional" type="xs:string" />
        <xs:attribute name="data-list-type" use="optional" type="xs:string" />
        <xs:attribute name="data-reading-type" use="optional" type="xs:string" />
    </xs:complexType>

    <xs:complexType name="CatalogDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A container of content or resource references that is outside the content body node. A ca-
                talog holds support-specific dormant content that can be made active (a part of the perce-
                ivable content presented to the candidate) based on the candidate's PNP information (or an
                assessment program's settings). A catalog is referenced from a specific portion of the co-
                ntent body by a specific, unique identifier, which matches the catalog's identifier. A ca-
                talog contains one or more "cards", each of which address a specific support/feature.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-card" type="CardDType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" use="required" type="UniqueIdentifierDType" />
    </xs:complexType>

    <xs:complexType name="CatalogInfoDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The container that holds one or more catalogs and their content. Content inside CatalogIn-
                fo is considered "dormant" and is not included for delivery to candidates by default. A c-
                andidate's profile (or assessment program settings) will indicate whether the candidate s-
                hould be presented any of the possible supports included within the CatalogInfo.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-catalog" type="CatalogDType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ChoiceInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The choice interaction presents a set of choices to the candidate. The candidate's task is
                to select one or more of the choices, up to a maximum of max-choices. The interaction is
                always initialized with no choices selected. The ChoiceInteraction must be bound to a res-
                ponse variable with a base-type of identifier and single or multiple cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteractionDType">
                <xs:sequence>
                    <xs:element name="qti-simple-choice" type="SimpleChoiceDType" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="shuffle" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="max-choices" use="optional" default="1" type="xs:nonNegativeInteger" />
                <xs:attribute name="min-choices" use="optional" default="0" type="xs:nonNegativeInteger" />
                <xs:attribute name="orientation" use="optional" default="vertical">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The orientation attribute provides a hint to rendering systems that the associated struct-
                                ures have an inherent vertical or horizontal interpretation.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="horizontal" />
                            <xs:enumeration value="vertical" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="data-min-selections-message" use="optional" type="xs:normalizedString" />
                <xs:attribute name="data-max-selections-message" use="optional" type="xs:normalizedString" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ColDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Provides the functionality of the HTML 'col' tag. If a 'col' tag has a parent and that is
                a colgroup tag that itself has a parent that is a table tag, then the col tag represents
                one or more columns in the column group represented by that colgroup. The tag may have a
                span content attribute specified, whose value must be a valid non-negative integer greater
                than zero. The col tag and its span attribute take part in the table model.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmptyDType">
                <xs:attribute name="span" use="optional" type="xs:int" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ColGroupDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Provides the functionality of the HTML 'colgroup' tag. The colgroup element represents a
                group of one or more columns in the table that is its parent, if it has a parent and that
                is a table element. If the colgroup element contains no col elements, then the element may
                have a span content attribute specified, whose value must be a valid non-negative integer
                greater than zero. The colgroup element and its span attribute take part in the table mod-
                el.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:element ref="col" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="span" use="optional" type="xs:int" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="CompanionMaterialsInfoDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the information about the companion materials that are available
                to a learner undertaking the assessment.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-calculator" type="CalculatorDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-rule" type="RuleDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-protractor" type="ProtractorDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-digital-material" type="ItemFileInfoDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-physical-material" type="xs:normalizedString" minOccurs="0" maxOccurs="unbounded" />
            <xs:group ref="grpStrict.any" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ContextDeclarationDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Context variables, variables declared by context declarations, are global in scope in the
                information model. Context variables may be referenced in template processing, in response
                processing, and in outcome processing. Context variables are typically used to inject the
                "context" under which an item or test session is operating. There is one built-in context
                variable named "QTI_CONTEXT" with record cardinality. The built-in QTI_CONTEXT variable m-
                ust be fully resolved prior to any further processing.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-default-value" type="DefaultValueDType" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="identifier" use="required" type="UniqueIdentifierDType" />
        <xs:attribute name="cardinality" use="required">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        Contains the permitted set of cardinality values. The cardinality is used in the context
                        of the associated variable.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="multiple" />
                    <xs:enumeration value="ordered" />
                    <xs:enumeration value="record" />
                    <xs:enumeration value="single" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="base-type" use="optional">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        A base-type is simply a description of a set of atomic values (atomic to this specificati-
                        on). Note that several of the base-types used to define the runtime data model have ident-
                        ical definitions to those of the basic data types used to define the values for attributes
                        in the specification itself. The use of an enumeration to define the set of base-types us-
                        ed in the runtime model, as opposed to the use of classes with similar names, is designed
                        to help distinguish between these two distinct levels of modelling.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="boolean" />
                    <xs:enumeration value="directedPair" />
                    <xs:enumeration value="duration" />
                    <xs:enumeration value="file" />
                    <xs:enumeration value="float" />
                    <xs:enumeration value="identifier" />
                    <xs:enumeration value="integer" />
                    <xs:enumeration value="pair" />
                    <xs:enumeration value="point" />
                    <xs:enumeration value="string" />
                    <xs:enumeration value="uri" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="CorrectResponseDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This class is used to define, as part of the response declaration, the values(s) for the
                correct response.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-value" type="ValueDType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="interpretation" use="optional" type="xs:string" />
    </xs:complexType>

    <xs:complexType name="CustomInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The qti-custom-interaction provides an opportunity for extensibility of this specification
                to include support for interactions not currently documented, using methods that are prop-
                rietary for the supplier. The use of this interaction is deprecated in favor of qti-porta-
                ble-custom-interaction [PCI, 20].
                [SBAC] Profile - the changes to the XML attribute list are:
                * The "data-table-sub-type" attribute with data-type String has been added;
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceFullDType">
                <xs:sequence>
                    <xs:group ref="grpAnyLax.any" />
                </xs:sequence>
                <xs:attributeGroup ref="extension.CustomInteraction.Attr" />
                <xs:attribute name="data-table-sub-type" use="optional" type="xs:string" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="CustomOperatorDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The custom operator provides an extension mechanism for defining operations not currently
                supported by this specification. It has been suggested that customOperator might be used
                to help link processing rules defined by this specification to instances of web-service b-
                ased processing engines. For example, a web-service which offered automated marking of fr-
                ee text responses. Implementors experimenting with this approach are encouraged to share
                information about their solutions to help determine the best way to achieve this type of
                processing.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
            <xs:group ref="grpLax.any" />
        </xs:sequence>
        <xs:attribute name="class" use="optional" type="IdentifierDType" />
        <xs:attribute name="definition" use="optional" type="xs:anyURI" />
        <xs:attributeGroup ref="extension.CustomOperator.Attr" />
    </xs:complexType>

    <xs:complexType name="DDDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'dd' tag is a part of the HTML content. The 'dd' tag represents the description, defi-
                nition, or value, part of a term-description group in a description list ('dl' tag).
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-feedback-block" type="FeedbackBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hottext" type="HotTextDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-block" type="TemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-text-entry-interaction" type="TextEntryInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-inline-choice-interaction" type="InlineChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-end-attempt-interaction" type="EndAttemptInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-custom-interaction" type="CustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-portable-custom-interaction" type="PortableCustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-drawing-interaction" type="DrawingInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-gap-match-interaction" type="GapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-match-interaction" type="MatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-graphic-gap-match-interaction" type="GraphicGapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hotspot-interaction" type="HotspotInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-graphic-order-interaction" type="GraphicOrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-select-point-interaction" type="SelectPointInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-graphic-associate-interaction" type="GraphicAssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-slider-interaction" type="SliderInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-choice-interaction" type="ChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-media-interaction" type="MediaInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hottext-interaction" type="HotTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-order-interaction" type="OrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-extended-text-interaction" type="ExtendedTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-upload-interaction" type="UploadInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-associate-interaction" type="AssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DefaultValueDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Defines the default value of the associated response, outcome and template variable.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-value" type="ValueDType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="interpretation" use="optional" type="xs:normalizedString" />
    </xs:complexType>

    <xs:complexType name="DetailsDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the functionality of the HTML 'details' tag (a new tag added in HTML5). This
                tag creates a disclosure widget in which information is visible only when the widget is t-
                oggled into an 'open' state.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:element ref="summary" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                        <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="open" use="optional" type="xs:boolean" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DivDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the functionality of the HTML 'div' tag. The div tag has no special meaning
                at all. It represents its children. It can be used with the class, lang, and title charac-
                teristics to mark up semantics common to a group of consecutive elements. Authors are str-
                ongly encouraged to view the div tag as an element of last resort, for when no other elem-
                ent is suitable. Use of more appropriate elements instead of the div element leads to bet-
                ter accessibility for readers and easier maintainability for authors.
                [SBAC] Profile - the changes to the XML attribute list are:
                * The "data-sbac-term" attribute with data-type String has been added;
                * The "data-stimulus-idref" attribute with data-type NCName has been added;
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-position-object-stage" type="PositionObjectStageDType" minOccurs="1" maxOccurs="1"/>
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                            <xs:element name="qti-feedback-block" type="FeedbackBlockDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-hottext" type="HotTextDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-template-block" type="TemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                            <xs:element name="qti-text-entry-interaction" type="TextEntryInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-inline-choice-interaction" type="InlineChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-end-attempt-interaction" type="EndAttemptInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-custom-interaction" type="CustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-portable-custom-interaction" type="PortableCustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-drawing-interaction" type="DrawingInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-gap-match-interaction" type="GapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-match-interaction" type="MatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-graphic-gap-match-interaction" type="GraphicGapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-hotspot-interaction" type="HotspotInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-graphic-order-interaction" type="GraphicOrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-select-point-interaction" type="SelectPointInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-graphic-associate-interaction" type="GraphicAssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-slider-interaction" type="SliderInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-choice-interaction" type="ChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-media-interaction" type="MediaInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-hottext-interaction" type="HotTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-order-interaction" type="OrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-extended-text-interaction" type="ExtendedTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-upload-interaction" type="UploadInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:element name="qti-associate-interaction" type="AssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                                <xs:choice minOccurs="1" maxOccurs="1">
                                    <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                                </xs:choice>
                                <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="data-sbac-term" use="optional" type="xs:string" />
                <xs:attribute name="data-stimulus-idref" use="optional" type="xs:NCName" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DLDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Denotes the 'dl' HTML tag. The 'dl' tag represents an association list consisting of zero
                or more name-value groups (a description list). A name-value group consists of one or more
                names ('dt' tags) followed by one or more values ('dd' tags), ignoring any nodes other th-
                an 'dt' and 'dd' tags. Within a single 'dl' tag, there should not be more than one 'dt' t-
                ag for each name.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="dd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dt" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DrawingInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The drawing interaction allows the candidate to use a common set of drawing tools to modi-
                fy a given graphical image (the canvas). It must be bound to a response variable with bas-
                e-type file and single cardinality. The result is a file in the same format as the origin-
                al image. The use of 'object' to include the background image is deprecated and the use of
                either 'picture' or 'img' is preferred.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteractionDType">
                <xs:choice>
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DTDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'dt' tag is a part of the HTML content. The 'dt' tag represents the term, or name, pa-
                rt of a term-description group in a description list (dl element).
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-text-entry-interaction" type="TextEntryInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hottext" type="HotTextDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-gap" type="GapDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-inline-choice-interaction" type="InlineChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-end-attempt-interaction" type="EndAttemptInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-custom-interaction" type="CustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="EndAttemptInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The end attempt interaction is a special type of interaction which allows item authors to
                provide the candidate with control over the way in which the candidate terminates an atte-
                mpt. The candidate can use the interaction to terminate the attempt (triggering response
                processing) immediately, typically to request a hint. It must be bound to a response vari-
                able with base-type boolean and single cardinality. If the candidate invokes response pro-
                cessing using an endAttemptInteraction then the associated response variable is set to 't-
                rue'. If response processing is invoked in any other way, either through a different endA-
                ttemptInteraction or through the default method for the delivery engine, then the associa-
                ted response variable is set to 'false'. The default value of the response variable is al-
                ways ignored.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmptyDType">
                <xs:attribute name="response-identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="title" use="required" type="xs:string" />
                <xs:attribute name="count-attempt" use="optional" type="xs:boolean" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="EqualDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The equal operator takes two sub-expressions which must both have single cardinality and
                have a numerical base-type. The result is a single boolean with a value of 'true' if the
                two expressions are numerically equal and 'false' if they are not. If either sub-expressi-
                on is NULL then the operator results in NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="2" maxOccurs="2">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="tolerance-mode" use="optional" default="exact">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        The tolerance mode determines whether the comparison is done exactly, using an absolute r-
                        ange or a relative range.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="absolute" />
                    <xs:enumeration value="exact" />
                    <xs:enumeration value="relative" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="tolerance" use="optional">
            <xs:simpleType>
                <xs:list itemType="ToleranceListDType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="include-lower-bound" use="optional" default="true" type="xs:boolean" />
        <xs:attribute name="include-upper-bound" use="optional" default="true" type="xs:boolean" />
    </xs:complexType>

    <xs:complexType name="EqualRoundedDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The equalRounded operator takes two sub-expressions which must both have single cardinali-
                ty and have a numerical base-type. The result is a single boolean with a value of 'true'
                if the two expressions are numerically equal after rounding and 'false' if they are not.
                If either sub-expression is NULL then the operator results in NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="2" maxOccurs="2">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="rounding-mode" use="optional" default="significantFigures">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        Definition of the rounding modes to be used on numeric calculations.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="decimalPlaces" />
                    <xs:enumeration value="significantFigures" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="figures" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:integer" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="VariableStringDType" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="ExtendedTextInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An Extended Text Interaction is a block interaction that allows the candidate to enter an
                extended amount of text. The qti-extended-text-interaction must be bound to a response va-
                riable of single, multiple, ordered or record cardinality. If the response variable has r-
                ecord cardinality the fields in the record must be 'stringValue', 'floatValue', etc. Othe-
                rwise it ust have a base-type of string, integer or float. When bound to response variable
                with single cardinality a single string of text is required from the candidate. When bound
                to a response variable with multiple or ordered cardinality several separate text strings
                may be required.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteractionDType">
                <xs:attribute name="base" use="optional" default="10" type="xs:int" />
                <xs:attribute name="string-identifier" use="optional" type="IdentifierDType" />
                <xs:attribute name="expected-length" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="pattern-mask" use="optional" type="xs:string" />
                <xs:attribute name="placeholder-text" use="optional" type="xs:string" />
                <xs:attribute name="max-strings" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="min-strings" use="optional" default="0" type="xs:nonNegativeInteger" />
                <xs:attribute name="expected-lines" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="format" use="optional" default="plain">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of permitted values to control the format of the text entered by the candidate.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="plain" />
                            <xs:enumeration value="preformatted" />
                            <xs:enumeration value="xhtml" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="data-patternmask-message" use="optional" type="xs:normalizedString" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="FeedbackBlockDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This class is used to define the feedback content that can be presented to the learner. A
                feedback element that forms part of a Non-adaptive Item must not contain an interaction o-
                bject, either directly or indirectly. When an interaction is contained in a hidden feedba-
                ck element it must also be hidden. The candidate must not be able to set or update the va-
                lue of the associated response variables. Feedback elements can be embedded inside each o-
                ther, with one exception: qti-feedback-inline cannot contain qti-feedback-block elements.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:element name="qti-stylesheet" type="StyleSheetDType" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="qti-content-body" type="FeedbackContentBodyDType" minOccurs="0" maxOccurs="1" />
                    <xs:element name="qti-catalog-info" type="CatalogInfoDType" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
                <xs:attribute name="outcome-identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional" default="show">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="FeedbackContentBodyDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the HTML-based content to be presented as part of the feedback
                process in Items (excluding modal feedback and inline feedback). This wrapper was added as
                part of the QTI 3.0 revision.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element name="qti-position-object-stage" type="PositionObjectStageDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-custom-interaction" type="CustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-portable-custom-interaction" type="PortableCustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-drawing-interaction" type="DrawingInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-gap-match-interaction" type="GapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-match-interaction" type="MatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-graphic-gap-match-interaction" type="GraphicGapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-hotspot-interaction" type="HotspotInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-graphic-order-interaction" type="GraphicOrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-select-point-interaction" type="SelectPointInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-graphic-associate-interaction" type="GraphicAssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-slider-interaction" type="SliderInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-choice-interaction" type="ChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-media-interaction" type="MediaInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-hottext-interaction" type="HotTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-order-interaction" type="OrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-extended-text-interaction" type="ExtendedTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-upload-interaction" type="UploadInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-associate-interaction" type="AssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-feedback-block" type="FeedbackBlockDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-template-block" type="TemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:choice>
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:choice>
                <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="FeedbackFlowContentBodyDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the HTML-based content to be presented as part of the feedback
                process in Items (modal feedback mode only). This wrapper was added as part of the QTI 3.0
                revision.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-hottext" type="HotTextDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-template-block" type="TemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                </xs:choice>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="FeedbackInlineDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is feedback that is presented as inline content. Inline feedback that forms part of a
                Non-adaptive Item must not contain an interaction object, either directly or indirectly.
                When an interaction is contained in a hidden feedback it must also be hidden. The candida-
                te must not be able to set or update the value of the associated response variables. Feed-
                back can be embedded inside each other, with one exception: qti-feedback-inline cannot co-
                ntain feedback block elements.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="outcome-identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional" default="show">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="FieldValueDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression. The field value operator takes a sub-expression with a record c-
                ontainer value. The result is the value of the field with the specified field-identifier.
                If there is no field with that identifier then the result of the operator is NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="field-identifier" use="required" type="IdentifierDType" />
    </xs:complexType>

    <xs:complexType name="FigureDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'figure' tag. The 'figure' tag represents
                some flow content, optionally with a caption, that is self-contained (like a complete sen-
                tence) and is typically referenced as a single unit from the main flow of the document.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:choice minOccurs = "0" maxOccurs = "unbounded">
                    <xs:element ref="figcaption" minOccurs="0" maxOccurs="1" />
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                        <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="GapDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the gap structure that must only appear within a 'gapMatchInteraction'.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmptyDType">
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="template-identifier" use="optional" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional" default="show">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="match-group" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="IdentifierListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="required" use="optional" default="false" type="xs:boolean" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="GapImgDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A gap image contains a single image object to be inserted into a gap by the candidate.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:choice>
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                </xs:choice>
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="template-identifier" use="optional" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional" default="show">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="match-group" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="IdentifierListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="match-max" use="required" type="xs:nonNegativeInteger" />
                <xs:attribute name="match-min" use="optional" default="0" type="xs:nonNegativeInteger" />
                <xs:attribute name="object-label" use="optional" type="xs:string" />
                <xs:attribute name="top" use="optional" type="xs:normalizedString" />
                <xs:attribute name="left" use="optional" type="xs:normalizedString" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="GapMatchInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A gap match interaction is a block interaction that contains a number gaps that the candi-
                date can fill from an associated set of choices. The candidate must be able to review the
                content with the gaps filled in context, as indicated by their choices. The GapMatchInter-
                action must be bound to a response variable with base-type directedPair and either single
                or multiple cardinality, depending on the number of gaps. The choices represent the source
                of the pairing and gaps the targets. Each gap can have at most one choice associated with
                it. The maximum occurrence of the choices is controlled by the match-max characteristic of
                GapChoice.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteractionDType">
                <xs:sequence>
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element name="qti-gap-text" type="GapTextDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-gap-img" type="GapImgDType" minOccurs="1" maxOccurs="1"/>
                    </xs:choice>
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element name="qti-feedback-block" type="FeedbackBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-block" type="TemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="shuffle" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="min-associations" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="max-associations" use="optional" default="1" type="xs:nonNegativeInteger" />
                <xs:attribute name="data-min-selections-message" use="optional" type="xs:normalizedString" />
                <xs:attribute name="data-max-selections-message" use="optional" type="xs:normalizedString" />
                <xs:attribute name="data-choices-container-width" use="optional" type="xs:nonNegativeInteger" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="GapTextDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                A simple run of text to be inserted into a gap by the user, may be subject to variable va-
                lue substitution with qti-printed-variable.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="template-identifier" use="optional" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional" default="show">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="match-group" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="IdentifierListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="match-max" use="required" type="xs:nonNegativeInteger" />
                <xs:attribute name="match-min" use="optional" default="0" type="xs:nonNegativeInteger" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="GraphicAssociateInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A graphic associate interaction is a graphic interaction with a corresponding set of choi-
                ces that are defined as areas of the graphic image. The candidate's task is to associate
                the areas (hotspots) with each other. The graphic associate interaction should only be us-
                ed when the graphical relationship of the choices with respect to each other (as represen-
                ted by the graphic image) is important to the needs of the item. Otherwise, associateInte-
                raction should be used instead with separate Material for each option. The delivery engine
                must clearly indicate all defined area(s) of the image. The graphicAssociateInteraction m-
                ust be bound to a response variable with base-type pair and either single or multiple car-
                dinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteractionDType">
                <xs:sequence>
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element name="qti-associable-hotspot" type="AssociableHotspotDType" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="min-associations" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="max-associations" use="optional" default="1" type="xs:nonNegativeInteger" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="GraphicGapMatchInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A graphic gap-match interaction is a graphical interaction with a set of gaps that are de-
                fined as areas (hotspots) of the graphic image and an additional set of gap choices that
                are defined outside the image. The candidate must associate the gap choices with the gaps
                in the image and be able to review the image with the gaps filled in context, as indicated
                by their choices. Care should be taken when designing these interactions to ensure that t-
                he gaps in the image are a suitable size to receive the required gap choices. It must be
                clear to the candidate which hotspot each choice has been associated with. When associate-
                d, choices must appear wholly inside the gaps if at all possible and, where overlaps are
                required, should not hide each other completely. If the candidate indicates the associati-
                on by positioning the choice over the gap (e.g. drag and drop) the system should 'snap' it
                to the nearest position that satisfies these requirements. The graphicGapMatchInteraction
                must be bound to a response variable with base-type directedPair and multiple cardinality.
                The choices represent the source of the pairing and the gaps in the image (the hotspots)
                the targets. Unlike the simple gapMatchInteraction, each gap can have several choices ass-
                ociated with it if desired, furthermore, the same choice may be associated with an associ-
                ableHotspot multiple times, in which case the corresponding directed pair appears multiple
                times in the value of the response variable.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceFullDType">
                <xs:sequence>
                    <xs:element name="qti-prompt" type="PromptDType" minOccurs="0" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element name="qti-gap-text" type="GapTextDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-gap-img" type="GapImgDType" minOccurs="1" maxOccurs="1"/>
                    </xs:choice>
                    <xs:element name="qti-associable-hotspot" type="AssociableHotspotDType" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="min-associations" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="max-associations" use="optional" default="1" type="xs:nonNegativeInteger" />
                <xs:attribute name="data-min-selections-message" use="optional" type="xs:normalizedString" />
                <xs:attribute name="data-max-selections-message" use="optional" type="xs:normalizedString" />
                <xs:attribute name="data-choices-container-width" use="optional" type="xs:nonNegativeInteger" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="GraphicOrderInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A graphic order interaction is a graphic interaction with a corresponding set of choices
                that are defined as areas of the graphic image. The candidate's task is to impose an orde-
                ring on the areas (hotspots). The order hotspot interaction should only be used when the
                spacial relationship of the choices with respect to each other (as represented by the gra-
                phic image) is important to the needs of the item. Otherwise, orderInteraction should be
                used instead with separate material for each option. The delivery engine must clearly ind-
                icate all defined area(s) of the image. The order hotspot interaction must be bound to a
                response variable with a base-type of identifier and ordered cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceFullDType">
                <xs:sequence>
                    <xs:element name="qti-prompt" type="PromptDType" minOccurs="0" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element name="qti-hotspot-choice" type="HotspotChoiceDType" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="min-choices" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="max-choices" use="optional" type="xs:nonNegativeInteger" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="HotspotChoiceDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The definition of a hotspot choices that can be selected by the candidate. If the delivery
                system does not support pointer-based selection then the order in which the choices are g-
                iven must be the order in which they are offered to the candidate for selection. For exam-
                ple, the 'tab order' in simple keyboard navigation. If hotspots overlap then those listed
                first hide overlapping hotspots that appear later. The default hotspot, if defined, must
                appear last.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmptyDType">
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="template-identifier" use="optional" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional" default="show">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="shape" use="required">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The permitted set of values for the shape of the associated region. A value of a shape is
                                always accompanied by coordinates (see coords and an associated image which provides a co-
                                ntext for interpreting them).
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="circle" />
                            <xs:enumeration value="default" />
                            <xs:enumeration value="ellipse" />
                            <xs:enumeration value="poly" />
                            <xs:enumeration value="rect" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="coords" use="required" type="CoordsDType" />
                <xs:attribute name="hotspot-label" use="optional" type="xs:string" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="HotspotInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A hotspot interaction is a graphical interaction with a corresponding set of choices that
                are defined as areas of the graphic image. The candidate's task is to select one or more
                of the areas (hotspots). The hotspot interaction should only be used when the spacial rel-
                ationship of the choices with respect to each other (as represented by the graphic image)
                is important to the needs of the item. Otherwise, choiceInteraction should be used instead
                with separate material for each option. The delivery engine must clearly indicate the sel-
                ected area(s) of the image and may also indicate the unselected areas as well. Interactio-
                ns with hidden hotspots are achieved with the selectPointInteraction. The hotspot interac-
                tion must be bound to a response variable with a base-type of identifier and single or mu-
                ltiple cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteractionDType">
                <xs:sequence>
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element name="qti-hotspot-choice" type="HotspotChoiceDType" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="min-choices" use="optional" default="0" type="xs:nonNegativeInteger" />
                <xs:attribute name="max-choices" use="optional" default="1" type="xs:nonNegativeInteger" />
                <xs:attribute name="data-min-selections-message" use="optional" type="xs:normalizedString" />
                <xs:attribute name="data-max-selections-message" use="optional" type="xs:normalizedString" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="HotTextDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                A HotText area is used within the content of an hotTextInteraction to provide the individ-
                ual choices. It must not contain any nested interactions or other hottext areas. When a h-
                ottext choice is hidden (by the value of an associated template variable) the content of
                the choice must still be presented to the candidate as if it were simply part of the surr-
                ounding material. In the case of hottext, the effect of hiding the choice is simply to ma-
                ke the run of text unselectable by the candidate.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="template-identifier" use="optional" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional" default="show">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="HotTextInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The HotText Interaction presents a set of choices to the candidate represented as selecta-
                ble runs of text embedded within a surrounding context, such as a simple passage of text.
                Like choiceInteraction, the candidate's task is to select one or more of the choices, up
                to a maximum of max-choices. The interaction is initialized from the qti-default-value of
                the associated response variable, a NULL value indicating that no choices are selected (t-
                he usual case). The qti-hottext-interaction must be bound to a response variable with a b-
                ase-type of identifier and single or multiple cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteractionDType">
                <xs:sequence>
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element name="qti-feedback-block" type="FeedbackBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-block" type="TemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="max-choices" use="optional" default="1" type="xs:nonNegativeInteger" />
                <xs:attribute name="min-choices" use="optional" default="0" type="xs:nonNegativeInteger" />
                <xs:attribute name="data-min-selections-message" use="optional" type="xs:normalizedString" />
                <xs:attribute name="data-max-selections-message" use="optional" type="xs:normalizedString" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="HRDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the functionality of the HTML 'hr' tag. The 'hr' tag represents a paragraph-
                -level thematic break, e.g. a scene change in a story, or a transition to another topic w-
                ithin a section of a reference book. This tag has no children.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmptyDType" />
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="HTMLContentDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The container for the content in HTML format.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attribute ref="xml:lang" use="optional" />
        <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
    </xs:complexType>

    <xs:complexType name="HTMLTextDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the content for text-based HTML tags e.g. 'pre', 'p', 'h1', 'h2', etc.
                [SBAC] Profile - the changes to the XML attribute list are:
                * The "data-sbac-term" attribute with data-type String has been added;
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-text-entry-interaction" type="TextEntryInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hottext" type="HotTextDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-gap" type="GapDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-inline-choice-interaction" type="InlineChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-end-attempt-interaction" type="EndAttemptInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-custom-interaction" type="CustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="data-sbac-term" use="optional" type="xs:string" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ImgDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the HTML 'img' tag content capability.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmptyDType">
                <xs:attribute name="src" use="required" type="xs:anyURI" />
                <xs:attribute name="alt" use="required" type="xs:string" />
                <xs:attribute name="longdesc" use="optional" type="xs:anyURI" />
                <xs:attribute name="height" use="optional" type="LengthDType" />
                <xs:attribute name="width" use="optional" type="LengthDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="IncrementSIDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The container for the information about the protractor defined in terms of SI units.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-minor-increment" type="RadialSIValueDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-major-increment" type="RadialSIValueDType" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="IncrementUSDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The container for the information about the protractor defined in terms of US units.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-minor-increment" type="RadialUSValueDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-major-increment" type="RadialUSValueDType" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="IndexDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The index operator takes a sub-expression with an ordered container value and any base-ty-
                pe. The result is the nth value of the container. The result has the same base-type as the
                sub-expression but single cardinality. The first value of a container has index 1, the se-
                cond 2 and so on. 'n' must be a positive integer. If 'n' exceeds the number of values in
                the container (or the sub-expression is NULL) then the result of the index operator is NU-
                LL. If 'n' is an identifier, it is the value of 'n' at runtime that is used.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="n" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:NCName" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="xs:int" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="InlineChoiceDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                A simple run of text to be displayed to the user, may be subject to variable value substi-
                tution with printedVariable.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="fixed" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="template-identifier" use="optional" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional" default="show">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="InlineChoiceInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An inline choice is an inline Interaction that presents the user with a set of choices, e-
                ach of which is a simple piece of text. The candidate's task is to select one of the choi-
                ces. Unlike the choiceInteraction, the delivery engine must allow the candidate to review
                their choice within the context of the surrounding text. The inlineChoiceInteraction must
                be bound to a response variable with a base-type of identifier and single cardinality onl-
                y.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceFullDType">
                <xs:sequence>
                    <xs:element name="qti-label" type="LabelDType" minOccurs="0" maxOccurs="1" />
                    <xs:element name="qti-inline-choice" type="InlineChoiceDType" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="shuffle" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="required" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="min-choices" use="optional" default="0" type="xs:nonNegativeInteger" />
                <xs:attribute name="data-min-selections-message" use="optional" type="xs:normalizedString" />
                <xs:attribute name="data-prompt" use="optional" type="xs:normalizedString" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="InsideDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The inside operator takes a single sub-expression which must have a base-type of 'point'.
                The result is a single boolean with a value of 'true' if the given point is inside the ar-
                ea defined by shape and coords. If the sub-expression is a container the result is 'true'
                if any of the points are inside the area. If either sub-expression is NULL then the opera-
                tor results in NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="shape" use="required">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        The permitted set of values for the shape of the associated region. A value of a shape is
                        always accompanied by coordinates (see coords and an associated image which provides a co-
                        ntext for interpreting them).
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="circle" />
                    <xs:enumeration value="default" />
                    <xs:enumeration value="ellipse" />
                    <xs:enumeration value="poly" />
                    <xs:enumeration value="rect" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="coords" use="required" type="CoordsDType" />
    </xs:complexType>

    <xs:complexType name="InteractionMarkupDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the HTML-based markup that is to be used in the associated PCI
                [PCI, 20].
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-feedback-block" type="FeedbackBlockDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-template-block" type="TemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                </xs:choice>
            </xs:choice>
            <xs:element ref="template" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="InteractionModulesDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The set of interaction configuration settings to be used by the PCI. These settings are d-
                efined with respect to the set of JavaScript library modules.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-interaction-module" type="InteractionModuleDType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="primary-configuration" use="optional" default="modules/module_resolution.js" type="xs:anyURI" />
        <xs:attribute name="secondary-configuration" use="optional" default="modules/fallback_module_resolution.js" type="xs:anyURI" />
    </xs:complexType>

    <xs:complexType name="InterpolationTableDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An interpolationTable transforms a source float (or integer) by finding the first interpo-
                lationTableEntry with a sourceValue that is less than or equal to (subject to includeBoun-
                dary) the source value. For example, an interpolation table can be used to map a raw nume-
                ric score onto an identifier representing a grade. It may also be used to implement numer-
                ic transformations such as those from a simple raw score to a value on a calibrated scale.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-interpolation-table-entry" type="InterpolationTableEntryDType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="default-value" use="optional" type="xs:string" />
    </xs:complexType>

    <xs:complexType name="ItemBodyDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The item body contains the text, graphics, media objects and interactions that describe t-
                he item's content and information about how it is structured. The body is presented by co-
                mbining it with stylesheet information, either explicitly or implicitly using the default
                style rules of the delivery or authoring system.
The body must be presented to the candid-
                ate when the associated item session is in the interacting state. In this state, the cand-
                idate must be able to interact with each of the visible interactions and therefore set or
                update the values of the associated response variables. The body may be presented to the
                candidate when the item session is in the closed or review state. In these states, althou-
                gh the candidate's responses should be visible, the interactions must be disabled so as to
                prevent the candidate from setting or updating the values of the associated response vari-
                ables. Finally, the body may be presented to the candidate in the solution state, in which
                case the correct values of the response variables must be visible and the associated inte-
                ractions disabled.
The content model employed by this specification uses many concepts ta-
                ken directly from [XHTML, 10]. In effect, this part of the specification defines a profile
                of XHTML. Only some of the elements defined in XHTML are allowable in an assessmentItem a-
                nd of those that are, some have additional constraints placed on their attributes. Only t-
                hose elements from XHTML that are explicitly defined within this specification can be use-
                d. See XHTML Elements for details. Finally, this specification defines some new elements
                which are used to represent the interactions and to control the display of Integrated Fee-
                dback and content restricted to one or more of the defined content views.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element name="qti-rubric-block" type="RubricBlockDType" minOccurs="1" maxOccurs="1"/>
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element name="qti-position-object-stage" type="PositionObjectStageDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-custom-interaction" type="CustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-portable-custom-interaction" type="PortableCustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-drawing-interaction" type="DrawingInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-gap-match-interaction" type="GapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-match-interaction" type="MatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-graphic-gap-match-interaction" type="GraphicGapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-hotspot-interaction" type="HotspotInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-graphic-order-interaction" type="GraphicOrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-select-point-interaction" type="SelectPointInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-graphic-associate-interaction" type="GraphicAssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-slider-interaction" type="SliderInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-choice-interaction" type="ChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-media-interaction" type="MediaInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-hottext-interaction" type="HotTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-order-interaction" type="OrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-extended-text-interaction" type="ExtendedTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-upload-interaction" type="UploadInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-associate-interaction" type="AssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-feedback-block" type="FeedbackBlockDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="qti-template-block" type="TemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                    <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="id" use="optional" type="UniqueIdentifierDType" />
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringListDType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute ref="xml:lang" use="optional" />
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
        <xs:attribute name="dir" use="optional" default="auto">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        To define the direction of the text layout as part of the Bi-direction (bidi) element in
                        HTML.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ltr" />
                    <xs:enumeration value="rtl" />
                    <xs:enumeration value="auto" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="data-catalog-idref" use="optional" type="xs:IDREF" />
    </xs:complexType>

    <xs:complexType name="ItemFileInfoDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for information about an external file that contains information to
                be made available to the learner.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-file-href" type="FileHrefDType" minOccurs="1" maxOccurs="1" />
            <xs:element name="qti-resource-icon" type="URLDType" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="mime-type" use="optional" type="MimeTypeDType" />
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
    </xs:complexType>

    <xs:complexType name="LabelDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This allows the creation of human readable labels that will be placed close to the associ-
                ated displayed content artefacts. These labels are used with inline choice interactions.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="LIDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                Provides the HTML 'li' tag functionality. The 'li' tag represents a list item. If its par-
                ent tag is an 'ol' or 'ul', then the tag is an item of the parent tag's list, as defined
                for those elements. Otherwise, the list item has no defined list-related relationship to
                any other 'li' tag. If the parent element is an 'ol' tag, then the 'li' tag has an ordinal
                value.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-feedback-block" type="FeedbackBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hottext" type="HotTextDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-block" type="TemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-text-entry-interaction" type="TextEntryInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-inline-choice-interaction" type="InlineChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-end-attempt-interaction" type="EndAttemptInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-custom-interaction" type="CustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-portable-custom-interaction" type="PortableCustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-drawing-interaction" type="DrawingInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-gap-match-interaction" type="GapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-match-interaction" type="MatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-graphic-gap-match-interaction" type="GraphicGapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hotspot-interaction" type="HotspotInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-graphic-order-interaction" type="GraphicOrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-select-point-interaction" type="SelectPointInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-graphic-associate-interaction" type="GraphicAssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-slider-interaction" type="SliderInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-choice-interaction" type="ChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-media-interaction" type="MediaInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hottext-interaction" type="HotTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-order-interaction" type="OrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-extended-text-interaction" type="ExtendedTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-upload-interaction" type="UploadInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-associate-interaction" type="AssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Logic0toManyDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the combination of the zero or more child expressions (see the
                ExpressionGroup abstract class for the details on the permitted expressions).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Logic1toManyDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the combination of the one or more child expressions (see the E-
                xpressionGroup abstract class for the details on the permitted expressions).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="LogicPairDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the combination of the two child expressions (see the Expressio-
                nGroup abstract class for the details on the permitted expressions).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="2" maxOccurs="2">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="LogicSingleDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the combination of the single child expression (see the Express-
                ionGroup abstract class for the details on the permitted expressions).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="LookupOutcomeValueDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The lookupOutcomeValue rule sets the value of an outcome variable to the value obtained by
                looking up the value of the associated expression in the lookupTable associated with the
                outcome's declaration.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="identifier" use="required" type="IdentifierDType" />
    </xs:complexType>

    <xs:complexType name="MappingDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A special class used to create a mapping from a source set of any base-type (except file
                and duration) to a single 'float'. Note that mappings from values of base-type 'float' sh-
                ould be avoided due to the difficulty of matching floating point values, see the match op-
                erator for more details. When mapping containers the result is the sum of the mapped valu-
                es from the target set. See the MapResponse class for details.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-map-entry" type="MapEntryDType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="lower-bound" use="optional" type="xs:double" />
        <xs:attribute name="upper-bound" use="optional" type="xs:double" />
        <xs:attribute name="default-value" use="optional" default="0" type="xs:double" />
    </xs:complexType>

    <xs:complexType name="MatchInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A match interaction is a blockInteraction that presents candidates with two sets of choic-
                es and allows them to create associates between pairs of choices in the two sets, but not
                between pairs of choices in the same set. Further restrictions can still be placed on the
                allowable associations using the match-max characteristic of the choices. The matchIntera-
                ction must be bound to a response variable with base-type 'directedPair' and either single
                or multiple cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteractionDType">
                <xs:sequence>
                    <xs:element name="qti-simple-match-set" type="SimpleMatchSetDType" minOccurs="2" maxOccurs="2" />
                </xs:sequence>
                <xs:attribute name="shuffle" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="max-associations" use="optional" default="1" type="xs:nonNegativeInteger" />
                <xs:attribute name="min-associations" use="optional" default="0" type="xs:nonNegativeInteger" />
                <xs:attribute name="data-min-selections-message" use="optional" type="xs:normalizedString" />
                <xs:attribute name="data-max-selections-message" use="optional" type="xs:normalizedString" />
                <xs:attribute name="data-first-column-header" use="optional" type="xs:normalizedString" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="MatchTableDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A matchTable transforms a source integer by finding the first qti-match-table-entry with
                an exact match to the source.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-match-table-entry" type="MatchTableEntryDType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="default-value" use="optional" type="xs:string" />
    </xs:complexType>

    <xs:complexType name="MathOperatorDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The mathOperator operator takes 1 or more sub-expressions which all have single cardinali-
                ty and have numerical base-types. The trigonometric functions, sin, cos and tan, take one
                argument in radians, which evaluates to a single float. Other functions take one numerical
                argument. Further functions might take more than one numerical argument, e.g. atan2 (two
                argument arc tan). The result is a single float, except for the functions signum, floor a-
                nd ceil, which return a single integer. If any of the sub-expressions is NULL, the result
                is NULL. If any of the sub-expressions falls outside the natural domain of the function c-
                alled by mathOperator, e.g. log(0) or asin(2), then the result is NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="name" use="required">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        The set of permitted names for the mathOperator expression.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="sin" />
                    <xs:enumeration value="cos" />
                    <xs:enumeration value="tan" />
                    <xs:enumeration value="sec" />
                    <xs:enumeration value="csc" />
                    <xs:enumeration value="cot" />
                    <xs:enumeration value="asin" />
                    <xs:enumeration value="acos" />
                    <xs:enumeration value="atan" />
                    <xs:enumeration value="atan2" />
                    <xs:enumeration value="asec" />
                    <xs:enumeration value="acsc" />
                    <xs:enumeration value="acot" />
                    <xs:enumeration value="sinh" />
                    <xs:enumeration value="cosh" />
                    <xs:enumeration value="tanh" />
                    <xs:enumeration value="sech" />
                    <xs:enumeration value="csch" />
                    <xs:enumeration value="coth" />
                    <xs:enumeration value="log" />
                    <xs:enumeration value="ln" />
                    <xs:enumeration value="exp" />
                    <xs:enumeration value="abs" />
                    <xs:enumeration value="signum" />
                    <xs:enumeration value="floor" />
                    <xs:enumeration value="ceil" />
                    <xs:enumeration value="toDegrees" />
                    <xs:enumeration value="toRadians" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="MediaInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The Media Interaction allows more control over the way the candidate interacts with a tim-
                e-based media object and allows the number of times the media object was experienced to be
                reported in the value of the associated response variable, which must be of base-type int-
                eger and single cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteractionDType">
                <xs:choice>
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                </xs:choice>
                <xs:attribute name="autostart" use="required" type="xs:boolean" />
                <xs:attribute name="min-plays" use="optional" default="0" type="xs:nonNegativeInteger" />
                <xs:attribute name="max-plays" use="optional" default="0" type="xs:nonNegativeInteger" />
                <xs:attribute name="loop" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="coords" use="optional" type="CoordsDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ModalFeedbackDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Modal feedback is shown to the candidate directly following response processing. The value
                of an outcome variable is used in conjunction with the showHide and identifier characteri-
                stics to determine whether or not the feedback is shown. The content of the modalFeedback
                must not contain any interactions.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-stylesheet" type="StyleSheetDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-content-body" type="FeedbackFlowContentBodyDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-catalog-info" type="CatalogInfoDType" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="outcome-identifier" use="required" type="IdentifierDType" />
        <xs:attribute name="show-hide" use="required">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        The set of values for whether or not the associated object should be displayed or hidden.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="identifier" use="required" type="IdentifierDType" />
        <xs:attribute name="title" use="optional" type="xs:normalizedString" />
        <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
    </xs:complexType>

    <xs:complexType name="NumericLogic1toManyDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the combination of the one or more child numeric expressions (s-
                ee the NumericExpressionGroup abstract class for the details on the permitted expressions-
                ).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ObjectDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the representation for the HTML 'object' tag.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element name="param" type="ParamDType" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="data" use="required" type="xs:string" />
                <xs:attribute name="type" use="required" type="MimeTypeDType" />
                <xs:attribute name="width" use="optional" type="LengthDType" />
                <xs:attribute name="height" use="optional" type="LengthDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="OrderingDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The ordering class specifies the rule used to arrange the child elements of a section fol-
                lowing selection. If no ordering rule is given, assume that the elements are to be ordered
                in the order in which they are defined. A sub-section is always treated as a single block
                for selection but the way it is treated when shuffling depends on its visibility. A visib-
                le sub-section is always treated as a single block but an invisible sub-section is only t-
                reated as a single block if its keep-together characteristic is 'true'. Otherwise, the ch-
                ild elements of the invisible sub-section are mixed into the parent's selection prior to
                shuffling. The ordering class also provides an opportunity for extensions to this specifi-
                cation to include support for more complex ordering algorithms. The selection and ordering
                rules define a sequence of items for each instance of the test. The sequence starts with
                the first item of the first section of the first test part and continues through to the l-
                ast item of the last section of the last test part. This sequence is constant throughout
                the test. Normally this is the logical sequence perceived by the candidate but the use of
                pre-conditions and/or branch-rules can affect the specific path taken. The use of selecti-
                on with replacement enables two or more instances of an item referred to by the same asse-
                ssment-item-ref to appear in the sequence of items for a test. It is therefore an error to
                make such an item the target of a branch-rule. Furthermore, when reporting test results t-
                he sequence number of each item must also be reported to avoid ambiguity. See QTI Results
                Reporting [QTI-RR-30]. The ordering class also provides an opportunity for extensions to
                this specification to include support for more complex ordering algorithms.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:group ref="grpLax.any" />
        </xs:sequence>
        <xs:attribute name="shuffle" use="optional" default="false" type="xs:boolean" />
        <xs:attributeGroup ref="extension.Ordering.Attr" />
    </xs:complexType>

    <xs:complexType name="OrderInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                In an Order Interaction the candidate's task is to reorder the choices, the order in which
                the choices are displayed initially is significant. By default the candidate's task is to
                order all of the choices but a subset of the choices can be requested using the max-choic-
                es and min-choices attributes. When specified the candidate must select a subset of the c-
                hoices and impose an ordering on them.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteractionDType">
                <xs:sequence>
                    <xs:element name="qti-simple-choice" type="SimpleChoiceDType" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="shuffle" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="min-choices" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="max-choices" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="orientation" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The orientation attribute provides a hint to rendering systems that the associated struct-
                                ures have an inherent vertical or horizontal interpretation.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="horizontal" />
                            <xs:enumeration value="vertical" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="data-min-selections-message" use="optional" type="xs:normalizedString" />
                <xs:attribute name="data-max-selections-message" use="optional" type="xs:normalizedString" />
                <xs:attribute name="data-choices-container-width" use="optional" type="xs:nonNegativeInteger" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="OULDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Provides the HTML 'ol' and 'ul' tag functionalities. These provide the ordered and unorde-
                red list capability. The 'ol' tag represents a list of items, where the items have been i-
                ntentionally ordered, such that changing the order would change the meaning of the docume-
                nt. The 'ul' tags have no expicit order relationship. The items of the list are the 'li'
                child nodes.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:element ref="li" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="OutcomeConditionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This enables the 'If..Then..Else' rules to be defined for the outcome processing. If the
                expression given in a outcomeIf or outcomeElseIf evaluates to 'true' then the sub-rules c-
                ontained within it are followed and any following outcomeElseIf or outcomeElse parts are
                ignored for this outcome condition. If the expression given in a outcomeIf or outcomeElse-
                If does not evaluate to 'true' then consideration passes to the next outcomeElseIf or, if
                there are no more outcomeElseIf parts then the sub-rules of the outcomeElse are followed
                (if specified).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-outcome-if" type="OutcomeIfDType" minOccurs="1" maxOccurs="1" />
            <xs:element name="qti-outcome-else-if" type="OutcomeIfDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-outcome-else" type="OutcomeElseDType" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="OutcomeDeclarationDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Outcome variables are declared by outcome declarations. Their value is set either from a
                default given in the declaration itself or by a responseRule during responseProcessing. I-
                tems that declare a numeric outcome variable representing the candidate's overall perform-
                ance on the item should use the outcome name 'SCORE' for the variable. SCORE needs to be a
                float. Items that declare a maximum score (in multiple response choice interactions, for
                example) should do so by declaring the 'MAXSCORE' variable. MAXSCORE needs to be a float.
                Items or tests that want to make the fact that the candidate scored above a predefined th-
                reshold available as a variable should use the 'PASSED' variable. PASSED needs to be a bo-
                olean. At runtime, outcome variables are instantiated as part of an item session. Their v-
                alues may be initialized with a default value and/or set during responseProcessing. If no
                default value is given in the declaration then the outcome variable is initialized to NULL
                unless the outcome is of a numeric type (integer or float) in which case it is initialized
                to 0. Declared outcomes with numeric types should indicate their range of possible values
                using normalMaximum and normalMinimum, especially if this range differs from [0,1].
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-default-value" type="DefaultValueDType" minOccurs="0" maxOccurs="1" />
            <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element name="qti-match-table" type="MatchTableDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-interpolation-table" type="InterpolationTableDType" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="identifier" use="required" type="IdentifierDType" />
        <xs:attribute name="cardinality" use="required">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        Contains the permitted set of cardinality values. The cardinality is used in the context
                        of the associated variable.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="multiple" />
                    <xs:enumeration value="ordered" />
                    <xs:enumeration value="record" />
                    <xs:enumeration value="single" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="base-type" use="optional">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        A base-type is simply a description of a set of atomic values (atomic to this specificati-
                        on). Note that several of the base-types used to define the runtime data model have ident-
                        ical definitions to those of the basic data types used to define the values for attributes
                        in the specification itself. The use of an enumeration to define the set of base-types us-
                        ed in the runtime model, as opposed to the use of classes with similar names, is designed
                        to help distinguish between these two distinct levels of modelling.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="boolean" />
                    <xs:enumeration value="directedPair" />
                    <xs:enumeration value="duration" />
                    <xs:enumeration value="file" />
                    <xs:enumeration value="float" />
                    <xs:enumeration value="identifier" />
                    <xs:enumeration value="integer" />
                    <xs:enumeration value="pair" />
                    <xs:enumeration value="point" />
                    <xs:enumeration value="string" />
                    <xs:enumeration value="uri" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="view" use="optional">
            <xs:simpleType>
                <xs:list itemType="ViewEnumDType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="interpretation" use="optional" type="xs:string" />
        <xs:attribute name="long-interpretation" use="optional" type="xs:anyURI" />
        <xs:attribute name="normal-maximum" use="optional" type="NonNegativeDoubleDType" />
        <xs:attribute name="normal-minimum" use="optional" type="xs:double" />
        <xs:attribute name="mastery-value" use="optional" type="xs:double" />
        <xs:attribute name="external-scored" use="optional">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        Identifies the set of modes for the exernal scoring of the Item.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="externalMachine" />
                    <xs:enumeration value="human" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="variable-identifier-ref" use="optional" type="UniqueIdentifierRefDType" />
    </xs:complexType>

    <xs:complexType name="OutcomeElseDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the else part of the 'if..then..elseif..else' structure for outcomes proces-
                sing.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="qti-lookup-outcome-value" type="LookupOutcomeValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-outcome-processing-fragment" type="OutcomeProcessingFragmentDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-set-outcome-value" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-exit-test" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-condition" type="OutcomeConditionDType" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="OutcomeIfDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An outcomeIf part consists of an expression which must have an effective base-type of boo-
                lean and single cardinality. For more information about the runtime data model employed s-
                ee Expressions (Section 2). It also contains a set of sub-rules. If the expression is true
                then the sub-rules are processed, otherwise they are skipped (including if the expression
                is NULL) and the following outcomeElseIf or outcomeElse parts (if any) are considered ins-
                tead.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="qti-lookup-outcome-value" type="LookupOutcomeValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-outcome-processing-fragment" type="OutcomeProcessingFragmentDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-set-outcome-value" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-exit-test" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-condition" type="OutcomeConditionDType" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="OutcomeProcessingDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Outcome processing takes place each time the candidate submits the responses for an item
                (when in individual submission mode) or a group of items (when in simultaneous submission
                mode). It happens after any (item level) response processing triggered by the submission.
                The values of the test's outcome variables are always reset to their defaults prior to ca-
                rrying out the instructions described by the outcomeRules. Because outcome processing hap-
                pens each time the candidate submits responses the resulting values of the test-level out-
                comes may be used to activate test-level feedback during the test or to control the behav-
                iour of subsequent parts through the use of preConditions and branchRules. The structure
                of outcome processing is similar to that or responseProcessing.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="qti-lookup-outcome-value" type="LookupOutcomeValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-outcome-processing-fragment" type="OutcomeProcessingFragmentDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-set-outcome-value" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-exit-test" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-condition" type="OutcomeConditionDType" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="OutcomeProcessingFragmentDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An outcomeProcessingFragment is a simple group of outcomeRules which are grouped together
                in order to allow them to be managed as a separate resource. It should not be used for any
                other purpose.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="qti-lookup-outcome-value" type="LookupOutcomeValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-outcome-processing-fragment" type="OutcomeProcessingFragmentDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-set-outcome-value" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-exit-test" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-condition" type="OutcomeConditionDType" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PatternMatchDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The patternMatch operator takes a sub-expression which must have single cardinality and a
                base-type of string. The result is a single boolean with a value of 'true' if the sub-exp-
                ression matches the regular expression given by pattern and 'false' if it does not. If the
                sub-expression is NULL then the operator results in NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="pattern" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:string" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="EncVariableStringDType" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="PictureDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the functionality of the HTML 'picture' tag (a new tag added in HTML5).
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:element ref="source" minOccurs="1" maxOccurs="unbounded" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="PortableCustomInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This container enables the placement of PCIs in the assessment activity. The supplied inf-
                ormation enables the launch and collection of state information from the actual PCI as de-
                fined by the PCI specification [PCI, 20]. PCIs MUST be used instead of custom interactions
                (the latter have been deprecated).
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteractionDType">
                <xs:sequence>
                    <xs:element name="qti-interaction-modules" type="InteractionModulesDType" minOccurs="0" maxOccurs="1" />
                    <xs:element name="qti-interaction-markup" type="InteractionMarkupDType" minOccurs="1" maxOccurs="1" />
                    <xs:element name="qti-template-variable" type="TemplateUniqueIDRefDType" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="qti-context-variable" type="ContextUniqueIDRefDType" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="custom-interaction-type-identifier" use="required" type="xs:anyURI" />
                <xs:attribute name="module" use="optional" type="xs:NCName" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="PositionObjectInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The position object interaction consists of a single image which must be positioned on an-
                other graphic image (the stage) by the candidate. Like selectPointInteraction, the associ-
                ated response may have an areaMapping that scores the response on the basis of comparing
                it against predefined areas but the delivery engine must not indicate these areas of the
                stage. Only the actual position(s) selected by the candidate shall be indicated. The posi-
                tion object interaction must be bound to a response variable with a base-type of point and
                single or multiple cardinality. The point records the coordinates, with respect to the st-
                age, of the centre point of the image being positioned.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceRIdentDType">
                <xs:choice>
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                </xs:choice>
                <xs:attribute name="center-point" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="IntegerListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="min-choices" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="max-choices" use="optional" default="1" type="xs:nonNegativeInteger" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="PositionObjectStageDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the content frame for the positionObjectInteraction(s).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
            </xs:choice>
            <xs:element name="qti-position-object-interaction" type="PositionObjectInteractionDType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" use="optional" type="UniqueIdentifierDType" />
        <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
    </xs:complexType>

    <xs:complexType name="PromptDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This enables an author to define the prompt for the question.  The way in which the prompt
                is displayed depends upon the rendering system. The prompt should not be used to contain
                the actual root of the question.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ProtractorDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the information about the permitted characteristics of the prot-
                ractor companion material.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-description" type="xs:normalizedString" minOccurs="1" maxOccurs="1" />
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-increment-si" type="IncrementSIDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-increment-us" type="IncrementUSDType" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="QDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the content definition for the HTML 'q' tag.  The q element represents some
                phrasing content quoted from another source. Quotation punctuation (such as quotation mar-
                ks) that is quoting the contents of the tag must not appear immediately before, after, or
                inside q tags; they will be inserted into the rendering by the user agent. Content inside
                a 'q' tag must be quoted from another source, whose address, if it has one, may be cited
                in the cite attribute. The source may be fictional, as when quoting characters in a novel
                or screenplay.  The 'q' tag must not be used in place of quotation marks that do not repr-
                esent quotes; for example, it is inappropriate to use the q element for marking up sarcas-
                tic statements. The use of 'q' tags to mark up quotations is entirely optional; using exp-
                licit quotation punctuation without 'q' tags is just as correct.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-text-entry-interaction" type="TextEntryInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hottext" type="HotTextDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-gap" type="GapDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-inline-choice-interaction" type="InlineChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-end-attempt-interaction" type="EndAttemptInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-custom-interaction" type="CustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="cite" use="optional" type="xs:anyURI" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RepeatDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression function. The repeat operator takes one or more sub-expressions,
                all of which must have either single or ordered cardinality and the same base-type. The r-
                esult is an ordered container having the same base-type as its sub-expressions. The conta-
                iner is filled sequentially by evaluating each sub-expression in turn and adding the resu-
                lting single values to the container, iterating this process number-repeats times in tota-
                l. If number-repeats refers to a variable whose value is less than 1, the value of the wh-
                ole expression is NULL. Any sub-expressions evaluating to NULL are ignored. If all sub-ex-
                pressions are NULL then the result is NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="number-repeats" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:NCName" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="xs:int" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="ResponseConditionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This enables the 'If..Then..Else' rules to be defined for the response processing. If the
                expression given in a responseIf or responseElseIf evaluates to 'true' then the sub-rules
                contained within it are followed and any following responseElseIf or responseElse parts a-
                re ignored for this response condition. If the expression given in a responseIf or respon-
                seElseIf does not evaluate to 'true' then consideration passes to the next responseElseIf
                or, if there are no more responseElseIf parts then the sub-rules of the responseElse are
                followed (if specified).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-response-if" type="ResponseIfDType" minOccurs="1" maxOccurs="1" />
            <xs:element name="qti-response-else-if" type="ResponseIfDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-response-else" type="ResponseElseDType" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ResponseDeclarationDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Response variables are declared by response declarations and bound to interactions in the
                itemBody. Each response variable declared may be bound to one and only one interaction. At
                runtime, response variables are instantiated as part of an item session. Their values are
                always initialized to NULL (no value) regardless of whether or not a default value is giv-
                en in the declaration. A response variable with a NULL value indicates that the candidate
                has not offered a response, either because they have not attempted the item at all or bec-
                ause they have attempted it and chosen not to provide a response. If a default value has
                been provided for a response variable then the variable is set to this value at the start
                of the first attempt. If the candidate never attempts the item, in other words, the item
                session passes straight from the initial state to the closed state without going through
                the interacting state, then the response variable remains NULL and the default value is n-
                ever used.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-default-value" type="DefaultValueDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-correct-response" type="CorrectResponseDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-mapping" type="MappingDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-area-mapping" type="AreaMappingDType" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="identifier" use="required" type="UniqueIdentifierDType" />
        <xs:attribute name="cardinality" use="required">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        Contains the permitted set of cardinality values. The cardinality is used in the context
                        of the associated variable.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="multiple" />
                    <xs:enumeration value="ordered" />
                    <xs:enumeration value="record" />
                    <xs:enumeration value="single" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="base-type" use="optional">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        A base-type is simply a description of a set of atomic values (atomic to this specificati-
                        on). Note that several of the base-types used to define the runtime data model have ident-
                        ical definitions to those of the basic data types used to define the values for attributes
                        in the specification itself. The use of an enumeration to define the set of base-types us-
                        ed in the runtime model, as opposed to the use of classes with similar names, is designed
                        to help distinguish between these two distinct levels of modelling.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="boolean" />
                    <xs:enumeration value="directedPair" />
                    <xs:enumeration value="duration" />
                    <xs:enumeration value="file" />
                    <xs:enumeration value="float" />
                    <xs:enumeration value="identifier" />
                    <xs:enumeration value="integer" />
                    <xs:enumeration value="pair" />
                    <xs:enumeration value="point" />
                    <xs:enumeration value="string" />
                    <xs:enumeration value="uri" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="ResponseElseDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the 'Else' clause of the 'If..Then..Else' for the response processing funct-
                ionality. If the expression given in a responseIf or responseElseIf evaluates to 'true' t-
                hen the sub-rules contained within it are followed and any following responseElseIf or re-
                sponseElse parts are ignored for this response condition. If the expression given in a re-
                sponseIf or responseElseIf does not evaluate to 'true' then consideration passes to the n-
                ext responseElseIf or, if there are no more responseElseIf parts then the sub-rules of the
                responseElse are followed (if specified).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-response-condition" type="ResponseConditionDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-response-processing-fragment" type="ResponseProcessingFragmentDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-set-outcome-value" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-exit-response" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-lookup-outcome-value" type="LookupOutcomeValueDType" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ResponseIfDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the 'If' and 'ElseIf' clauses of the 'If..Then..Else' for the response proc-
                essing functionality. A responseIf part consists of an expression which must have an effe-
                ctive base-type of boolean and single cardinality. For more information about the runtime
                data model employed see Expressions (Section 2). It also contains a set of sub-rules. If
                the expression is 'true' then the sub-rules are processed, otherwise they are skipped (in-
                cluding if the expression is NULL) and the following responseElseIf or responseElse parts
                (if any) are considered instead.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-response-condition" type="ResponseConditionDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-response-processing-fragment" type="ResponseProcessingFragmentDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-set-outcome-value" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-exit-response" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-lookup-outcome-value" type="LookupOutcomeValueDType" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ResponseProcessingDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Response processing is the process by which the Delivery Engine assigns outcomes based on
                the candidate's responses. The outcomes may be used to provide feedback to the candidate.
                Feedback is either provided immediately following the end of the candidate's attempt or it
                is provided at some later time, perhaps as part of a summary report on the item session.
                The end of an attempt, and therefore response processing, must only take place in direct
                response to a user action or in response to some expected event, such as the end of a tes-
                t. An item session that enters the suspended state may have values for the response varia-
                bles that have yet to be submitted for response processing.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-response-condition" type="ResponseConditionDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-response-processing-fragment" type="ResponseProcessingFragmentDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-set-outcome-value" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-exit-response" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-lookup-outcome-value" type="LookupOutcomeValueDType" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="template" use="optional" type="xs:anyURI" />
        <xs:attribute name="template-location" use="optional" type="xs:anyURI" />
    </xs:complexType>

    <xs:complexType name="ResponseProcessingFragmentDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A responseProcessingFragment is a simple group of responseRules which are grouped together
                in order to allow them to be managed as a separate resource. It should not be used for any
                other purpose. Note that a response processing template allows a system to carry out resp-
                onse processing without having to parse the individual response processing rules. On the
                other hand, a responseProcessing element containing a reference to an externally defined
                response processing fragment must be parsed to determine the actions to carry out.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-response-condition" type="ResponseConditionDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-response-processing-fragment" type="ResponseProcessingFragmentDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-set-outcome-value" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-exit-response" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-lookup-outcome-value" type="LookupOutcomeValueDType" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="RoundToDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The roundTo operator takes one sub-expression which must have single cardinality and a nu-
                merical base-type. The result is a single float with the value nearest to that of the exp-
                ression's value such that when converted to a decimal string it represents the expression
                rounded by the specified rounding method to the specified precision. If the sub-expression
                is NULL, then the result is NULL. If the sub-expression is INF, then the result is INF. If
                the sub-expression is -INF, then the result is -INF. If the argument is NaN, then the res-
                ult is NULL.
When rounding to n significant figures, the deciding digit is the (n+1)th di-
                git counting from the first non-zero digit from the left in the number. If the deciding d-
                igit is 5 or greater, the nth digit is increased by 1 and all digits to its right are dis-
                carded; if the deciding digit is less than 5, all digits to the right of the nth digit are
                discarded.
When rounding to n decimal places, the deciding digit is the (n+1)th digit cou-
                nting to the right from the decimal point. If the deciding digit is 5 or greater, the nth
                digit is increased by 1 and all digits to its right are discarded; if the deciding digit
                is less than 5, all digits to the right of the nth digit are discarded.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="rounding-mode" use="required">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        Definition of the rounding modes to be used on numeric calculations.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="decimalPlaces" />
                    <xs:enumeration value="significantFigures" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="figures" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:integer" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="VariableStringDType" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="RTCDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This feature is a part of the HTML5 Ruby annotation. The 'rtc' tag marks a ruby text cont-
                ainer for ruby text components in a ruby annotation. When it is the child of a ruby tag it
                doesn't represent anything itself, but its parent ruby tag uses it as part of determining
                what it represents. An rtc tag that is not a child of a ruby tag represents the same thing
                as its children.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:choice>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="rt" minOccurs="0" maxOccurs="unbounded" />
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RubricBlockDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The container for the rubric block content. A rubric block identifies part of the content
                that represents instructions to one or more of the actors that view the item. Although ru-
                bric blocks are defined as simpleBlocks they must not contain interactions but may contain
                template blocks. Rubric Blocks MUST NOT be nested within other Rubric Blocks.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:element name="qti-stylesheet" type="StyleSheetDType" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="qti-content-body" type="RubricBlockContentBodyDType" minOccurs="1" maxOccurs="1" />
                    <xs:element name="qti-catalog-info" type="CatalogInfoDType" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
                <xs:attribute name="use" use="required">
                    <xs:simpleType>
                        <xs:union>
                            <xs:simpleType>
                                <xs:restriction base="UseExtensionStringDType" />
                            </xs:simpleType>
                            <xs:simpleType>
                                <xs:restriction base="xs:string">
                                    <xs:enumeration value="instructions" />
                                    <xs:enumeration value="scoring" />
                                    <xs:enumeration value="navigation" />
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:union>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="view" use="required">
                    <xs:simpleType>
                        <xs:list itemType="ViewEnumDType" />
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RubricBlockContentBodyDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for all of the content to be presented as the rubric block (excludi-
                ng that used in template blocks), including all of the HTML-based content.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                </xs:choice>
                <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-template-block" type="RubricBlockTemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-template-inline" type="RubricBlockTemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="RubricBlockTemplateBlockDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the rubric content that is used in the context of template block
                content.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:element name="qti-stylesheet" type="StyleSheetDType" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="qti-content-body" type="RubricBlockTemplateBlockContentBodyDType" minOccurs="0" maxOccurs="1" />
                    <xs:element name="qti-catalog-info" type="CatalogInfoDType" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
                <xs:attribute name="template-identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional" default="show">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RubricBlockTemplateBlockContentBodyDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for all of the content to be presented in template-based rubric blo-
                cks, including all of the HTML-based content.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                </xs:choice>
                <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="RubricBlockTemplateInlineDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the rubric content that is used in the context of a template in-
                line content.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="template-identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional" default="show">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RubyDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This feature is a part of the HTML5 Ruby annotation. The ruby tag allows one or more spans
                of phrasing content to be marked with ruby annotations. Ruby annotations are short runs of
                text presented alongside base text, primarily used in East Asian typography as a guide for
                pronunciation or to include other annotations. In Japanese, this form of typography is al-
                so known as furigana. Ruby text can appear on either side, and sometimes both sides, of t-
                he base text, and it is possible to control its position using CSS.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="rb" minOccurs="0" maxOccurs="unbounded" />
                        </xs:choice>
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="rp" minOccurs="0" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="rt" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="rtc" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RuleDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The container for the information about the rule that is permitted/required for use in the
                assessment. The rule is defined in terms of SI or US units.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-description" type="xs:normalizedString" minOccurs="1" maxOccurs="1" />
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-rule-system-si" type="SIRuleSystemDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-rule-system-us" type="USRuleSystemDType" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="SelectionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The selection class specifies the rules used to select the child elements of a section for
                each test session. If no selection rules are given it must be assumed that all elements a-
                re to be selected. The selection class also provides an opportunity for extensions to this
                specification to include support for more complex selection algorithms.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:group ref="grpLax.any" />
        </xs:sequence>
        <xs:attribute name="select" use="required" type="xs:int" />
        <xs:attribute name="with-replacement" use="optional" default="false" type="xs:boolean" />
        <xs:attributeGroup ref="extension.Selection.Attr" />
    </xs:complexType>

    <xs:complexType name="SelectPointInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Like hotspotInteraction, a select point interaction is a graphic interaction. The candida-
                te's task is to select one or more points. The associated response may have an areaMapping
                that scores the response on the basis of comparing it against predefined areas but the de-
                livery engine must not indicate these areas of the image. Only the actual point(s) select-
                ed by the candidate shall be indicated. The select point interaction must be bound to a r-
                esponse variable with a base-type of point and single or multiple cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteractionDType">
                <xs:choice>
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                </xs:choice>
                <xs:attribute name="min-choices" use="optional" default="0" type="xs:nonNegativeInteger" />
                <xs:attribute name="max-choices" use="optional" default="0" type="xs:nonNegativeInteger" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SetValueDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The setValue rule sets the value of a variable (response, outcome or template) to the val-
                ue obtained from the associated expression. A variable can be updated with reference to a
                previously assigned value, in other words, the variable being set may appear in the expre-
                ssion where it takes the value previously assigned to it. Special care is required when u-
                sing the numeric base-types because floating point values can not be assigned to integer
                variables and vice-versa. The truncate, round or integerToFloat operators must be used to
                achieve numeric type conversion.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="identifier" use="required" type="IdentifierDType" />
    </xs:complexType>

    <xs:complexType name="SimpleAssociableChoiceDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is an ordered set of choices for the set.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-feedback-block" type="FeedbackBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-block" type="TemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="fixed" use="optional" type="xs:boolean" />
                <xs:attribute name="template-identifier" use="optional" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="match-group" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="IdentifierListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="match-max" use="required" type="xs:nonNegativeInteger" />
                <xs:attribute name="match-min" use="optional" default="0" type="xs:nonNegativeInteger" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SimpleChoiceDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                A simpleChoice is a choice that contains flowStatic objects. A simpleChoice must not cont-
                ain any nested interactions.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-feedback-block" type="FeedbackBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-block" type="TemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="fixed" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="template-identifier" use="optional" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional" default="show">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SimpleMatchSetDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the ordered set of choices for the match set.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-simple-associable-choice" type="SimpleAssociableChoiceDType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" use="optional" type="UniqueIdentifierDType" />
        <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
    </xs:complexType>

    <xs:complexType name="SIRuleSystemDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The container for the information about the rule that is permitted/required for use in the
                assessment. The rule is defined in terms of SI units.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-minimum-length" type="xs:integer" minOccurs="1" maxOccurs="1" />
            <xs:element name="qti-minor-increment" type="SILinearValueDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-major-increment" type="SILinearValueDType" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="SliderInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The Slider Interaction presents the candidate with a control for selecting a numerical va-
                lue between a lower and upper bound. It must be bound to a response variable with single
                cardinality with a base-type of either integer or float.
Note that a slider interaction d-
                oes not have a default or initial position except where specified by a default value for
                the associated response variable. The currently selected value, if any, must be clearly i-
                ndicated to the candidate. Because a slider interaction does not have a default or initial
                position, except where specified by a default value for the associated response variable,
                it is difficult to distinguish between an intentional response that corresponds to the sl-
                ider's initial position and a NULL response. As a workaround, sliderInteraction items have
                to either a) not count NULL responses (i.e. count all responses as intentional) or b) inc-
                lude a 'skip' button and count its activation combined with a RESPONSE variable that is e-
                qual to the slider's initial position as a NULL response.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteractionDType">
                <xs:attribute name="lower-bound" use="required" type="NonNegativeDoubleDType" />
                <xs:attribute name="upper-bound" use="required" type="NonNegativeDoubleDType" />
                <xs:attribute name="step" use="optional" default="1.0" type="NonNegativeDoubleDType" />
                <xs:attribute name="step-label" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="orientation" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The orientation attribute provides a hint to rendering systems that the associated struct-
                                ures have an inherent vertical or horizontal interpretation.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="horizontal" />
                            <xs:enumeration value="vertical" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="reverse" use="optional" type="xs:boolean" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SourceDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'source' tag is an HTML5 feature. The source tag allows authors to specify multiple a-
                lternative media resources for media tags. It does not represent anything on its own.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceEmptyDType">
                <xs:attribute name="src" use="optional" type="URLDType" />
                <xs:attribute name="type" use="optional" type="MimeTypeDType" />
                <xs:attribute name="srcset" use="optional" type="URLDType" />
                <xs:attribute name="media" use="optional" type="xs:normalizedString" />
                <xs:attribute name="sizes" use="optional" type="xs:normalizedString" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="StatsOperatorDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The statsOperator operator takes 1 sub-expression which is a container of multiple or ord-
                ered cardinality and has a numerical base-type. The result is a single float. If the sub--
                expression or any value contained therein is NULL, the result is NULL. If any value conta-
                ined in the sub-expression is not a numerical value, then the result is NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="name" use="required">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        The set of permitted names for the statsOperator expression.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="mean" />
                    <xs:enumeration value="sampleVariance" />
                    <xs:enumeration value="sampleSD" />
                    <xs:enumeration value="popVariance" />
                    <xs:enumeration value="popSD" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="StimulusBodyDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the content that is to be defined as the common stimulus in an
                Item cf. ItemBody. The stimulus body contains the text, graphics, media objects and inter-
                actions that describe the common content and information about how it is structured. The
                body is presented by combining it with stylesheet information, either explicitly or impli-
                citly using the default style rules of the delivery or authoring system.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                </xs:choice>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="StringMatchDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The stringMatch operator takes two sub-expressions which must have single and a base-type
                of string. The result is a single boolean with a value of true if the two strings match a-
                ccording to the comparison rules defined by the attributes below and false if they don't.
                If either sub-expression is NULL then the operator results in NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="2" maxOccurs="2">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="case-sensitive" use="required" type="xs:boolean" />
        <xs:attribute name="substring" use="optional" default="false" type="xs:boolean" />
    </xs:complexType>

    <xs:complexType name="SubstringDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The substring operator takes two sub-expressions which must both have an effective base-t-
                ype of string and single cardinality. The result is a single boolean with a value of true
                if the first expression is a substring of the second expression and false if it isn't. If
                either sub-expression is NULL then the result of the operator is NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="2" maxOccurs="2">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="case-sensitive" use="required" type="xs:boolean" />
    </xs:complexType>

    <xs:complexType name="TableDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the HTML 'table' tag functionality within the QTI context.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:element ref="caption" minOccurs="0" maxOccurs="1" />
                    <xs:element ref="col" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element ref="colgroup" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element ref="thead" minOccurs="0" maxOccurs="1" />
                    <xs:element ref="tfoot" minOccurs="0" maxOccurs="1" />
                    <xs:element ref="tbody" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element ref="tr" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="summary" use="optional" type="xs:string" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TablePartDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This allows the construction of the internal structures in the HTML Table tag, namely: the
                head, foot and body of the table.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:element ref="tr" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TDHDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This class allows the defnition of the contents of the HTML 'td' and 'th' tags i.e. the t-
                able cells used within the table rows.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-feedback-block" type="FeedbackBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hottext" type="HotTextDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-block" type="TemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-text-entry-interaction" type="TextEntryInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-inline-choice-interaction" type="InlineChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-end-attempt-interaction" type="EndAttemptInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-custom-interaction" type="CustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-portable-custom-interaction" type="PortableCustomInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-drawing-interaction" type="DrawingInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-gap-match-interaction" type="GapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-match-interaction" type="MatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-graphic-gap-match-interaction" type="GraphicGapMatchInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hotspot-interaction" type="HotspotInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-graphic-order-interaction" type="GraphicOrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-select-point-interaction" type="SelectPointInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-graphic-associate-interaction" type="GraphicAssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-slider-interaction" type="SliderInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-choice-interaction" type="ChoiceInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-media-interaction" type="MediaInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-hottext-interaction" type="HotTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-order-interaction" type="OrderInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-extended-text-interaction" type="ExtendedTextInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-upload-interaction" type="UploadInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-associate-interaction" type="AssociateInteractionDType" minOccurs="1" maxOccurs="1"/>
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="headers" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="IdentifierListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="scope" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of permitted values for the scope of a Table Cell.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="col" />
                            <xs:enumeration value="colgroup" />
                            <xs:enumeration value="row" />
                            <xs:enumeration value="rowgroup" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="abbr" use="optional" type="xs:string" />
                <xs:attribute name="axis" use="optional" type="xs:string" />
                <xs:attribute name="rowspan" use="optional" type="xs:int" />
                <xs:attribute name="colspan" use="optional" type="xs:int" />
                <xs:attribute name="align" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                Provides the permitted set of values for the 'align' attribute in the HTML markup i.e. how
                                the associated object is horizontally aligned on the page.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="left" />
                            <xs:enumeration value="center" />
                            <xs:enumeration value="right" />
                            <xs:enumeration value="justify" />
                            <xs:enumeration value="char" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="valign" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                Provides the permitted set of values for the 'valign' attribute in the HTML markup i.e. h-
                                ow the associated object is vertically aligned on the page.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="bottom" />
                            <xs:enumeration value="middle" />
                            <xs:enumeration value="top" />
                            <xs:enumeration value="baseline" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TemplateDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the 'template' tag in HTML. This tag acts as an extension point for the HTML-based
                content.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:group ref="grpAnyLax.any" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TemplateBlockDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This class is used to define the block content structures that are available for the crea-
                tion of Item templates. A qti-template-block must not contain any interactions, either di-
                rectly or indirectly.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="TemplateBlockContentDType">
                <xs:attribute name="template-identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional" default="show">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TemplateBlockContentDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This container class is used to define the common block content structures that are avail-
                able for the creation of Item templates.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:element name="qti-stylesheet" type="StyleSheetDType" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="qti-content-body" type="TemplateBlockContentBodyDType" minOccurs="0" maxOccurs="1" />
                    <xs:element name="qti-catalog-info" type="CatalogInfoDType" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TemplateBlockContentBodyDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for all of the content to be presented in the template block includ-
                ing all of the HTML-based content.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                </xs:choice>
                <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-template-block" type="TemplateBlockDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-feedback-block" type="TemplateBlockFeedbackBlockDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TemplateBlockFeedbackBlockDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This enables the Block content to be placed in template blocks. This structure is used to
                add constraints on how the block content can be used in recursive block templates.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="TemplateBlockContentDType">
                <xs:attribute name="outcome-identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional" default="show">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TemplateConditionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This class enables the definition of the template processing 'If..Then..Else' clause. If
                the expression given in the templateIf or templateElseIf evaluates to 'true' then the sub-
                -rules contained within it are followed and any following templateElseIf or templateElse
                parts are ignored for this template condition. If the expression given in the templateIf
                or templateElseIf does not evaluate to 'true' then consideration passes to the next templ-
                ateElseIf or, if there are no more templateElseIf parts then the sub-rules of the templat-
                eElse are followed (if specified).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-template-if" type="TemplateIfDType" minOccurs="1" maxOccurs="1" />
            <xs:element name="qti-template-else-if" type="TemplateIfDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-template-else" type="TemplateElseDType" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TemplateConstraintDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A templateConstraint contains an expression which must have an effective base-type of boo-
                lean and single cardinality. For more information about the runtime data model employed s-
                ee Expressions (Section 2). If the expression is 'false' (including if the expression is
                NULL), the template variables are set to their default values and qti-template-processing
                is restarted; this happens repeatedly until the expression is 'true' or the maximum number
                of iterations is reached. In the event that the maximum number of iterations is reached,
                any default values provided for the variables during declaration are used. Processing then
                continues with the next qti-template-rrule after the qti-template-constraint, or finishes
                if there are no further qti-template-rrules. By using a qti-template-constraint, authors
                can ensure that the values of variables set during qti-template-processing satisfy the co-
                ndition specified by the boolean expression. For example, two randomly selected numbers m-
                ight be required which have no common factors. A qti-template-constraint may occur anywhe-
                re as a child of qti-template-processing. It may not be used as a child of any other elem-
                ent. Any number of qti-template-constraints may be used, though two or more consecutive q-
                ti-template-constraints could be combined using the 'and' element to combine their boolean
                expressions. The maximum number of times that the operations preceding the qti-template-c-
                onstraint can be expected to be performed is assumed to be 100; implementations may permit
                more iterations, but there must be a finite maximum number of iterations. This prevents t-
                he occurrence of an endless loop. It is the responsibility of the author to provide defau-
                lt values for any variables assigned under a qti-template-constraint.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TemplateDeclarationDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Template declarations declare item variables that are to be used specifically for the pur-
                poses of cloning items. They can have their value set only during templateProcessing. They
                are referred to within the itemBody in order to individualize the clone and possibly also
                within the responseProcessing rules if the cloning process affects the way the item is sc-
                ored.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-default-value" type="DefaultValueDType" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="identifier" use="required" type="IdentifierDType" />
        <xs:attribute name="cardinality" use="required">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        Contains the permitted set of cardinality values. The cardinality is used in the context
                        of the associated variable.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="multiple" />
                    <xs:enumeration value="ordered" />
                    <xs:enumeration value="record" />
                    <xs:enumeration value="single" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="base-type" use="optional">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        A base-type is simply a description of a set of atomic values (atomic to this specificati-
                        on). Note that several of the base-types used to define the runtime data model have ident-
                        ical definitions to those of the basic data types used to define the values for attributes
                        in the specification itself. The use of an enumeration to define the set of base-types us-
                        ed in the runtime model, as opposed to the use of classes with similar names, is designed
                        to help distinguish between these two distinct levels of modelling.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="boolean" />
                    <xs:enumeration value="directedPair" />
                    <xs:enumeration value="duration" />
                    <xs:enumeration value="file" />
                    <xs:enumeration value="float" />
                    <xs:enumeration value="identifier" />
                    <xs:enumeration value="integer" />
                    <xs:enumeration value="pair" />
                    <xs:enumeration value="point" />
                    <xs:enumeration value="string" />
                    <xs:enumeration value="uri" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="param-variable" use="optional" default="false" type="xs:boolean" />
        <xs:attribute name="math-variable" use="optional" default="false" type="xs:boolean" />
    </xs:complexType>

    <xs:complexType name="TemplateDefaultDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The default value of a template variable in an item can be overridden based on the test c-
                ontext in which the template is instantiated. The value is obtained by evaluating an expr-
                ession defined within the reference to the item at test level and which may therefore dep-
                end on the values of variables taken from other items in the test or from outcomes defined
                at test level itself. For consistent results it is vital that the expression is evaluated
                at the correct time. When the assessmentItemRef occurs in a testPart navigated in linear
                mode the expression is evaluated immediately prior to the start of the first attempt, aft-
                er any pre-conditions are evaluated and acted upon but before the templateProcessing rules
                of the item itself are followed. In nonlinear mode the expression is evaluated at the sta-
                rt of the testPart. In both cases, the timing is unaffected by the submissionMode in effe-
                ct. Care needs to be taken to ensure that values of response variables are not used before
                they have been submitted and that outcome variables are not used before their values have
                been set by the corresponding response or outcomes processing steps. The facility of over-
                riding template defaults allows item templates to be linked to other items (or templates)
                within a test. A candidate response from one item can be used directly to affect the pres-
                entation or even the behaviour of an item presented after it. However once the template is
                instantiated it operates independently - there is no dynamic link created between the ite-
                ms and no concept of a shared variable space between them.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="template-identifier" use="required" type="IdentifierDType" />
    </xs:complexType>

    <xs:complexType name="TemplateElseDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This enables the definition of the 'Else' clause of the 'If..Then..Else' rule construction
                when defining a template.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="qti-set-template-value" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-exit-template" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-template-condition" type="TemplateConditionDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-set-default-value" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-set-correct-response" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-template-constraint" type="TemplateConstraintDType" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TemplateIfDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the 'If' and 'ElseIf' clauses of the 'If..Then..Else' for the template proc-
                essing functionality. A qti-response-if part consists of an expression which must have an
                effective base-type of boolean and single cardinality. For more information about the run-
                time data model employed see Expressions (Section 2). It also contains a set of sub-rules.
                If the expression is true then the sub-rules are processed, otherwise they are skipped (i-
                ncluding if the expression is NULL) and the following qti-template-else-if or qti-templat-
                e-else parts (if any) are considered instead.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="qti-and" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-not" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-or" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-sum" type="NumericLogic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-lt" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-duration-gte" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-subtract" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-multiple" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-ordered" type="Logic0toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-custom-operator" type="CustomOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-substring" type="SubstringDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal-rounded" type="EqualRoundedDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-null" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-delete" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-match" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-index" type="IndexDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-power" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-equal" type="EqualDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-contains" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-container-size" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-correct" type="CorrectDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-default" type="DefaultDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-any-n" type="AnyNDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-divide" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-integer-modulus" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-is-null" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-member" type="LogicPairDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-product" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-truncate" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-field-value" type="FieldValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-random-integer" type="RandomIntegerDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-random-float" type="RandomFloatDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-variable" type="VariableDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-test-variables" type="TestVariablesDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-integer-to-float" type="LogicSingleDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-inside" type="InsideDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-base-value" type="BaseValueDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-pattern-match" type="PatternMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-map-response-point" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-map-response" type="MapResponseDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-string-match" type="StringMatchDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-repeat" type="RepeatDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-round-to" type="RoundToDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-lcm" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-gcd" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-min" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-max" type="Logic1toManyDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-constant" type="MathConstantDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-stats-operator" type="StatsOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-math-operator" type="MathOperatorDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-number-correct" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-incorrect" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-presented" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-responded" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-number-selected" type="NumberDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-minimum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-outcome-maximum" type="OutcomeMinMaxDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="qti-set-template-value" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-exit-template" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-template-condition" type="TemplateConditionDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-set-default-value" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-set-correct-response" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-template-constraint" type="TemplateConstraintDType" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TemplateInlineDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This enables the Inline content to be placed in templates. This structure is used to add
                constraints on how the inline content can be used in recursive templates.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="qti-hottext" type="HotTextDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-gap" type="GapDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-feedback-inline" type="FeedbackInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="qti-template-inline" type="TemplateInlineDType" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="template-identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="show-hide" use="optional" default="show">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of values for whether or not the associated object should be displayed or hidden.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="show" />
                            <xs:enumeration value="hide" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TemplateProcessingDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Template processing consists of one or more templateRules that are followed by the cloning
                engine or delivery system in order to assign values to the template variables. Template p-
                rocessing is identical in form to responseProcessing except that the purpose is to assign
                values to template variables, not outcome variables.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element name="qti-set-template-value" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-exit-template" type="EmptyPrimitiveTypeDType" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-template-condition" type="TemplateConditionDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-set-default-value" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-set-correct-response" type="SetValueDType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="qti-template-constraint" type="TemplateConstraintDType" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TestFeedbackDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This class is used to define the test-level feedback content that can be presented to the
                learner. It must not contain an interaction object, either directly or indirectly. Feedba-
                ck elements can be embedded inside each other, with one exception: feedBackInline cannot
                contain feedbackBlock elements.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-stylesheet" type="StyleSheetDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-content-body" type="TestFeedbackFlowContentBodyDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-catalog-info" type="CatalogInfoDType" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="access" use="required">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        The permitted set of values for defining the time at which the test feedback to the candi-
                        date.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="atEnd" />
                    <xs:enumeration value="during" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="outcome-identifier" use="required" type="IdentifierDType" />
        <xs:attribute name="show-hide" use="required">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        The set of values for whether or not the associated object should be displayed or hidden.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="identifier" use="required" type="IdentifierDType" />
        <xs:attribute name="title" use="optional" type="xs:normalizedString" />
        <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
    </xs:complexType>

    <xs:complexType name="TestFeedbackFlowContentBodyDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the HTML-based content to be presented as part of the feedback
                process in Tests. This wrapper was added as part of the QTI 3.0 revision.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                </xs:choice>
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TestPartDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A test is composed of one or more test parts. A test-part represents a major division of
                the test and is used to control the basic mode parameters that apply to all sections and
                sub-sections within that part.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-pre-condition" type="LogicSingleDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-branch-rule" type="BranchRuleDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="qti-item-session-control" type="ItemSessionControlDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-time-limits" type="TimeLimitsDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-rubric-block" type="TestRubricBlockDType" minOccurs="0" maxOccurs="unbounded" />
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element ref="qti-assessment-section" minOccurs="1" maxOccurs="1" />
                <xs:element name="qti-assessment-section-ref" type="AssessmentSectionRefDType" minOccurs="1" maxOccurs="1" />
            </xs:choice>
            <xs:element name="qti-test-feedback" type="TestFeedbackDType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="identifier" use="required" type="IdentifierDType" />
        <xs:attribute name="title" use="optional" type="xs:normalizedString" />
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringListDType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="navigation-mode" use="required">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        The navigation mode determines the general paths that the candidate may take throught the
                        test.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="linear" />
                    <xs:enumeration value="nonlinear" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="submission-mode" use="required">
            <xs:simpleType>
                <xs:annotation>
                    <xs:documentation source="documentation">
                        The submission mode determines when the candidate's responses are submitted for response
                        processing.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="individual" />
                    <xs:enumeration value="simultaneous" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
    </xs:complexType>

    <xs:complexType name="TestRubricBlockDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The container for the test-level and section-level rubric block content. A rubric block i-
                dentifies part of the content that represents instructions to one or more of the actors t-
                hat view the test. Rubric Blocks MUST NOT be nested within other Rubric Blocks.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseDType">
                <xs:sequence>
                    <xs:element name="qti-stylesheet" type="StyleSheetDType" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="qti-content-body" type="TestRubricBlockContentBodyDType" minOccurs="1" maxOccurs="1" />
                    <xs:element name="qti-catalog-info" type="CatalogInfoDType" minOccurs="0" maxOccurs="1" />
                    <xs:element name="qti-printed-variable" type="PrintedVariableDType" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
                <xs:attribute name="view" use="required">
                    <xs:simpleType>
                        <xs:list itemType="ViewEnumDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="use" use="optional">
                    <xs:simpleType>
                        <xs:union>
                            <xs:simpleType>
                                <xs:restriction base="UseExtensionStringDType" />
                            </xs:simpleType>
                            <xs:simpleType>
                                <xs:restriction base="xs:string">
                                    <xs:enumeration value="instructions" />
                                    <xs:enumeration value="scoring" />
                                    <xs:enumeration value="navigation" />
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:union>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TestRubricBlockContentBodyDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for all of the content to be presented in the test-level rubric blo-
                cks. Most of this material is HTML-based content. Unlike RubricBlockContentBody, it does
                not allow for templates or printed variables.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="picture" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="details" minOccurs="1" maxOccurs="1" />
                </xs:choice>
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TextEntryInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A TextEntry Interaction is an inlineInteraction that obtains a simple piece of text from
                the candidate. Like inlineChoiceInteraction, the delivery engine must allow the candidate
                to review their choice within the context of the surrounding text. The textEntryInteracti-
                on must be bound to a response variable with single or record cardinality only. If the re-
                sponse variable has single cardinality the base-type must be one of string, integer or fl-
                oat; if it has record cardinality the permitted fields are 'stringValue', 'floatValue', e-
                tc.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmptyDType">
                <xs:attribute name="response-identifier" use="required" type="UniqueIdentifierRefDType" />
                <xs:attribute name="base" use="optional" default="10" type="xs:int" />
                <xs:attribute name="string-identifier" use="optional" type="UniqueIdentifierRefDType" />
                <xs:attribute name="expected-length" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="pattern-mask" use="optional" type="xs:string" />
                <xs:attribute name="placeholder-text" use="optional" type="xs:string" />
                <xs:attribute name="format" use="optional" type="xs:normalizedString" />
                <xs:attribute name="data-patternmask-message" use="optional" type="xs:normalizedString" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TRDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This makes the HTML tag 'tr' available for the definition of tables.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element ref="td" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="th" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TrackDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'track' tag is an HTML5 feature. The track tag allows authors to specify explicit ext-
                ernal timed text tracks for media elements. It does not represent anything on its own.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceEmptyDType">
                <xs:attribute name="kind" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                This is the permitted set of values for the 'kind' attribute on the HTML5 'track' tag.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="subtitles" />
                            <xs:enumeration value="captions" />
                            <xs:enumeration value="descriptions" />
                            <xs:enumeration value="chapters" />
                            <xs:enumeration value="metadata" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="src" use="required" type="URLDType" />
                <xs:attribute name="srclang" use="optional" type="xs:normalizedString" />
                <xs:attribute name="default" use="optional" type="xs:boolean" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="UploadInteractionDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The Upload Interaction allows the candidate to upload a pre-prepared file representing th-
                eir response. It must be bound to a response variable with base-type file and single card-
                inality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteractionDType">
                <xs:attribute name="type" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="MimeTypeListDType" />
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="USRuleSystemDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The container for the information about the rule that is permitted/required for use in the
                assessment. The rule is defined in terms of US units.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="qti-minimum-length" type="xs:integer" minOccurs="1" maxOccurs="1" />
            <xs:element name="qti-minor-increment" type="USLinearValueDType" minOccurs="0" maxOccurs="1" />
            <xs:element name="qti-major-increment" type="USLinearValueDType" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="VideoDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'video' tag is an HTML5 feature. A video tag is used for playing videos or movies, and
                audio files with captions.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceDType">
                <xs:sequence>
                    <xs:element ref="source" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element ref="track" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="src" use="optional" type="URLDType" />
                <xs:attribute name="crossorigin" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The permitted set of values for the Cross Origin Resource Sharing ARIA settings.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="anonymous" />
                            <xs:enumeration value="use-credentials" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="preload" use="optional" default="metadata">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                This is the permitted set of values for the 'preload' attribute on the HTML5 'audio' and
                                'video' tags.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="none" />
                            <xs:enumeration value="auto" />
                            <xs:enumeration value="metadata" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="autoplay" use="optional" type="xs:boolean" />
                <xs:attribute name="mediagroup" use="optional" type="xs:normalizedString" />
                <xs:attribute name="loop" use="optional" type="xs:boolean" />
                <xs:attribute name="muted" use="optional" type="xs:boolean" />
                <xs:attribute name="controls" use="optional" type="xs:boolean" />
                <xs:attribute name="poster" use="optional" type="URLDType" />
                <xs:attribute name="width" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="height" use="optional" type="xs:nonNegativeInteger" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Generate the SOAP Binding ComplexTypes *********************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the derived ComplexTypes **************************************************************** -->

    <xs:complexType name="AdaptiveHrefDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the data-type for referencing information that is to be used to support the data
                exchange with the adaptive testing engine.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="href" use="required" type="xs:anyURI" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AreaMapEntryDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The map is defined by a set of qti-area-map-entry objects, each of which maps an area of
                the coordinate space onto a single float. When mapping points each area is tested in turn,
                with those listed first taking priority in the case where areas overlap and a point falls
                in the intersection.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="shape" use="required">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The permitted set of values for the shape of the associated region. A value of a shape is
                                always accompanied by coordinates (see coords and an associated image which provides a co-
                                ntext for interpreting them).
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="circle" />
                            <xs:enumeration value="default" />
                            <xs:enumeration value="ellipse" />
                            <xs:enumeration value="poly" />
                            <xs:enumeration value="rect" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="coords" use="required" type="CoordsDType" />
                <xs:attribute name="mapped-value" use="required" type="xs:double" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ARIABaseEmptyDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a base class for all of the ARIA characteristics for an instance that must be emp-
                ty. It is from this container that all of the other empty classes inherit their set of AR-
                IA capabilities. This set of characteristics is taken from the Accessible Rich Internet A-
                pplications (WAI-ARIA) specification [ARIA, 14], [WAI-ARIA, 17] and [WAI-ARIA, 21].  WAI--
                ARIA This specification provides an ontology of roles, states, and properties that define
                accessible user interface elements and can be used to improve the accessibility and inter-
                operability of web content and applications. These semantics are designed to allow an aut-
                hor to properly convey user interface behaviors and structural information to assistive t-
                echnologies in document-level markup.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="role" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The permitted set of values for the ARIA roles that have been identified as applicable to
                                QTI XML markup.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="article" />
                            <xs:enumeration value="columnheader" />
                            <xs:enumeration value="definition" />
                            <xs:enumeration value="document" />
                            <xs:enumeration value="group" />
                            <xs:enumeration value="heading" />
                            <xs:enumeration value="img" />
                            <xs:enumeration value="list" />
                            <xs:enumeration value="listitem" />
                            <xs:enumeration value="math" />
                            <xs:enumeration value="note" />
                            <xs:enumeration value="presentation" />
                            <xs:enumeration value="region" />
                            <xs:enumeration value="row" />
                            <xs:enumeration value="rowgroup" />
                            <xs:enumeration value="rowheader" />
                            <xs:enumeration value="separator" />
                            <xs:enumeration value="toolbar" />
                            <xs:enumeration value="button" />
                            <xs:enumeration value="checkbox" />
                            <xs:enumeration value="gridcell" />
                            <xs:enumeration value="link" />
                            <xs:enumeration value="log" />
                            <xs:enumeration value="option" />
                            <xs:enumeration value="radio" />
                            <xs:enumeration value="slider" />
                            <xs:enumeration value="spinbutton" />
                            <xs:enumeration value="status" />
                            <xs:enumeration value="tab" />
                            <xs:enumeration value="tabpanel" />
                            <xs:enumeration value="textbox" />
                            <xs:enumeration value="timer" />
                            <xs:enumeration value="listbox" />
                            <xs:enumeration value="radiogroup" />
                            <xs:enumeration value="tablist" />
                            <xs:enumeration value="complementary" />
                            <xs:enumeration value="contentinfo" />
                            <xs:enumeration value="alert" />
                            <xs:enumeration value="alertdialog" />
                            <xs:enumeration value="application" />
                            <xs:enumeration value="banner" />
                            <xs:enumeration value="combobox" />
                            <xs:enumeration value="dialog" />
                            <xs:enumeration value="form" />
                            <xs:enumeration value="grid" />
                            <xs:enumeration value="main" />
                            <xs:enumeration value="marquee" />
                            <xs:enumeration value="menu" />
                            <xs:enumeration value="menubar" />
                            <xs:enumeration value="menuitem" />
                            <xs:enumeration value="menuitemcheckbox" />
                            <xs:enumeration value="menuitemradio" />
                            <xs:enumeration value="navigation" />
                            <xs:enumeration value="progressbar" />
                            <xs:enumeration value="scrollbar" />
                            <xs:enumeration value="search" />
                            <xs:enumeration value="tooltip" />
                            <xs:enumeration value="tree" />
                            <xs:enumeration value="treegrid" />
                            <xs:enumeration value="treeitem" />
                            <xs:enumeration value="searchbox" />
                            <xs:enumeration value="switch" />
                            <xs:enumeration value="term" />
                            <xs:enumeration value="figure" />
                            <xs:enumeration value="code" />
                            <xs:enumeration value="time" />
                            <xs:enumeration value="subscript" />
                            <xs:enumeration value="superscript" />
                            <xs:enumeration value="meter" />
                            <xs:enumeration value="generic" />
                            <xs:enumeration value="insertion" />
                            <xs:enumeration value="deletion" />
                            <xs:enumeration value="strong" />
                            <xs:enumeration value="emphasis" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="aria-controls" use="optional" type="xs:IDREFS" />
                <xs:attribute name="aria-describedby" use="optional" type="xs:IDREFS" />
                <xs:attribute name="aria-flowto" use="optional" type="xs:IDREFS" />
                <xs:attribute name="aria-label" use="optional" type="xs:normalizedString" />
                <xs:attribute name="aria-labelledby" use="optional" type="xs:IDREFS" />
                <xs:attribute name="aria-level" use="optional" type="ARIALevelIntegerDType" />
                <xs:attribute name="aria-live" use="optional" default="off">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                 The permitted set of values for the aria-live ARIA annotations.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="off" />
                            <xs:enumeration value="polite" />
                            <xs:enumeration value="assertive" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="aria-orientation" use="optional" default="horizontal">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of permitted values that indicate the orientation of the associated element.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="vertical" />
                            <xs:enumeration value="horizontal" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="aria-owns" use="optional" type="xs:IDREFS" />
                <xs:attribute name="aria-hidden" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="aria-activedescendant" use="optional" type="xs:IDREF" />
                <xs:attribute name="aria-atomic" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="aria-autocomplete" use="optional" default="none">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The permitted set of values for the aria-autocomplete ARIA annotations.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="inline" />
                            <xs:enumeration value="list" />
                            <xs:enumeration value="both" />
                            <xs:enumeration value="none" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="aria-busy" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="aria-checked" use="optional" default="undefined">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                 The permitted set of values for the aria-checked ARIA annotations.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="true" />
                            <xs:enumeration value="false" />
                            <xs:enumeration value="mixed" />
                            <xs:enumeration value="undefined" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="aria-disabled" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="aria-expanded" use="optional" default="undefined">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                 The permitted set of values for the aria-expanded ARIA annotations.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="true" />
                            <xs:enumeration value="false" />
                            <xs:enumeration value="undefined" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="aria-haspopup" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="aria-invalid" use="optional" default="false">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                 The permitted set of values for the aria-invalid ARIA annotations.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="true" />
                            <xs:enumeration value="false" />
                            <xs:enumeration value="grammar" />
                            <xs:enumeration value="spelling" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="aria-multiline" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="aria-multiselectable" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="aria-posinset" use="optional" type="ARIALevelIntegerDType" />
                <xs:attribute name="aria-pressed" use="optional" default="undefined">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                 The permitted set of values for the aria-pressed ARIA annotations.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="true" />
                            <xs:enumeration value="false" />
                            <xs:enumeration value="mixed" />
                            <xs:enumeration value="undefined" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="aria-readonly" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="aria-relevant" use="optional" default="additions text">
                    <xs:simpleType>
                        <xs:list itemType="ARIARelevantListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="aria-required" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="aria-selected" use="optional" default="undefined">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                 The permitted set of values for the aria-selected ARIA annotations.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="true" />
                            <xs:enumeration value="false" />
                            <xs:enumeration value="undefined" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="aria-setsize" use="optional" type="xs:integer" />
                <xs:attribute name="aria-sort" use="optional" default="none">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                 The permitted set of values for the aria-sort ARIA annotations.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="ascending" />
                            <xs:enumeration value="descending" />
                            <xs:enumeration value="none" />
                            <xs:enumeration value="other" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="aria-valuemax" use="optional" type="xs:decimal" />
                <xs:attribute name="aria-valuemin" use="optional" type="xs:decimal" />
                <xs:attribute name="aria-valuenow" use="optional" type="xs:decimal" />
                <xs:attribute name="aria-valuetext" use="optional" type="xs:string" />
                <xs:attribute name="aria-modal" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="aria-current" use="optional" default="false">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                This is the permitted vocabulary for the 'aria-current' characteristic. The 'aria-current'
                                attribute is used when an element within a set of related elements is visually styled to
                                indicate it is the current item in the set.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="page" />
                            <xs:enumeration value="step" />
                            <xs:enumeration value="location" />
                            <xs:enumeration value="date" />
                            <xs:enumeration value="time" />
                            <xs:enumeration value="true" />
                            <xs:enumeration value="false" />
                            <xs:enumeration value="undefined" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="aria-placeholder" use="optional" type="xs:string" />
                <xs:attribute name="aria-colcount" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="aria-rowcount" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="aria-colindex" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="aria-rowindex" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="aria-colspan" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="aria-rowspan" use="optional" type="xs:nonNegativeInteger" />
                <xs:attribute name="aria-keyshorts" use="optional" type="xs:string" />
                <xs:attribute name="aria-roledescription" use="optional" type="xs:string" />
                <xs:attribute name="aria-errormessage" use="optional" type="xs:IDREF" />
                <xs:attribute name="aria-details" use="optional" type="xs:IDREF" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AssessmentSectionRefDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Sections can be included into qti-test-parts or other qti-assessment-sections by aggregat-
                ion or by reference. The qti-assessment-section-ref element enables the inclusion by refe-
                rence. The only documents that can be refered to by qti-assessment-section-ref are XML do-
                cuments that contain a single qti-assessment-section as a single root. There are no other
                restrictions on the referenced qti-assessment-section document. The qti-assessment-sectio-
                n-ref element functions as a facade for the qti-assessment-section to which it refers. Th-
                at means that, at runtime, the document that contains the reference, with the refered-to
                section merged in, should behave exactly the same as a document that has all the same sec-
                tions aggregated in one document. Adaptive test branch rules can only refer to included or
                directly referenced sections, they can not refer to sections that are in their turn inclu-
                ded or referenced within the referenced section. That is to say, branching rules should t-
                reat referred sections as leaf nodes, that have no children that are amenable to branching
                separately from their immediate parent.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="class" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="StringListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="href" use="required" type="xs:anyURI" />
                <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AssessmentStimulusRefDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the structure that enables reference to a 'qti-assessment-stimulus' instance. The
                stimulus must be contained within its own instance and so the Item uses the 'qti-assessme-
                nt-stimulus-ref' structure to provide the link between the Item and the Stimulus.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="href" use="required" type="xs:anyURI" />
                <xs:attribute name="title" use="optional" type="xs:normalizedString" />
                <!-- xs:attribute The associated data-type has been deleted and so use of the attribute 'dataExtension' has been prohibited in this profile. -->
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BaseValueDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                One of the QTI expression functions. The simplest expression returns a single value from
                the set defined by the given base-type.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="base-type" use="required">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                A base-type is simply a description of a set of atomic values (atomic to this specificati-
                                on). Note that several of the base-types used to define the runtime data model have ident-
                                ical definitions to those of the basic data types used to define the values for attributes
                                in the specification itself. The use of an enumeration to define the set of base-types us-
                                ed in the runtime model, as opposed to the use of classes with similar names, is designed
                                to help distinguish between these two distinct levels of modelling.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="boolean" />
                            <xs:enumeration value="directedPair" />
                            <xs:enumeration value="duration" />
                            <xs:enumeration value="file" />
                            <xs:enumeration value="float" />
                            <xs:enumeration value="identifier" />
                            <xs:enumeration value="integer" />
                            <xs:enumeration value="pair" />
                            <xs:enumeration value="point" />
                            <xs:enumeration value="string" />
                            <xs:enumeration value="uri" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="ContextUniqueIDRefDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The data-type for the context variable identifiers that are to be available to the PCI.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="identifier" use="required" type="UniqueIdentifierRefDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="CorrectDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression. This expression looks up the declaration of a response variable
                and returns the associated correctResponse or NULL if no correct value was declared. When
                used in outcomes processing item identifier prefixing (see variable) may be used to obtain
                the correct response from an individual item.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DefaultDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is one of the QTI expression functions. This expression looks up the declaration of
                an item variable and returns the associated default value or NULL if no default value was
                declared. When used in outcomes processing item identifier prefixing (see variable) may be
                used to obtain the default value from an individual item.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="FileHrefCardDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the data-type for the URI for the associated content file for the alternative acc-
                essibility content.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:anyURI">
                <xs:attribute name="mime-type" use="required" type="MimeTypeDType" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="InteractionModuleDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An interaction configuration settings to be used by the PCI [PCI, 20]. This setting is de-
                fined with respect to the set of JavaScript library modules.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="id" use="required" type="xs:NCName" />
                <xs:attribute name="primary-path" use="optional" type="xs:anyURI" />
                <xs:attribute name="fallback-path" use="optional" type="xs:anyURI" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="InterpolationTableEntryDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Provides an interpolation table entry in the associated interpolation table.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="source-value" use="required" type="xs:double" />
                <xs:attribute name="include-boundary" use="optional" default="true" type="xs:boolean" />
                <xs:attribute name="target-value" use="required" type="xs:string" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ItemSessionControlDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                When items are referenced as part of a test, the test may impose constraints on how many
                attempts, and which states are allowed. These constraints can be specified for individual
                items, for whole sections or for an entire qti-test-part. By default, a setting at qti-te-
                st-part level affects all items in that part unless the setting is overridden at the qti--
                assessment-section level or ultimately at the individual qti-assessment-item-ref. The def-
                aults for an qti-Item-session-control are used only in the absence of any applicable cons-
                traint.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="max-attempts" use="optional" type="xs:int" />
                <xs:attribute name="show-feedback" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="allow-review" use="optional" default="true" type="xs:boolean" />
                <xs:attribute name="show-solution" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="allow-comment" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="allow-skipping" use="optional" default="true" type="xs:boolean" />
                <xs:attribute name="validate-responses" use="optional" default="false" type="xs:boolean" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="MapEntryDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a part of the mapping functionality. The map is defined by a set of qti-map-entry,
                each of which maps a single value from the source set onto a single float.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="map-key" use="required" type="xs:normalizedString" />
                <xs:attribute name="mapped-value" use="required" type="xs:double" />
                <xs:attribute name="case-sensitive" use="optional" default="false" type="xs:boolean" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="MapResponseDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression function. This expression looks up the value of a response varia-
                ble and then transforms it using the associated mapping, which must have been declared. T-
                he result is a single float. If the response variable has single cardinality then the val-
                ue returned is simply the mapped target value from the map. If the response variable has
                multiple or ordered cardinality then the value returned is the sum of the mapped target v-
                alues. This expression cannot be applied to variables of record cardinality. For example,
                if a mapping associates the identifiers {A,B,C,D} with the values {0,1,0.5,0} respectively
                then mapResponse will map the single value 'C' to the numeric value 0.5 and the set of va-
                lues {C,B} to the value 1.5. If a container contains multiple instances of the same value
                then that value is counted once only. To continue the example above {B,B,C} would still m-
                ap to 1.5 and not 2.5.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="MatchTableEntryDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A qti-match-table transforms a source integer by finding the first qti-match-table-entry
                with an exact match to the source. The qti-match-table-entry allows the definition of each
                entry in the table.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="source-value" use="required" type="xs:int" />
                <xs:attribute name="target-value" use="required">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                A base-type is simply a description of a set of atomic values (atomic to this specificati-
                                on). Note that several of the base-types used to define the runtime data model have ident-
                                ical definitions to those of the basic data types used to define the values for attributes
                                in the specification itself. The use of an enumeration to define the set of base-types us-
                                ed in the runtime model, as opposed to the use of classes with similar names, is designed
                                to help distinguish between these two distinct levels of modelling.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="boolean" />
                            <xs:enumeration value="directedPair" />
                            <xs:enumeration value="duration" />
                            <xs:enumeration value="file" />
                            <xs:enumeration value="float" />
                            <xs:enumeration value="identifier" />
                            <xs:enumeration value="integer" />
                            <xs:enumeration value="pair" />
                            <xs:enumeration value="point" />
                            <xs:enumeration value="string" />
                            <xs:enumeration value="uri" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="MathConstantDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression function. The result is a mathematical constant returned as a si-
                ngle float, e.g. Pi and e.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="name" use="required">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The set of mathematical constants available to the mathematical expressions.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="pi" />
                            <xs:enumeration value="e" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="NumberDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is base class for some of the QTI expressions. This is the data-type used in some of
                the functions that are used in Outcome Processing only and which provide summative inform-
                ation.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="section-identifier" use="optional" type="IdentifierDType" />
                <xs:attribute name="include-category" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="IdentifierListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="exclude-category" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="IdentifierListDType" />
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="OutcomeMinMaxDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a data-type for the 'qti-outcome-minimum' and 'qti-outcome-maximum' QTI expressio-
                ns for outcome processing.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="section-identifier" use="optional" type="IdentifierDType" />
                <xs:attribute name="include-category" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="IdentifierListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="exclude-category" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="IdentifierListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="outcome-identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="weight-identifier" use="optional" type="IdentifierDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ParamDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for a parameter being passed to the HTML 'object' tag.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="name" use="required" type="xs:string" />
                <xs:attribute name="value" use="required" type="xs:string" />
                <xs:attribute name="valuetype" use="required">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The type of parameters that may be associated with the HTML object.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="DATA" />
                            <xs:enumeration value="REF" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="type" use="optional" type="MimeTypeDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="PrintedVariableDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The outcome variable or template variable must have been defined. The values of response
                variables cannot be printed directly as their values are implicitly known to the candidate
                through the interactions they are bound to; if necessary, their values can be assigned to
                outcomes during response processing and displayed to the candidate as part of a body elem-
                ent visible only in the appropriate feedback states.
If the variable's value is NULL then
                the element is ignored. Variables of base-type string are treated as simple runs of text.-

Variables of base-type integer or float are converted to runs of text (strings) using the
                formatting rules described below. Float values should only be formatted in the e, E, f, g,
                G, r or R styles.
Variables of base-type duration are treated as floats, representing the
                duration in seconds.
Variables of base-type file are rendered using a control that enables
                the user to open the file. The control should display the name associated with the file,
                if any.
Variables of base-type uri are rendered using a control that enables the user to
                open the identified resource, for example, by following a hypertext link in the case of a
                URL.
For variables of single cardinality, the value of the variable is printed.
For varia-
                bles of ordered cardinality, if the attribute index is set, the single value corresponding
                to the indexed member is printed, otherwise an ordered list of the values within the cont-
                ainer is printed, delimited by the string value of the delimiter attribute.
For variables
                of multiple cardinality, a list of the values within the container is printed, delimited
                by the string value of the delimiter attribute.
For variables of record cardinality, if t-
                he attribute field is set, the value corresponding to the specified field is printed, oth-
                erwise a list of the field names and corresponding field values within the variable is pr-
                inted, delimited by the string value of the delimiter attribute and with the corresponden-
                ce between them indicated by the string value of the mappingIndicator attribute.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="id" use="optional" type="UniqueIdentifierDType" />
                <xs:attribute name="class" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="StringListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute ref="xml:lang" use="optional" />
                <xs:attribute name="label" use="optional" type="xs:normalizedString" />
                <xs:attribute ref="xml:base" use="optional" />
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="format" use="optional" type="xs:normalizedString" />
                <xs:attribute name="base" use="optional" default="10">
                    <xs:simpleType>
                        <xs:union>
                            <xs:simpleType>
                                <xs:restriction base="xs:integer" />
                            </xs:simpleType>
                            <xs:simpleType>
                                <xs:restriction base="VariableStringDType" />
                            </xs:simpleType>
                        </xs:union>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="index" use="optional">
                    <xs:simpleType>
                        <xs:union>
                            <xs:simpleType>
                                <xs:restriction base="xs:integer" />
                            </xs:simpleType>
                            <xs:simpleType>
                                <xs:restriction base="VariableStringDType" />
                            </xs:simpleType>
                        </xs:union>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="power-form" use="optional" default="false" type="xs:boolean" />
                <xs:attribute name="field" use="optional" type="xs:normalizedString" />
                <xs:attribute name="delimiter" use="optional" default=";" type="xs:normalizedString" />
                <xs:attribute name="mapping-indicator" use="optional" default="=" type="xs:normalizedString" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RadialSIValueDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The container for the information about the increment size for a protractor.  The value is
                in the associated type of SI unit.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:decimal">
                <xs:attribute name="unit" use="required">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The permitted values for the SI radial units.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="Radian" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="RadialUSValueDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The container for the information about the increment size for a protractor.  The value is
                in the associated type of non-SI unit.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:decimal">
                <xs:attribute name="unit" use="required">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The permitted values for the non-SI radial units.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="Degree" />
                            <xs:enumeration value="Minute" />
                            <xs:enumeration value="Second" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="RandomFloatDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expresssion function. Selects a random float from the specified range [min,-
                max].
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="min" use="optional" default="0">
                    <xs:simpleType>
                        <xs:union>
                            <xs:simpleType>
                                <xs:restriction base="xs:double" />
                            </xs:simpleType>
                            <xs:simpleType>
                                <xs:restriction base="VariableStringDType" />
                            </xs:simpleType>
                        </xs:union>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="max" use="required">
                    <xs:simpleType>
                        <xs:union>
                            <xs:simpleType>
                                <xs:restriction base="xs:double" />
                            </xs:simpleType>
                            <xs:simpleType>
                                <xs:restriction base="VariableStringDType" />
                            </xs:simpleType>
                        </xs:union>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RandomIntegerDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression function. Selects a random integer from the specified range [min-
                ,max] satisfying min + step * n for some integer n. For example, with min=2, max=11 and s-
                tep=3 the values {2,5,8,11} are possible.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="min" use="optional" default="0">
                    <xs:simpleType>
                        <xs:union>
                            <xs:simpleType>
                                <xs:restriction base="xs:integer" />
                            </xs:simpleType>
                            <xs:simpleType>
                                <xs:restriction base="VariableStringDType" />
                            </xs:simpleType>
                        </xs:union>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="max" use="required">
                    <xs:simpleType>
                        <xs:union>
                            <xs:simpleType>
                                <xs:restriction base="xs:integer" />
                            </xs:simpleType>
                            <xs:simpleType>
                                <xs:restriction base="VariableStringDType" />
                            </xs:simpleType>
                        </xs:union>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="step" use="optional" default="1">
                    <xs:simpleType>
                        <xs:union>
                            <xs:simpleType>
                                <xs:restriction base="xs:integer" />
                            </xs:simpleType>
                            <xs:simpleType>
                                <xs:restriction base="VariableStringDType" />
                            </xs:simpleType>
                        </xs:union>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SILinearValueDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The container for the information about the increment (length and unit) of a Rule.  The v-
                alue is the length in the associated type of SI unit.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:decimal">
                <xs:attribute name="unit" use="required">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The permitted values for the SI length units.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="Millimeter" />
                            <xs:enumeration value="Centimeter" />
                            <xs:enumeration value="Meter" />
                            <xs:enumeration value="Kilometer" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="StyleSheetDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Used to associate an external stylesheet with an object such as an assessmentItem, etc. Q-
                TI supports CSS 2.1 and CSS 3.0.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="href" use="required" type="xs:anyURI" />
                <xs:attribute name="type" use="required" type="MimeTypeDType" />
                <xs:attribute name="media" use="optional" type="xs:normalizedString" />
                <xs:attribute name="title" use="optional" type="xs:normalizedString" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TemplateUniqueIDRefDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The data-type for the template variable identifiers that are to be available to the PCI.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="template-identifier" use="required" type="IdentifierDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TestVariablesDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression function. This expression, which can only be used in outcomes pr-
                ocessing, simultaneously looks up the value of an item variable in a sub-set of the items
                referred to in a test. Only variables with single cardinality are considered, all NULL va-
                lues are ignored. The result has cardinality multiple and base-type as specified below.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="section-identifier" use="optional" type="IdentifierDType" />
                <xs:attribute name="include-category" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="IdentifierListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="exclude-category" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="IdentifierListDType" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="variable-identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="weight-identifier" use="optional" type="IdentifierDType" />
                <xs:attribute name="base-type" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                A base-type is simply a description of a set of atomic values (atomic to this specificati-
                                on). Note that several of the base-types used to define the runtime data model have ident-
                                ical definitions to those of the basic data types used to define the values for attributes
                                in the specification itself. The use of an enumeration to define the set of base-types us-
                                ed in the runtime model, as opposed to the use of classes with similar names, is designed
                                to help distinguish between these two distinct levels of modelling.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="boolean" />
                            <xs:enumeration value="directedPair" />
                            <xs:enumeration value="duration" />
                            <xs:enumeration value="file" />
                            <xs:enumeration value="float" />
                            <xs:enumeration value="identifier" />
                            <xs:enumeration value="integer" />
                            <xs:enumeration value="pair" />
                            <xs:enumeration value="point" />
                            <xs:enumeration value="string" />
                            <xs:enumeration value="uri" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TimeLimitsDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                In the context of a specific qti-assessment-test an item, or group of items, may be subje-
                ct to a time constraint. This specification supports both minimum and maximum time constr-
                aints. The controlled time for a single item is simply the duration of the item session as
                defined by the builtin response variable duration. For qti-assessment-sections, qti-test--
                parts and whole qti-assessment-tests the time limits relate to the durations of all the i-
                tem sessions plus any other time spent navigating that part of the test. In other words,
                the time includes time spent in states where no item is being interacted with, such as de-
                dicated navigation screens. The allow-late-submission attribute regulates whether a candi-
                date's response that is beyond the max-time should still be accepted. Minimum times are a-
                pplicable to qti-assessment-sections and qti-assessment-items only when linear navigation
                mode is in effect.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="min-time" use="optional" type="NonNegativeDoubleDType" />
                <xs:attribute name="max-time" use="optional" type="NonNegativeDoubleDType" />
                <xs:attribute name="allow-late-submission" use="optional" default="false" type="xs:boolean" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="USLinearValueDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The container for the information about the increment (length and unit) of a Rule.  The v-
                alue is the length in the associated type of, non-SI, unit.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:decimal">
                <xs:attribute name="unit" use="required">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                The permitted values for the non-SI length units.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="Inch" />
                            <xs:enumeration value="Foot" />
                            <xs:enumeration value="Yard" />
                            <xs:enumeration value="Mile" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="ValueDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A class that can represent a single value of any base-type in variable declarations and r-
                esult reports. The base-type is defined by the 'base-type' attribute of the declaration e-
                xcept in the case of variables with record cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:normalizedString">
                <xs:attribute name="field-identifier" use="optional" type="IdentifierDType" />
                <xs:attribute name="base-type" use="optional">
                    <xs:simpleType>
                        <xs:annotation>
                            <xs:documentation source="documentation">
                                A base-type is simply a description of a set of atomic values (atomic to this specificati-
                                on). Note that several of the base-types used to define the runtime data model have ident-
                                ical definitions to those of the basic data types used to define the values for attributes
                                in the specification itself. The use of an enumeration to define the set of base-types us-
                                ed in the runtime model, as opposed to the use of classes with similar names, is designed
                                to help distinguish between these two distinct levels of modelling.
                            </xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="boolean" />
                            <xs:enumeration value="directedPair" />
                            <xs:enumeration value="duration" />
                            <xs:enumeration value="file" />
                            <xs:enumeration value="float" />
                            <xs:enumeration value="identifier" />
                            <xs:enumeration value="integer" />
                            <xs:enumeration value="pair" />
                            <xs:enumeration value="point" />
                            <xs:enumeration value="string" />
                            <xs:enumeration value="uri" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="VariableDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression function. This expression looks up the value of an item variable
                that has been declared in a corresponding variable declaration or is one of the built-in
                variables. The result has the base-type and cardinality declared for the variable subject
                to the type promotion of weighted outcomes. During outcomes processing, values taken from
                an individual item session can be looked up by prefixing the name of the item variable wi-
                th the identifier assigned to the item in the qti-assessment-item-ref, separated by a per-
                iod character. For example, to obtain the value of the SCORE variable in the item referred
                to as Q01 you would use a variable instance with identifier Q01.SCORE. In adaptive tests
                that contain items that are allowed to be replaced (i.e. that have the with-replacement a-
                ttribute set to "true"), the same item can be instantiated more than once. In order to ac-
                cess the outcome variable values of each instantiation, a number that denotes the instanc-
                e's place in the sequence of the item's instantiation is inserted between the item variab-
                le identifier and the item variable, separated by a period character. For example, to obt-
                ain the value of the SCORE variable in the item referred to as Q01 in its second instanti-
                ation you would use a variable instance, prefixed by the instantiation sequence number, p-
                refixed by an identifier Q01.2.SCORE. When looking up the value of a response variable it
                always takes the value assigned to it by the candidate's last submission. Unsubmitted res-
                ponses are not available during expression evaluation. The value of an item variable taken
                from an item instantiated multiple times from the same qti-assessment-item-ref (through t-
                he use of selection with-replacement) is taken from the last instance submitted if submis-
                sion is simultaneous, otherwise it is undefined.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="weight-identifier" use="optional" type="IdentifierDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="VariableMappingDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Variable mappings allow outcome variables declared with the name source-identifier in the
                corresponding item to be treated as if they were declared with the name target-identifier
                during outcome processing. Use of variable mappings allows more control over the way outc-
                omes are aggregated when using test variables.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="source-identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="target-identifier" use="required" type="IdentifierDType" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="WeightDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The contribution of an individual item score to an overall test score typically varies fr-
                om test to test. The score of the item is said to be weighted. Weights are defined as part
                of each reference to an item (qti-assessment-item-ref) within a test.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attribute name="identifier" use="required" type="IdentifierDType" />
                <xs:attribute name="value" use="required" type="xs:double" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Declaration of the elements (Complex) ************************************************************ -->

    <xs:element name="a" type="ADType" />

    <xs:element name="abbr" type="HTMLTextDType" />

    <xs:element name="acronym" type="HTMLTextDType" />

    <xs:element name="address" type="HTMLTextDType" />

    <xs:element name="article" type="BaseHTML5FlowDType" />

    <xs:element name="aside" type="BaseHTML5FlowDType" />

    <xs:element name="audio" type="AudioDType" />

    <xs:element name="b" type="HTMLTextDType" />

    <xs:element name="bdi" type="BDIDType" />

    <xs:element name="bdo" type="BDODType" />

    <xs:element name="big" type="HTMLTextDType" />

    <xs:element name="blockquote" type="BlockQuoteDType" />

    <xs:element name="br" type="BRDType" />

    <xs:element name="caption" type="CaptionDType" />

    <xs:element name="cite" type="HTMLTextDType" />

    <xs:element name="code" type="HTMLTextDType" />

    <xs:element name="col" type="ColDType" />

    <xs:element name="colgroup" type="ColGroupDType" />

    <xs:element name="dd" type="DDDType" />

    <xs:element name="details" type="DetailsDType" />

    <xs:element name="dfn" type="HTMLTextDType" />

    <xs:element name="div" type="DivDType" />

    <xs:element name="dl" type="DLDType" />

    <xs:element name="dt" type="DTDType" />

    <xs:element name="em" type="HTMLTextDType" />

    <xs:element name="figcaption" type="BaseHTML5FlowDType" />

    <xs:element name="figure" type="FigureDType" />

    <xs:element name="footer" type="BaseHTML5FlowDType" />

    <xs:element name="h1" type="HTMLTextDType" />

    <xs:element name="h2" type="HTMLTextDType" />

    <xs:element name="h3" type="HTMLTextDType" />

    <xs:element name="h4" type="HTMLTextDType" />

    <xs:element name="h5" type="HTMLTextDType" />

    <xs:element name="h6" type="HTMLTextDType" />

    <xs:element name="header" type="BaseHTML5FlowDType" />

    <xs:element name="hr" type="HRDType" />

    <xs:element name="i" type="HTMLTextDType" />

    <xs:element name="img" type="ImgDType" />

    <xs:element name="kbd" type="HTMLTextDType" />

    <xs:element name="label" type="BaseHTML5FlowDType" />

    <xs:element name="li" type="LIDType" />

    <xs:element name="nav" type="BaseHTML5FlowDType" />

    <xs:element name="object" type="ObjectDType" />

    <xs:element name="ol" type="OULDType" />

    <xs:element name="p" type="HTMLTextDType" />

    <xs:element name="picture" type="PictureDType" />

    <xs:element name="pre" type="HTMLTextDType" />

    <xs:element name="q" type="QDType" />

    <xs:element name="qti-outcome-processing" type="OutcomeProcessingDType" />

    <xs:element name="rb" type="BaseHTML5PhrasingDType" />

    <xs:element name="rp" type="BaseHTML5PhrasingDType" />

    <xs:element name="rt" type="BaseHTML5PhrasingDType" />

    <xs:element name="rtc" type="RTCDType" />

    <xs:element name="ruby" type="RubyDType" />

    <xs:element name="samp" type="HTMLTextDType" />

    <xs:element name="section" type="BaseHTML5FlowDType" />

    <xs:element name="small" type="HTMLTextDType" />

    <xs:element name="source" type="SourceDType" />

    <xs:element name="span" type="HTMLTextDType" />

    <xs:element name="strong" type="HTMLTextDType" />

    <xs:element name="sub" type="HTMLTextDType" />

    <xs:element name="summary" type="BaseHTML5PhrasingDType" />

    <xs:element name="sup" type="HTMLTextDType" />

    <xs:element name="table" type="TableDType" />

    <xs:element name="tbody" type="TablePartDType" />

    <xs:element name="td" type="TDHDType" />

    <xs:element name="template" type="TemplateDType" />

    <xs:element name="tfoot" type="TablePartDType" />

    <xs:element name="th" type="TDHDType" />

    <xs:element name="thead" type="TablePartDType" />

    <xs:element name="tr" type="TRDType" />

    <xs:element name="track" type="TrackDType" />

    <xs:element name="tt" type="HTMLTextDType" />

    <xs:element name="ul" type="OULDType" />

    <xs:element name="var" type="HTMLTextDType" />

    <xs:element name="video" type="VideoDType" />

    <!-- ================================================================================================== -->

    <!-- Declaration of the elements (Derived) ************************************************************ -->

    <!-- ================================================================================================== -->

    <!-- Declaration of the root element(s) *************************************************************** -->

    <xs:element name="qti-assessment-item" type="AssessmentItemDType" />
    <xs:element name="qti-assessment-section" type="AssessmentSectionDType" />
    <xs:element name="qti-assessment-stimulus" type="AssessmentStimulusDType" />
    <xs:element name="qti-assessment-test" type="AssessmentTestDType" />
    <xs:element name="qti-outcome-declaration" type="OutcomeDeclarationDType" />
    <xs:element name="qti-response-processing" type="ResponseProcessingDType" />

    <!-- ================================================================================================== -->

</xs:schema>
