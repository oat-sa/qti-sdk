<?xml version = "1.0" encoding = "UTF-8"?>
<xs:schema xmlns="http://www.imsglobal.org/xsd/imsqtiv2p2_html5_v1p0"
     targetNamespace="http://www.imsglobal.org/xsd/imsqtiv2p2_html5_v1p0"
     xmlns:m2="http://www.w3.org/1998/Math/MathML"
     xmlns:m3="http://www.w3.org/2010/Math/MathML"
     xmlns:qti="http://www.imsglobal.org/xsd/imsqti_v2p2"
     xmlns:xi="http://www.w3.org/2001/XInclude"
     xmlns:ssml11="http://www.w3.org/2010/10/synthesis"
     xmlns:xs="http://www.w3.org/2001/XMLSchema"
     xmlns:sch="http://purl.oclc.org/dsdl/schematron"
     version="IMS QTI HTML5 2.2.4"
     elementFormDefault="qualified"
     attributeFormDefault="unqualified">
    <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="../w3/xml.xsd" />
    <xs:import namespace="http://www.w3.org/1998/Math/MathML" schemaLocation="../w3/mathml2/mathml2.xsd" />
    <xs:import namespace="http://www.w3.org/2010/Math/MathML" schemaLocation="../w3/mathml3/mathml3.xsd" />
    <xs:import namespace="http://www.imsglobal.org/xsd/imsqti_v2p2" schemaLocation="../qtiv2p2p4/imsqti_v2p2p4.xsd" />
    <xs:import namespace="http://www.w3.org/2001/XInclude" schemaLocation="https://www.imsglobal.org/xsd/w3/2001/XInclude.xsd" />
    <xs:import namespace="http://www.w3.org/2010/10/synthesis" schemaLocation="../w3/ssml11/ssmlv1p1-core.xsd" />

    <xs:annotation>
        <xs:documentation>
            XSD Data File Information
            =========================
            Author:         Colin Smythe (IMS Global, UK) and Mark McKell (IMS Global, USA)
            Date:           18th March, 2021
            Version:        2.2.4
            Status:         Final Release
            Description:    This is the Platform Specific Model (PSM) of the QTIv2.2.1 HTML5 Information Model and corresponding XSD Binding. This is used in conjunction with the QTIv2.2.1 ASI Information Model.

            History:        Version 2.2: The original PSM of the QTIv2.2 HTML5 Information Model and corresponding XSD Binding. Version 2.2.1: (a) Correction of the 'preload' attribute multiplicity (to become [0..1]) for the 'Audio' class; (b) Replace the use of the 'ElementIDList' class with the 'IDREFS' primitiveType and delete the 'ElementIDList' class; (c) The import to the QTIv2.2 XSD has been changed to QTIv2.2.1 XSD; (d) The schematron rules for the extensions of the 'language' and 'base' characterisics have been corrected to refer to 'xml:lang' and 'xml:base' respectively. Version 2.2.2: Align with QTI ASI 2.2.2 XSD. Version 2.2.3: Add support for the 'aria-hidden' attribute. Version 2.2.4: Update to import reference the ASI XSD version 2.2.4 on the IMS purl server.
            
            License:        IPR and Distribution Notices
            
                            This machine readable file is derived from the IMS Question and Test Interoperability (QTI) Version 2.2.4
                            found at http://www.imsglobal.org/question and the original IMS Global schema binding or code base
                            http://www.imsglobal.org/question.
            
                            Recipients of this document are requested to submit, with their comments, notification of any relevant 
                            patent claims or other intellectual property rights of which they may be aware that might be infringed by
                            any implementation of the specification set forth in this document, and to provide supporting documentation.
            
                            IMS takes no position regarding the validity or scope of any intellectual property or other rights that might
                            be claimed to pertain to the implementation or use of the technology described in this document or the extent 
                            to which any license under such rights might or might not be available; neither does it represent that it has 
                            made any effort to identify any such rights. Information on IMS procedures with respect to rights in IMS 
                            specifications can be found at the IMS Global Intellectual Property Rights web page: http://www.imsglobal.org/ipr/imsipr_policyFinal.pdf.
            
                            Copyright (c) IMS Global Learning Consortium 1999-2021. All Rights Reserved.
            
                            Use of this specification to develop products or services is governed by the license with IMS found on the IMS website: http://www.imsglobal.org/license.html.
            
                            Permission is granted to all parties to use excerpts from this document as needed in producing requests for proposals.
            
                            The limited permissions granted above are perpetual and will not be revoked by IMS or its successors or assigns.
            
                            THIS SPECIFICATION IS BEING OFFERED WITHOUT ANY WARRANTY WHATSOEVER, AND IN PARTICULAR, ANY WARRANTY OF NONINFRINGEMENT IS
                            EXPRESSLY DISCLAIMED. ANY USE OF THIS SPECIFICATION SHALL BE MADE ENTIRELY AT THE IMPLEMENTERS OWN RISK, AND NEITHER THE CONSORTIUM
                            NOR ANY OF ITS MEMBERS OR SUBMITTERS, SHALL HAVE ANY LIABILITY WHATSOEVER TO ANY IMPLEMENTER OR THIRD PARTY FOR ANY DAMAGES OF
                            ANY NATURE WHATSOEVER, DIRECTLY OR INDIRECTLY, ARISING FROM THE USE OF THIS SPECIFICATION.
            
            Source UML File Information
            ===========================
            The source file information must be supplied as an XMI file (without diagram layout information).
            The supported UML authoring tools are:
            (a) Poseidon - v6 (and later)
            (b) Papyrus - v1.1.3 (and later)
            
            Source XSLT File Information
            ============================
            XSL Generator:    Specificationv1p0_GenerationToolv1.xsl
            XSLT Processor:   Saxon
            Release:          1.0
            Date:             31st January, 2021
            Autogen Engineer: Colin Smythe (IMS Global, UK)
            Autogen Date:     2021-03-04
            
            IMS Global Auto-generation Binding Tool-kit (I-BAT)
            ===================================================
            This file was auto-generated using the IMS Global Binding Auto-generation Tool-kit (I-BAT).  While every
            attempt has been made to ensure that this tool auto-generates the files correctly, users should be aware
            that this is an experimental tool.  Permission is given to make use of this tool.  IMS Global makes no
            claim on the materials created by third party users of this tool.  Details on how to use this tool
            are contained in the IMS Global "I-BAT" documentation available at the IMS Global web-site:
            http://www.imsglobal.org.
            
            Tool Copyright:  2012-2021  (c) IMS Global Learning Consortium Inc.  All Rights Reserved.
        </xs:documentation>
    </xs:annotation>

    <xs:annotation>
        <xs:documentation>
            Schematron Namespace Declaration
            =================================
            The set of namespaces used by the schematron rules.
        </xs:documentation>
        <xs:appinfo>
            <sch:ns uri="http://www.imsglobal.org/xsd/imsqtiv2p2_html5_v1p0" prefix="qh5" />
        </xs:appinfo>
    </xs:annotation>

    <xs:annotation>
        <xs:documentation>
            Schematron Strict Selection Validation Rules
            ============================================
            This is the set of Schematron rules that have been created to enforce the use of the "Unordered" stereotype.
            These rules ensure that the number of entries in an unordered complexType of an element obey the multiplicity constraints.
            This is required so that any-order/any-multiplicity complexTypes can be constructed and validated.
        </xs:documentation>
        <xs:appinfo>
            <sch:title>Schematron validation rules for the enforcement of the Unordered stereotype.</sch:title>

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="FigureDType">
                <sch:title>[RULESET] For the FigureDType complexType.</sch:title>

                <sch:rule abstract="false" context="qh5:figure">

                    <sch:assert test="count(qh5:figcaption) = 0 or count(qh5:figcaption) = 1">
                        [RULE for Root Class Attribute 1] Invalid number of "figcaption" elements: <sch:value-of select="count(qh5:figcaption)" />.
                    </sch:assert>

                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RubyDType">
                <sch:title>[RULESET] For the RubyDType complexType.</sch:title>

                <sch:rule abstract="false" context="qh5:ruby">

                    <sch:assert test="count(qh5:rp) = 0 or count(qh5:rp) = 1">
                        [RULE for Root Class Attribute 1] Invalid number of "rp" elements: <sch:value-of select="count(qh5:rp)" />.
                    </sch:assert>

                    <sch:assert test="count(qh5:rt) = 0 or count(qh5:rt) = 1">
                        [RULE for Root Class Attribute 2.1] Invalid number of "rt" elements: <sch:value-of select="count(qh5:rt)" />.
                    </sch:assert>

                    <sch:assert test="count(qh5:rtc) = 0 or count(qh5:rtc) = 1">
                        [RULE for Root Class Attribute 2.2] Invalid number of "rtc" elements: <sch:value-of select="count(qh5:rtc)" />.
                    </sch:assert>

                </sch:rule>

            </sch:pattern>

        </xs:appinfo>
    </xs:annotation>

    <xs:annotation>
        <xs:documentation>
            Schematron Extension Validation Rules
            =====================================
            This is the set of Schematron rules that have been created to enforce the validation constraints on namespaced extensions.
            These rules ensure that the names of the extension features conform to defined naming convention (expressed using a REGEX).
            At present these rules are limited to permitted names for the proprietary XML attributes.
        </xs:documentation>
        <xs:appinfo>
            <sch:title>Schematron validation rules for the enforcement naming constraints on XML attribute provided as proprietary extensions.</sch:title>

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULESET_ROOTELEMENT_DATAEXTENSIONRULES">
                <sch:title>Rules applied to Root Elements that have constrained extension attributes.</sch:title>

                <sch:rule abstract="false" context="//qh5:article">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (article): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:aside">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (aside): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:audio">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='src' or string(name(@*[1]))='crossorigin' or string(name(@*[1]))='preload' or string(name(@*[1]))='autoplay' or string(name(@*[1]))='mediagroup' or string(name(@*[1]))='loop' or string(name(@*[1]))='muted' or string(name(@*[1]))='controls' or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='src' or string(name(@*[2]))='crossorigin' or string(name(@*[2]))='preload' or string(name(@*[2]))='autoplay' or string(name(@*[2]))='mediagroup' or string(name(@*[2]))='loop' or string(name(@*[2]))='muted' or string(name(@*[2]))='controls' or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='src' or string(name(@*[3]))='crossorigin' or string(name(@*[3]))='preload' or string(name(@*[3]))='autoplay' or string(name(@*[3]))='mediagroup' or string(name(@*[3]))='loop' or string(name(@*[3]))='muted' or string(name(@*[3]))='controls' or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='src' or string(name(@*[4]))='crossorigin' or string(name(@*[4]))='preload' or string(name(@*[4]))='autoplay' or string(name(@*[4]))='mediagroup' or string(name(@*[4]))='loop' or string(name(@*[4]))='muted' or string(name(@*[4]))='controls' or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='src' or string(name(@*[5]))='crossorigin' or string(name(@*[5]))='preload' or string(name(@*[5]))='autoplay' or string(name(@*[5]))='mediagroup' or string(name(@*[5]))='loop' or string(name(@*[5]))='muted' or string(name(@*[5]))='controls' or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='src' or string(name(@*[6]))='crossorigin' or string(name(@*[6]))='preload' or string(name(@*[6]))='autoplay' or string(name(@*[6]))='mediagroup' or string(name(@*[6]))='loop' or string(name(@*[6]))='muted' or string(name(@*[6]))='controls' or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='src' or string(name(@*[7]))='crossorigin' or string(name(@*[7]))='preload' or string(name(@*[7]))='autoplay' or string(name(@*[7]))='mediagroup' or string(name(@*[7]))='loop' or string(name(@*[7]))='muted' or string(name(@*[7]))='controls' or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='src' or string(name(@*[8]))='crossorigin' or string(name(@*[8]))='preload' or string(name(@*[8]))='autoplay' or string(name(@*[8]))='mediagroup' or string(name(@*[8]))='loop' or string(name(@*[8]))='muted' or string(name(@*[8]))='controls' or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='src' or string(name(@*[9]))='crossorigin' or string(name(@*[9]))='preload' or string(name(@*[9]))='autoplay' or string(name(@*[9]))='mediagroup' or string(name(@*[9]))='loop' or string(name(@*[9]))='muted' or string(name(@*[9]))='controls' or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='src' or string(name(@*[10]))='crossorigin' or string(name(@*[10]))='preload' or string(name(@*[10]))='autoplay' or string(name(@*[10]))='mediagroup' or string(name(@*[10]))='loop' or string(name(@*[10]))='muted' or string(name(@*[10]))='controls' or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='src' or string(name(@*[11]))='crossorigin' or string(name(@*[11]))='preload' or string(name(@*[11]))='autoplay' or string(name(@*[11]))='mediagroup' or string(name(@*[11]))='loop' or string(name(@*[11]))='muted' or string(name(@*[11]))='controls' or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='src' or string(name(@*[12]))='crossorigin' or string(name(@*[12]))='preload' or string(name(@*[12]))='autoplay' or string(name(@*[12]))='mediagroup' or string(name(@*[12]))='loop' or string(name(@*[12]))='muted' or string(name(@*[12]))='controls' or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='src' or string(name(@*[13]))='crossorigin' or string(name(@*[13]))='preload' or string(name(@*[13]))='autoplay' or string(name(@*[13]))='mediagroup' or string(name(@*[13]))='loop' or string(name(@*[13]))='muted' or string(name(@*[13]))='controls' or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='src' or string(name(@*[14]))='crossorigin' or string(name(@*[14]))='preload' or string(name(@*[14]))='autoplay' or string(name(@*[14]))='mediagroup' or string(name(@*[14]))='loop' or string(name(@*[14]))='muted' or string(name(@*[14]))='controls' or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='src' or string(name(@*[15]))='crossorigin' or string(name(@*[15]))='preload' or string(name(@*[15]))='autoplay' or string(name(@*[15]))='mediagroup' or string(name(@*[15]))='loop' or string(name(@*[15]))='muted' or string(name(@*[15]))='controls' or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='src' or string(name(@*[16]))='crossorigin' or string(name(@*[16]))='preload' or string(name(@*[16]))='autoplay' or string(name(@*[16]))='mediagroup' or string(name(@*[16]))='loop' or string(name(@*[16]))='muted' or string(name(@*[16]))='controls' or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='src' or string(name(@*[17]))='crossorigin' or string(name(@*[17]))='preload' or string(name(@*[17]))='autoplay' or string(name(@*[17]))='mediagroup' or string(name(@*[17]))='loop' or string(name(@*[17]))='muted' or string(name(@*[17]))='controls' or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='src' or string(name(@*[18]))='crossorigin' or string(name(@*[18]))='preload' or string(name(@*[18]))='autoplay' or string(name(@*[18]))='mediagroup' or string(name(@*[18]))='loop' or string(name(@*[18]))='muted' or string(name(@*[18]))='controls' or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[19]))=0 or string(name(@*[19]))='src' or string(name(@*[19]))='crossorigin' or string(name(@*[19]))='preload' or string(name(@*[19]))='autoplay' or string(name(@*[19]))='mediagroup' or string(name(@*[19]))='loop' or string(name(@*[19]))='muted' or string(name(@*[19]))='controls' or string(name(@*[19]))='id' or string(name(@*[19]))='xml:lang' or string(name(@*[19]))='title' or string(name(@*[19]))='label' or string(name(@*[19]))='class' or string(name(@*[19]))='dir' or string(name(@*[19]))='role' or string(name(@*[19]))='aria-controls' or string(name(@*[19]))='aria-describedby' or string(name(@*[19]))='aria-flowto' or string(name(@*[19]))='aria-label' or string(name(@*[19]))='aria-labelledby' or string(name(@*[19]))='aria-level' or string(name(@*[19]))='aria-live' or string(name(@*[19]))='aria-orientation' or string(name(@*[19]))='aria-owns' or string(name(@*[19]))='aria-hidden' or starts-with(name(@*[19]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 19] Invalid XML attribute in position 19 with name of <sch:value-of select="string(name(@*[19]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[20]))=0 or string(name(@*[20]))='src' or string(name(@*[20]))='crossorigin' or string(name(@*[20]))='preload' or string(name(@*[20]))='autoplay' or string(name(@*[20]))='mediagroup' or string(name(@*[20]))='loop' or string(name(@*[20]))='muted' or string(name(@*[20]))='controls' or string(name(@*[20]))='id' or string(name(@*[20]))='xml:lang' or string(name(@*[20]))='title' or string(name(@*[20]))='label' or string(name(@*[20]))='class' or string(name(@*[20]))='dir' or string(name(@*[20]))='role' or string(name(@*[20]))='aria-controls' or string(name(@*[20]))='aria-describedby' or string(name(@*[20]))='aria-flowto' or string(name(@*[20]))='aria-label' or string(name(@*[20]))='aria-labelledby' or string(name(@*[20]))='aria-level' or string(name(@*[20]))='aria-live' or string(name(@*[20]))='aria-orientation' or string(name(@*[20]))='aria-owns' or string(name(@*[20]))='aria-hidden' or starts-with(name(@*[20]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 20] Invalid XML attribute in position 20 with name of <sch:value-of select="string(name(@*[20]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[21]))=0 or string(name(@*[21]))='src' or string(name(@*[21]))='crossorigin' or string(name(@*[21]))='preload' or string(name(@*[21]))='autoplay' or string(name(@*[21]))='mediagroup' or string(name(@*[21]))='loop' or string(name(@*[21]))='muted' or string(name(@*[21]))='controls' or string(name(@*[21]))='id' or string(name(@*[21]))='xml:lang' or string(name(@*[21]))='title' or string(name(@*[21]))='label' or string(name(@*[21]))='class' or string(name(@*[21]))='dir' or string(name(@*[21]))='role' or string(name(@*[21]))='aria-controls' or string(name(@*[21]))='aria-describedby' or string(name(@*[21]))='aria-flowto' or string(name(@*[21]))='aria-label' or string(name(@*[21]))='aria-labelledby' or string(name(@*[21]))='aria-level' or string(name(@*[21]))='aria-live' or string(name(@*[21]))='aria-orientation' or string(name(@*[21]))='aria-owns' or string(name(@*[21]))='aria-hidden' or starts-with(name(@*[21]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 21] Invalid XML attribute in position 21 with name of <sch:value-of select="string(name(@*[21]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[22]))=0 or string(name(@*[22]))='src' or string(name(@*[22]))='crossorigin' or string(name(@*[22]))='preload' or string(name(@*[22]))='autoplay' or string(name(@*[22]))='mediagroup' or string(name(@*[22]))='loop' or string(name(@*[22]))='muted' or string(name(@*[22]))='controls' or string(name(@*[22]))='id' or string(name(@*[22]))='xml:lang' or string(name(@*[22]))='title' or string(name(@*[22]))='label' or string(name(@*[22]))='class' or string(name(@*[22]))='dir' or string(name(@*[22]))='role' or string(name(@*[22]))='aria-controls' or string(name(@*[22]))='aria-describedby' or string(name(@*[22]))='aria-flowto' or string(name(@*[22]))='aria-label' or string(name(@*[22]))='aria-labelledby' or string(name(@*[22]))='aria-level' or string(name(@*[22]))='aria-live' or string(name(@*[22]))='aria-orientation' or string(name(@*[22]))='aria-owns' or string(name(@*[22]))='aria-hidden' or starts-with(name(@*[22]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 22] Invalid XML attribute in position 22 with name of <sch:value-of select="string(name(@*[22]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[23]))=0 or string(name(@*[23]))='src' or string(name(@*[23]))='crossorigin' or string(name(@*[23]))='preload' or string(name(@*[23]))='autoplay' or string(name(@*[23]))='mediagroup' or string(name(@*[23]))='loop' or string(name(@*[23]))='muted' or string(name(@*[23]))='controls' or string(name(@*[23]))='id' or string(name(@*[23]))='xml:lang' or string(name(@*[23]))='title' or string(name(@*[23]))='label' or string(name(@*[23]))='class' or string(name(@*[23]))='dir' or string(name(@*[23]))='role' or string(name(@*[23]))='aria-controls' or string(name(@*[23]))='aria-describedby' or string(name(@*[23]))='aria-flowto' or string(name(@*[23]))='aria-label' or string(name(@*[23]))='aria-labelledby' or string(name(@*[23]))='aria-level' or string(name(@*[23]))='aria-live' or string(name(@*[23]))='aria-orientation' or string(name(@*[23]))='aria-owns' or string(name(@*[23]))='aria-hidden' or starts-with(name(@*[23]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 23] Invalid XML attribute in position 23 with name of <sch:value-of select="string(name(@*[23]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[24]))=0 or string(name(@*[24]))='src' or string(name(@*[24]))='crossorigin' or string(name(@*[24]))='preload' or string(name(@*[24]))='autoplay' or string(name(@*[24]))='mediagroup' or string(name(@*[24]))='loop' or string(name(@*[24]))='muted' or string(name(@*[24]))='controls' or string(name(@*[24]))='id' or string(name(@*[24]))='xml:lang' or string(name(@*[24]))='title' or string(name(@*[24]))='label' or string(name(@*[24]))='class' or string(name(@*[24]))='dir' or string(name(@*[24]))='role' or string(name(@*[24]))='aria-controls' or string(name(@*[24]))='aria-describedby' or string(name(@*[24]))='aria-flowto' or string(name(@*[24]))='aria-label' or string(name(@*[24]))='aria-labelledby' or string(name(@*[24]))='aria-level' or string(name(@*[24]))='aria-live' or string(name(@*[24]))='aria-orientation' or string(name(@*[24]))='aria-owns' or string(name(@*[24]))='aria-hidden' or starts-with(name(@*[24]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 24] Invalid XML attribute in position 24 with name of <sch:value-of select="string(name(@*[24]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[25]))=0 or string(name(@*[25]))='src' or string(name(@*[25]))='crossorigin' or string(name(@*[25]))='preload' or string(name(@*[25]))='autoplay' or string(name(@*[25]))='mediagroup' or string(name(@*[25]))='loop' or string(name(@*[25]))='muted' or string(name(@*[25]))='controls' or string(name(@*[25]))='id' or string(name(@*[25]))='xml:lang' or string(name(@*[25]))='title' or string(name(@*[25]))='label' or string(name(@*[25]))='class' or string(name(@*[25]))='dir' or string(name(@*[25]))='role' or string(name(@*[25]))='aria-controls' or string(name(@*[25]))='aria-describedby' or string(name(@*[25]))='aria-flowto' or string(name(@*[25]))='aria-label' or string(name(@*[25]))='aria-labelledby' or string(name(@*[25]))='aria-level' or string(name(@*[25]))='aria-live' or string(name(@*[25]))='aria-orientation' or string(name(@*[25]))='aria-owns' or string(name(@*[25]))='aria-hidden' or starts-with(name(@*[25]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 25] Invalid XML attribute in position 25 with name of <sch:value-of select="string(name(@*[25]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[26]))=0 or string(name(@*[26]))='src' or string(name(@*[26]))='crossorigin' or string(name(@*[26]))='preload' or string(name(@*[26]))='autoplay' or string(name(@*[26]))='mediagroup' or string(name(@*[26]))='loop' or string(name(@*[26]))='muted' or string(name(@*[26]))='controls' or string(name(@*[26]))='id' or string(name(@*[26]))='xml:lang' or string(name(@*[26]))='title' or string(name(@*[26]))='label' or string(name(@*[26]))='class' or string(name(@*[26]))='dir' or string(name(@*[26]))='role' or string(name(@*[26]))='aria-controls' or string(name(@*[26]))='aria-describedby' or string(name(@*[26]))='aria-flowto' or string(name(@*[26]))='aria-label' or string(name(@*[26]))='aria-labelledby' or string(name(@*[26]))='aria-level' or string(name(@*[26]))='aria-live' or string(name(@*[26]))='aria-orientation' or string(name(@*[26]))='aria-owns' or string(name(@*[26]))='aria-hidden' or starts-with(name(@*[26]), 'data-')">
                        [RULE ROOT ELEMENT (audio): Assertion 26] Invalid XML attribute in position 26 with name of <sch:value-of select="string(name(@*[26]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:bdi">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (bdi): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:figcaption">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (figcaption): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:figure">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (figure): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:footer">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (footer): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:header">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (header): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:label">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (label): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:nav">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (nav): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:rb">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (rb): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:rp">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (rp): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:rt">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (rt): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:rtc">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (rtc): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:ruby">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (ruby): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:section">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (section): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:source">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='src' or string(name(@*[1]))='type' or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='src' or string(name(@*[2]))='type' or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='src' or string(name(@*[3]))='type' or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='src' or string(name(@*[4]))='type' or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='src' or string(name(@*[5]))='type' or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='src' or string(name(@*[6]))='type' or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='src' or string(name(@*[7]))='type' or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='src' or string(name(@*[8]))='type' or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='src' or string(name(@*[9]))='type' or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='src' or string(name(@*[10]))='type' or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='src' or string(name(@*[11]))='type' or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='src' or string(name(@*[12]))='type' or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='src' or string(name(@*[13]))='type' or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='src' or string(name(@*[14]))='type' or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='src' or string(name(@*[15]))='type' or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='src' or string(name(@*[16]))='type' or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='src' or string(name(@*[17]))='type' or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='src' or string(name(@*[18]))='type' or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[19]))=0 or string(name(@*[19]))='src' or string(name(@*[19]))='type' or string(name(@*[19]))='id' or string(name(@*[19]))='xml:lang' or string(name(@*[19]))='title' or string(name(@*[19]))='label' or string(name(@*[19]))='class' or string(name(@*[19]))='dir' or string(name(@*[19]))='role' or string(name(@*[19]))='aria-controls' or string(name(@*[19]))='aria-describedby' or string(name(@*[19]))='aria-flowto' or string(name(@*[19]))='aria-label' or string(name(@*[19]))='aria-labelledby' or string(name(@*[19]))='aria-level' or string(name(@*[19]))='aria-live' or string(name(@*[19]))='aria-orientation' or string(name(@*[19]))='aria-owns' or string(name(@*[19]))='aria-hidden' or starts-with(name(@*[19]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 19] Invalid XML attribute in position 19 with name of <sch:value-of select="string(name(@*[19]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[20]))=0 or string(name(@*[20]))='src' or string(name(@*[20]))='type' or string(name(@*[20]))='id' or string(name(@*[20]))='xml:lang' or string(name(@*[20]))='title' or string(name(@*[20]))='label' or string(name(@*[20]))='class' or string(name(@*[20]))='dir' or string(name(@*[20]))='role' or string(name(@*[20]))='aria-controls' or string(name(@*[20]))='aria-describedby' or string(name(@*[20]))='aria-flowto' or string(name(@*[20]))='aria-label' or string(name(@*[20]))='aria-labelledby' or string(name(@*[20]))='aria-level' or string(name(@*[20]))='aria-live' or string(name(@*[20]))='aria-orientation' or string(name(@*[20]))='aria-owns' or string(name(@*[20]))='aria-hidden' or starts-with(name(@*[20]), 'data-')">
                        [RULE ROOT ELEMENT (source): Assertion 20] Invalid XML attribute in position 20 with name of <sch:value-of select="string(name(@*[20]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:track">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='kind' or string(name(@*[1]))='src' or string(name(@*[1]))='srclang' or string(name(@*[1]))='default' or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='kind' or string(name(@*[2]))='src' or string(name(@*[2]))='srclang' or string(name(@*[2]))='default' or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='kind' or string(name(@*[3]))='src' or string(name(@*[3]))='srclang' or string(name(@*[3]))='default' or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='kind' or string(name(@*[4]))='src' or string(name(@*[4]))='srclang' or string(name(@*[4]))='default' or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='kind' or string(name(@*[5]))='src' or string(name(@*[5]))='srclang' or string(name(@*[5]))='default' or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='kind' or string(name(@*[6]))='src' or string(name(@*[6]))='srclang' or string(name(@*[6]))='default' or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='kind' or string(name(@*[7]))='src' or string(name(@*[7]))='srclang' or string(name(@*[7]))='default' or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='kind' or string(name(@*[8]))='src' or string(name(@*[8]))='srclang' or string(name(@*[8]))='default' or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='kind' or string(name(@*[9]))='src' or string(name(@*[9]))='srclang' or string(name(@*[9]))='default' or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='kind' or string(name(@*[10]))='src' or string(name(@*[10]))='srclang' or string(name(@*[10]))='default' or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='kind' or string(name(@*[11]))='src' or string(name(@*[11]))='srclang' or string(name(@*[11]))='default' or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='kind' or string(name(@*[12]))='src' or string(name(@*[12]))='srclang' or string(name(@*[12]))='default' or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='kind' or string(name(@*[13]))='src' or string(name(@*[13]))='srclang' or string(name(@*[13]))='default' or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='kind' or string(name(@*[14]))='src' or string(name(@*[14]))='srclang' or string(name(@*[14]))='default' or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='kind' or string(name(@*[15]))='src' or string(name(@*[15]))='srclang' or string(name(@*[15]))='default' or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='kind' or string(name(@*[16]))='src' or string(name(@*[16]))='srclang' or string(name(@*[16]))='default' or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='kind' or string(name(@*[17]))='src' or string(name(@*[17]))='srclang' or string(name(@*[17]))='default' or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='kind' or string(name(@*[18]))='src' or string(name(@*[18]))='srclang' or string(name(@*[18]))='default' or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[19]))=0 or string(name(@*[19]))='kind' or string(name(@*[19]))='src' or string(name(@*[19]))='srclang' or string(name(@*[19]))='default' or string(name(@*[19]))='id' or string(name(@*[19]))='xml:lang' or string(name(@*[19]))='title' or string(name(@*[19]))='label' or string(name(@*[19]))='class' or string(name(@*[19]))='dir' or string(name(@*[19]))='role' or string(name(@*[19]))='aria-controls' or string(name(@*[19]))='aria-describedby' or string(name(@*[19]))='aria-flowto' or string(name(@*[19]))='aria-label' or string(name(@*[19]))='aria-labelledby' or string(name(@*[19]))='aria-level' or string(name(@*[19]))='aria-live' or string(name(@*[19]))='aria-orientation' or string(name(@*[19]))='aria-owns' or string(name(@*[19]))='aria-hidden' or starts-with(name(@*[19]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 19] Invalid XML attribute in position 19 with name of <sch:value-of select="string(name(@*[19]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[20]))=0 or string(name(@*[20]))='kind' or string(name(@*[20]))='src' or string(name(@*[20]))='srclang' or string(name(@*[20]))='default' or string(name(@*[20]))='id' or string(name(@*[20]))='xml:lang' or string(name(@*[20]))='title' or string(name(@*[20]))='label' or string(name(@*[20]))='class' or string(name(@*[20]))='dir' or string(name(@*[20]))='role' or string(name(@*[20]))='aria-controls' or string(name(@*[20]))='aria-describedby' or string(name(@*[20]))='aria-flowto' or string(name(@*[20]))='aria-label' or string(name(@*[20]))='aria-labelledby' or string(name(@*[20]))='aria-level' or string(name(@*[20]))='aria-live' or string(name(@*[20]))='aria-orientation' or string(name(@*[20]))='aria-owns' or string(name(@*[20]))='aria-hidden' or starts-with(name(@*[20]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 20] Invalid XML attribute in position 20 with name of <sch:value-of select="string(name(@*[20]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[21]))=0 or string(name(@*[21]))='kind' or string(name(@*[21]))='src' or string(name(@*[21]))='srclang' or string(name(@*[21]))='default' or string(name(@*[21]))='id' or string(name(@*[21]))='xml:lang' or string(name(@*[21]))='title' or string(name(@*[21]))='label' or string(name(@*[21]))='class' or string(name(@*[21]))='dir' or string(name(@*[21]))='role' or string(name(@*[21]))='aria-controls' or string(name(@*[21]))='aria-describedby' or string(name(@*[21]))='aria-flowto' or string(name(@*[21]))='aria-label' or string(name(@*[21]))='aria-labelledby' or string(name(@*[21]))='aria-level' or string(name(@*[21]))='aria-live' or string(name(@*[21]))='aria-orientation' or string(name(@*[21]))='aria-owns' or string(name(@*[21]))='aria-hidden' or starts-with(name(@*[21]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 21] Invalid XML attribute in position 21 with name of <sch:value-of select="string(name(@*[21]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[22]))=0 or string(name(@*[22]))='kind' or string(name(@*[22]))='src' or string(name(@*[22]))='srclang' or string(name(@*[22]))='default' or string(name(@*[22]))='id' or string(name(@*[22]))='xml:lang' or string(name(@*[22]))='title' or string(name(@*[22]))='label' or string(name(@*[22]))='class' or string(name(@*[22]))='dir' or string(name(@*[22]))='role' or string(name(@*[22]))='aria-controls' or string(name(@*[22]))='aria-describedby' or string(name(@*[22]))='aria-flowto' or string(name(@*[22]))='aria-label' or string(name(@*[22]))='aria-labelledby' or string(name(@*[22]))='aria-level' or string(name(@*[22]))='aria-live' or string(name(@*[22]))='aria-orientation' or string(name(@*[22]))='aria-owns' or string(name(@*[22]))='aria-hidden' or starts-with(name(@*[22]), 'data-')">
                        [RULE ROOT ELEMENT (track): Assertion 22] Invalid XML attribute in position 22 with name of <sch:value-of select="string(name(@*[22]))" />.
                    </sch:assert>
                </sch:rule>

                <sch:rule abstract="false" context="//qh5:video">
                    <sch:assert test="string-length(name(@*[1]))=0 or string(name(@*[1]))='src' or string(name(@*[1]))='crossorigin' or string(name(@*[1]))='preload' or string(name(@*[1]))='autoplay' or string(name(@*[1]))='mediagroup' or string(name(@*[1]))='loop' or string(name(@*[1]))='muted' or string(name(@*[1]))='controls' or string(name(@*[1]))='poster' or string(name(@*[1]))='width' or string(name(@*[1]))='height' or string(name(@*[1]))='id' or string(name(@*[1]))='xml:lang' or string(name(@*[1]))='title' or string(name(@*[1]))='label' or string(name(@*[1]))='class' or string(name(@*[1]))='dir' or string(name(@*[1]))='role' or string(name(@*[1]))='aria-controls' or string(name(@*[1]))='aria-describedby' or string(name(@*[1]))='aria-flowto' or string(name(@*[1]))='aria-label' or string(name(@*[1]))='aria-labelledby' or string(name(@*[1]))='aria-level' or string(name(@*[1]))='aria-live' or string(name(@*[1]))='aria-orientation' or string(name(@*[1]))='aria-owns' or string(name(@*[1]))='aria-hidden' or starts-with(name(@*[1]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 1] Invalid XML attribute in position 1 with name of <sch:value-of select="string(name(@*[1]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[2]))=0 or string(name(@*[2]))='src' or string(name(@*[2]))='crossorigin' or string(name(@*[2]))='preload' or string(name(@*[2]))='autoplay' or string(name(@*[2]))='mediagroup' or string(name(@*[2]))='loop' or string(name(@*[2]))='muted' or string(name(@*[2]))='controls' or string(name(@*[2]))='poster' or string(name(@*[2]))='width' or string(name(@*[2]))='height' or string(name(@*[2]))='id' or string(name(@*[2]))='xml:lang' or string(name(@*[2]))='title' or string(name(@*[2]))='label' or string(name(@*[2]))='class' or string(name(@*[2]))='dir' or string(name(@*[2]))='role' or string(name(@*[2]))='aria-controls' or string(name(@*[2]))='aria-describedby' or string(name(@*[2]))='aria-flowto' or string(name(@*[2]))='aria-label' or string(name(@*[2]))='aria-labelledby' or string(name(@*[2]))='aria-level' or string(name(@*[2]))='aria-live' or string(name(@*[2]))='aria-orientation' or string(name(@*[2]))='aria-owns' or string(name(@*[2]))='aria-hidden' or starts-with(name(@*[2]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 2] Invalid XML attribute in position 2 with name of <sch:value-of select="string(name(@*[2]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[3]))=0 or string(name(@*[3]))='src' or string(name(@*[3]))='crossorigin' or string(name(@*[3]))='preload' or string(name(@*[3]))='autoplay' or string(name(@*[3]))='mediagroup' or string(name(@*[3]))='loop' or string(name(@*[3]))='muted' or string(name(@*[3]))='controls' or string(name(@*[3]))='poster' or string(name(@*[3]))='width' or string(name(@*[3]))='height' or string(name(@*[3]))='id' or string(name(@*[3]))='xml:lang' or string(name(@*[3]))='title' or string(name(@*[3]))='label' or string(name(@*[3]))='class' or string(name(@*[3]))='dir' or string(name(@*[3]))='role' or string(name(@*[3]))='aria-controls' or string(name(@*[3]))='aria-describedby' or string(name(@*[3]))='aria-flowto' or string(name(@*[3]))='aria-label' or string(name(@*[3]))='aria-labelledby' or string(name(@*[3]))='aria-level' or string(name(@*[3]))='aria-live' or string(name(@*[3]))='aria-orientation' or string(name(@*[3]))='aria-owns' or string(name(@*[3]))='aria-hidden' or starts-with(name(@*[3]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 3] Invalid XML attribute in position 3 with name of <sch:value-of select="string(name(@*[3]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[4]))=0 or string(name(@*[4]))='src' or string(name(@*[4]))='crossorigin' or string(name(@*[4]))='preload' or string(name(@*[4]))='autoplay' or string(name(@*[4]))='mediagroup' or string(name(@*[4]))='loop' or string(name(@*[4]))='muted' or string(name(@*[4]))='controls' or string(name(@*[4]))='poster' or string(name(@*[4]))='width' or string(name(@*[4]))='height' or string(name(@*[4]))='id' or string(name(@*[4]))='xml:lang' or string(name(@*[4]))='title' or string(name(@*[4]))='label' or string(name(@*[4]))='class' or string(name(@*[4]))='dir' or string(name(@*[4]))='role' or string(name(@*[4]))='aria-controls' or string(name(@*[4]))='aria-describedby' or string(name(@*[4]))='aria-flowto' or string(name(@*[4]))='aria-label' or string(name(@*[4]))='aria-labelledby' or string(name(@*[4]))='aria-level' or string(name(@*[4]))='aria-live' or string(name(@*[4]))='aria-orientation' or string(name(@*[4]))='aria-owns' or string(name(@*[4]))='aria-hidden' or starts-with(name(@*[4]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 4] Invalid XML attribute in position 4 with name of <sch:value-of select="string(name(@*[4]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[5]))=0 or string(name(@*[5]))='src' or string(name(@*[5]))='crossorigin' or string(name(@*[5]))='preload' or string(name(@*[5]))='autoplay' or string(name(@*[5]))='mediagroup' or string(name(@*[5]))='loop' or string(name(@*[5]))='muted' or string(name(@*[5]))='controls' or string(name(@*[5]))='poster' or string(name(@*[5]))='width' or string(name(@*[5]))='height' or string(name(@*[5]))='id' or string(name(@*[5]))='xml:lang' or string(name(@*[5]))='title' or string(name(@*[5]))='label' or string(name(@*[5]))='class' or string(name(@*[5]))='dir' or string(name(@*[5]))='role' or string(name(@*[5]))='aria-controls' or string(name(@*[5]))='aria-describedby' or string(name(@*[5]))='aria-flowto' or string(name(@*[5]))='aria-label' or string(name(@*[5]))='aria-labelledby' or string(name(@*[5]))='aria-level' or string(name(@*[5]))='aria-live' or string(name(@*[5]))='aria-orientation' or string(name(@*[5]))='aria-owns' or string(name(@*[5]))='aria-hidden' or starts-with(name(@*[5]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 5] Invalid XML attribute in position 5 with name of <sch:value-of select="string(name(@*[5]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[6]))=0 or string(name(@*[6]))='src' or string(name(@*[6]))='crossorigin' or string(name(@*[6]))='preload' or string(name(@*[6]))='autoplay' or string(name(@*[6]))='mediagroup' or string(name(@*[6]))='loop' or string(name(@*[6]))='muted' or string(name(@*[6]))='controls' or string(name(@*[6]))='poster' or string(name(@*[6]))='width' or string(name(@*[6]))='height' or string(name(@*[6]))='id' or string(name(@*[6]))='xml:lang' or string(name(@*[6]))='title' or string(name(@*[6]))='label' or string(name(@*[6]))='class' or string(name(@*[6]))='dir' or string(name(@*[6]))='role' or string(name(@*[6]))='aria-controls' or string(name(@*[6]))='aria-describedby' or string(name(@*[6]))='aria-flowto' or string(name(@*[6]))='aria-label' or string(name(@*[6]))='aria-labelledby' or string(name(@*[6]))='aria-level' or string(name(@*[6]))='aria-live' or string(name(@*[6]))='aria-orientation' or string(name(@*[6]))='aria-owns' or string(name(@*[6]))='aria-hidden' or starts-with(name(@*[6]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 6] Invalid XML attribute in position 6 with name of <sch:value-of select="string(name(@*[6]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[7]))=0 or string(name(@*[7]))='src' or string(name(@*[7]))='crossorigin' or string(name(@*[7]))='preload' or string(name(@*[7]))='autoplay' or string(name(@*[7]))='mediagroup' or string(name(@*[7]))='loop' or string(name(@*[7]))='muted' or string(name(@*[7]))='controls' or string(name(@*[7]))='poster' or string(name(@*[7]))='width' or string(name(@*[7]))='height' or string(name(@*[7]))='id' or string(name(@*[7]))='xml:lang' or string(name(@*[7]))='title' or string(name(@*[7]))='label' or string(name(@*[7]))='class' or string(name(@*[7]))='dir' or string(name(@*[7]))='role' or string(name(@*[7]))='aria-controls' or string(name(@*[7]))='aria-describedby' or string(name(@*[7]))='aria-flowto' or string(name(@*[7]))='aria-label' or string(name(@*[7]))='aria-labelledby' or string(name(@*[7]))='aria-level' or string(name(@*[7]))='aria-live' or string(name(@*[7]))='aria-orientation' or string(name(@*[7]))='aria-owns' or string(name(@*[7]))='aria-hidden' or starts-with(name(@*[7]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 7] Invalid XML attribute in position 7 with name of <sch:value-of select="string(name(@*[7]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[8]))=0 or string(name(@*[8]))='src' or string(name(@*[8]))='crossorigin' or string(name(@*[8]))='preload' or string(name(@*[8]))='autoplay' or string(name(@*[8]))='mediagroup' or string(name(@*[8]))='loop' or string(name(@*[8]))='muted' or string(name(@*[8]))='controls' or string(name(@*[8]))='poster' or string(name(@*[8]))='width' or string(name(@*[8]))='height' or string(name(@*[8]))='id' or string(name(@*[8]))='xml:lang' or string(name(@*[8]))='title' or string(name(@*[8]))='label' or string(name(@*[8]))='class' or string(name(@*[8]))='dir' or string(name(@*[8]))='role' or string(name(@*[8]))='aria-controls' or string(name(@*[8]))='aria-describedby' or string(name(@*[8]))='aria-flowto' or string(name(@*[8]))='aria-label' or string(name(@*[8]))='aria-labelledby' or string(name(@*[8]))='aria-level' or string(name(@*[8]))='aria-live' or string(name(@*[8]))='aria-orientation' or string(name(@*[8]))='aria-owns' or string(name(@*[8]))='aria-hidden' or starts-with(name(@*[8]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 8] Invalid XML attribute in position 8 with name of <sch:value-of select="string(name(@*[8]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[9]))=0 or string(name(@*[9]))='src' or string(name(@*[9]))='crossorigin' or string(name(@*[9]))='preload' or string(name(@*[9]))='autoplay' or string(name(@*[9]))='mediagroup' or string(name(@*[9]))='loop' or string(name(@*[9]))='muted' or string(name(@*[9]))='controls' or string(name(@*[9]))='poster' or string(name(@*[9]))='width' or string(name(@*[9]))='height' or string(name(@*[9]))='id' or string(name(@*[9]))='xml:lang' or string(name(@*[9]))='title' or string(name(@*[9]))='label' or string(name(@*[9]))='class' or string(name(@*[9]))='dir' or string(name(@*[9]))='role' or string(name(@*[9]))='aria-controls' or string(name(@*[9]))='aria-describedby' or string(name(@*[9]))='aria-flowto' or string(name(@*[9]))='aria-label' or string(name(@*[9]))='aria-labelledby' or string(name(@*[9]))='aria-level' or string(name(@*[9]))='aria-live' or string(name(@*[9]))='aria-orientation' or string(name(@*[9]))='aria-owns' or string(name(@*[9]))='aria-hidden' or starts-with(name(@*[9]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 9] Invalid XML attribute in position 9 with name of <sch:value-of select="string(name(@*[9]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[10]))=0 or string(name(@*[10]))='src' or string(name(@*[10]))='crossorigin' or string(name(@*[10]))='preload' or string(name(@*[10]))='autoplay' or string(name(@*[10]))='mediagroup' or string(name(@*[10]))='loop' or string(name(@*[10]))='muted' or string(name(@*[10]))='controls' or string(name(@*[10]))='poster' or string(name(@*[10]))='width' or string(name(@*[10]))='height' or string(name(@*[10]))='id' or string(name(@*[10]))='xml:lang' or string(name(@*[10]))='title' or string(name(@*[10]))='label' or string(name(@*[10]))='class' or string(name(@*[10]))='dir' or string(name(@*[10]))='role' or string(name(@*[10]))='aria-controls' or string(name(@*[10]))='aria-describedby' or string(name(@*[10]))='aria-flowto' or string(name(@*[10]))='aria-label' or string(name(@*[10]))='aria-labelledby' or string(name(@*[10]))='aria-level' or string(name(@*[10]))='aria-live' or string(name(@*[10]))='aria-orientation' or string(name(@*[10]))='aria-owns' or string(name(@*[10]))='aria-hidden' or starts-with(name(@*[10]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 10] Invalid XML attribute in position 10 with name of <sch:value-of select="string(name(@*[10]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[11]))=0 or string(name(@*[11]))='src' or string(name(@*[11]))='crossorigin' or string(name(@*[11]))='preload' or string(name(@*[11]))='autoplay' or string(name(@*[11]))='mediagroup' or string(name(@*[11]))='loop' or string(name(@*[11]))='muted' or string(name(@*[11]))='controls' or string(name(@*[11]))='poster' or string(name(@*[11]))='width' or string(name(@*[11]))='height' or string(name(@*[11]))='id' or string(name(@*[11]))='xml:lang' or string(name(@*[11]))='title' or string(name(@*[11]))='label' or string(name(@*[11]))='class' or string(name(@*[11]))='dir' or string(name(@*[11]))='role' or string(name(@*[11]))='aria-controls' or string(name(@*[11]))='aria-describedby' or string(name(@*[11]))='aria-flowto' or string(name(@*[11]))='aria-label' or string(name(@*[11]))='aria-labelledby' or string(name(@*[11]))='aria-level' or string(name(@*[11]))='aria-live' or string(name(@*[11]))='aria-orientation' or string(name(@*[11]))='aria-owns' or string(name(@*[11]))='aria-hidden' or starts-with(name(@*[11]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 11] Invalid XML attribute in position 11 with name of <sch:value-of select="string(name(@*[11]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[12]))=0 or string(name(@*[12]))='src' or string(name(@*[12]))='crossorigin' or string(name(@*[12]))='preload' or string(name(@*[12]))='autoplay' or string(name(@*[12]))='mediagroup' or string(name(@*[12]))='loop' or string(name(@*[12]))='muted' or string(name(@*[12]))='controls' or string(name(@*[12]))='poster' or string(name(@*[12]))='width' or string(name(@*[12]))='height' or string(name(@*[12]))='id' or string(name(@*[12]))='xml:lang' or string(name(@*[12]))='title' or string(name(@*[12]))='label' or string(name(@*[12]))='class' or string(name(@*[12]))='dir' or string(name(@*[12]))='role' or string(name(@*[12]))='aria-controls' or string(name(@*[12]))='aria-describedby' or string(name(@*[12]))='aria-flowto' or string(name(@*[12]))='aria-label' or string(name(@*[12]))='aria-labelledby' or string(name(@*[12]))='aria-level' or string(name(@*[12]))='aria-live' or string(name(@*[12]))='aria-orientation' or string(name(@*[12]))='aria-owns' or string(name(@*[12]))='aria-hidden' or starts-with(name(@*[12]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 12] Invalid XML attribute in position 12 with name of <sch:value-of select="string(name(@*[12]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[13]))=0 or string(name(@*[13]))='src' or string(name(@*[13]))='crossorigin' or string(name(@*[13]))='preload' or string(name(@*[13]))='autoplay' or string(name(@*[13]))='mediagroup' or string(name(@*[13]))='loop' or string(name(@*[13]))='muted' or string(name(@*[13]))='controls' or string(name(@*[13]))='poster' or string(name(@*[13]))='width' or string(name(@*[13]))='height' or string(name(@*[13]))='id' or string(name(@*[13]))='xml:lang' or string(name(@*[13]))='title' or string(name(@*[13]))='label' or string(name(@*[13]))='class' or string(name(@*[13]))='dir' or string(name(@*[13]))='role' or string(name(@*[13]))='aria-controls' or string(name(@*[13]))='aria-describedby' or string(name(@*[13]))='aria-flowto' or string(name(@*[13]))='aria-label' or string(name(@*[13]))='aria-labelledby' or string(name(@*[13]))='aria-level' or string(name(@*[13]))='aria-live' or string(name(@*[13]))='aria-orientation' or string(name(@*[13]))='aria-owns' or string(name(@*[13]))='aria-hidden' or starts-with(name(@*[13]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 13] Invalid XML attribute in position 13 with name of <sch:value-of select="string(name(@*[13]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[14]))=0 or string(name(@*[14]))='src' or string(name(@*[14]))='crossorigin' or string(name(@*[14]))='preload' or string(name(@*[14]))='autoplay' or string(name(@*[14]))='mediagroup' or string(name(@*[14]))='loop' or string(name(@*[14]))='muted' or string(name(@*[14]))='controls' or string(name(@*[14]))='poster' or string(name(@*[14]))='width' or string(name(@*[14]))='height' or string(name(@*[14]))='id' or string(name(@*[14]))='xml:lang' or string(name(@*[14]))='title' or string(name(@*[14]))='label' or string(name(@*[14]))='class' or string(name(@*[14]))='dir' or string(name(@*[14]))='role' or string(name(@*[14]))='aria-controls' or string(name(@*[14]))='aria-describedby' or string(name(@*[14]))='aria-flowto' or string(name(@*[14]))='aria-label' or string(name(@*[14]))='aria-labelledby' or string(name(@*[14]))='aria-level' or string(name(@*[14]))='aria-live' or string(name(@*[14]))='aria-orientation' or string(name(@*[14]))='aria-owns' or string(name(@*[14]))='aria-hidden' or starts-with(name(@*[14]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 14] Invalid XML attribute in position 14 with name of <sch:value-of select="string(name(@*[14]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[15]))=0 or string(name(@*[15]))='src' or string(name(@*[15]))='crossorigin' or string(name(@*[15]))='preload' or string(name(@*[15]))='autoplay' or string(name(@*[15]))='mediagroup' or string(name(@*[15]))='loop' or string(name(@*[15]))='muted' or string(name(@*[15]))='controls' or string(name(@*[15]))='poster' or string(name(@*[15]))='width' or string(name(@*[15]))='height' or string(name(@*[15]))='id' or string(name(@*[15]))='xml:lang' or string(name(@*[15]))='title' or string(name(@*[15]))='label' or string(name(@*[15]))='class' or string(name(@*[15]))='dir' or string(name(@*[15]))='role' or string(name(@*[15]))='aria-controls' or string(name(@*[15]))='aria-describedby' or string(name(@*[15]))='aria-flowto' or string(name(@*[15]))='aria-label' or string(name(@*[15]))='aria-labelledby' or string(name(@*[15]))='aria-level' or string(name(@*[15]))='aria-live' or string(name(@*[15]))='aria-orientation' or string(name(@*[15]))='aria-owns' or string(name(@*[15]))='aria-hidden' or starts-with(name(@*[15]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 15] Invalid XML attribute in position 15 with name of <sch:value-of select="string(name(@*[15]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[16]))=0 or string(name(@*[16]))='src' or string(name(@*[16]))='crossorigin' or string(name(@*[16]))='preload' or string(name(@*[16]))='autoplay' or string(name(@*[16]))='mediagroup' or string(name(@*[16]))='loop' or string(name(@*[16]))='muted' or string(name(@*[16]))='controls' or string(name(@*[16]))='poster' or string(name(@*[16]))='width' or string(name(@*[16]))='height' or string(name(@*[16]))='id' or string(name(@*[16]))='xml:lang' or string(name(@*[16]))='title' or string(name(@*[16]))='label' or string(name(@*[16]))='class' or string(name(@*[16]))='dir' or string(name(@*[16]))='role' or string(name(@*[16]))='aria-controls' or string(name(@*[16]))='aria-describedby' or string(name(@*[16]))='aria-flowto' or string(name(@*[16]))='aria-label' or string(name(@*[16]))='aria-labelledby' or string(name(@*[16]))='aria-level' or string(name(@*[16]))='aria-live' or string(name(@*[16]))='aria-orientation' or string(name(@*[16]))='aria-owns' or string(name(@*[16]))='aria-hidden' or starts-with(name(@*[16]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 16] Invalid XML attribute in position 16 with name of <sch:value-of select="string(name(@*[16]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[17]))=0 or string(name(@*[17]))='src' or string(name(@*[17]))='crossorigin' or string(name(@*[17]))='preload' or string(name(@*[17]))='autoplay' or string(name(@*[17]))='mediagroup' or string(name(@*[17]))='loop' or string(name(@*[17]))='muted' or string(name(@*[17]))='controls' or string(name(@*[17]))='poster' or string(name(@*[17]))='width' or string(name(@*[17]))='height' or string(name(@*[17]))='id' or string(name(@*[17]))='xml:lang' or string(name(@*[17]))='title' or string(name(@*[17]))='label' or string(name(@*[17]))='class' or string(name(@*[17]))='dir' or string(name(@*[17]))='role' or string(name(@*[17]))='aria-controls' or string(name(@*[17]))='aria-describedby' or string(name(@*[17]))='aria-flowto' or string(name(@*[17]))='aria-label' or string(name(@*[17]))='aria-labelledby' or string(name(@*[17]))='aria-level' or string(name(@*[17]))='aria-live' or string(name(@*[17]))='aria-orientation' or string(name(@*[17]))='aria-owns' or string(name(@*[17]))='aria-hidden' or starts-with(name(@*[17]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 17] Invalid XML attribute in position 17 with name of <sch:value-of select="string(name(@*[17]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[18]))=0 or string(name(@*[18]))='src' or string(name(@*[18]))='crossorigin' or string(name(@*[18]))='preload' or string(name(@*[18]))='autoplay' or string(name(@*[18]))='mediagroup' or string(name(@*[18]))='loop' or string(name(@*[18]))='muted' or string(name(@*[18]))='controls' or string(name(@*[18]))='poster' or string(name(@*[18]))='width' or string(name(@*[18]))='height' or string(name(@*[18]))='id' or string(name(@*[18]))='xml:lang' or string(name(@*[18]))='title' or string(name(@*[18]))='label' or string(name(@*[18]))='class' or string(name(@*[18]))='dir' or string(name(@*[18]))='role' or string(name(@*[18]))='aria-controls' or string(name(@*[18]))='aria-describedby' or string(name(@*[18]))='aria-flowto' or string(name(@*[18]))='aria-label' or string(name(@*[18]))='aria-labelledby' or string(name(@*[18]))='aria-level' or string(name(@*[18]))='aria-live' or string(name(@*[18]))='aria-orientation' or string(name(@*[18]))='aria-owns' or string(name(@*[18]))='aria-hidden' or starts-with(name(@*[18]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 18] Invalid XML attribute in position 18 with name of <sch:value-of select="string(name(@*[18]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[19]))=0 or string(name(@*[19]))='src' or string(name(@*[19]))='crossorigin' or string(name(@*[19]))='preload' or string(name(@*[19]))='autoplay' or string(name(@*[19]))='mediagroup' or string(name(@*[19]))='loop' or string(name(@*[19]))='muted' or string(name(@*[19]))='controls' or string(name(@*[19]))='poster' or string(name(@*[19]))='width' or string(name(@*[19]))='height' or string(name(@*[19]))='id' or string(name(@*[19]))='xml:lang' or string(name(@*[19]))='title' or string(name(@*[19]))='label' or string(name(@*[19]))='class' or string(name(@*[19]))='dir' or string(name(@*[19]))='role' or string(name(@*[19]))='aria-controls' or string(name(@*[19]))='aria-describedby' or string(name(@*[19]))='aria-flowto' or string(name(@*[19]))='aria-label' or string(name(@*[19]))='aria-labelledby' or string(name(@*[19]))='aria-level' or string(name(@*[19]))='aria-live' or string(name(@*[19]))='aria-orientation' or string(name(@*[19]))='aria-owns' or string(name(@*[19]))='aria-hidden' or starts-with(name(@*[19]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 19] Invalid XML attribute in position 19 with name of <sch:value-of select="string(name(@*[19]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[20]))=0 or string(name(@*[20]))='src' or string(name(@*[20]))='crossorigin' or string(name(@*[20]))='preload' or string(name(@*[20]))='autoplay' or string(name(@*[20]))='mediagroup' or string(name(@*[20]))='loop' or string(name(@*[20]))='muted' or string(name(@*[20]))='controls' or string(name(@*[20]))='poster' or string(name(@*[20]))='width' or string(name(@*[20]))='height' or string(name(@*[20]))='id' or string(name(@*[20]))='xml:lang' or string(name(@*[20]))='title' or string(name(@*[20]))='label' or string(name(@*[20]))='class' or string(name(@*[20]))='dir' or string(name(@*[20]))='role' or string(name(@*[20]))='aria-controls' or string(name(@*[20]))='aria-describedby' or string(name(@*[20]))='aria-flowto' or string(name(@*[20]))='aria-label' or string(name(@*[20]))='aria-labelledby' or string(name(@*[20]))='aria-level' or string(name(@*[20]))='aria-live' or string(name(@*[20]))='aria-orientation' or string(name(@*[20]))='aria-owns' or string(name(@*[20]))='aria-hidden' or starts-with(name(@*[20]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 20] Invalid XML attribute in position 20 with name of <sch:value-of select="string(name(@*[20]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[21]))=0 or string(name(@*[21]))='src' or string(name(@*[21]))='crossorigin' or string(name(@*[21]))='preload' or string(name(@*[21]))='autoplay' or string(name(@*[21]))='mediagroup' or string(name(@*[21]))='loop' or string(name(@*[21]))='muted' or string(name(@*[21]))='controls' or string(name(@*[21]))='poster' or string(name(@*[21]))='width' or string(name(@*[21]))='height' or string(name(@*[21]))='id' or string(name(@*[21]))='xml:lang' or string(name(@*[21]))='title' or string(name(@*[21]))='label' or string(name(@*[21]))='class' or string(name(@*[21]))='dir' or string(name(@*[21]))='role' or string(name(@*[21]))='aria-controls' or string(name(@*[21]))='aria-describedby' or string(name(@*[21]))='aria-flowto' or string(name(@*[21]))='aria-label' or string(name(@*[21]))='aria-labelledby' or string(name(@*[21]))='aria-level' or string(name(@*[21]))='aria-live' or string(name(@*[21]))='aria-orientation' or string(name(@*[21]))='aria-owns' or string(name(@*[21]))='aria-hidden' or starts-with(name(@*[21]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 21] Invalid XML attribute in position 21 with name of <sch:value-of select="string(name(@*[21]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[22]))=0 or string(name(@*[22]))='src' or string(name(@*[22]))='crossorigin' or string(name(@*[22]))='preload' or string(name(@*[22]))='autoplay' or string(name(@*[22]))='mediagroup' or string(name(@*[22]))='loop' or string(name(@*[22]))='muted' or string(name(@*[22]))='controls' or string(name(@*[22]))='poster' or string(name(@*[22]))='width' or string(name(@*[22]))='height' or string(name(@*[22]))='id' or string(name(@*[22]))='xml:lang' or string(name(@*[22]))='title' or string(name(@*[22]))='label' or string(name(@*[22]))='class' or string(name(@*[22]))='dir' or string(name(@*[22]))='role' or string(name(@*[22]))='aria-controls' or string(name(@*[22]))='aria-describedby' or string(name(@*[22]))='aria-flowto' or string(name(@*[22]))='aria-label' or string(name(@*[22]))='aria-labelledby' or string(name(@*[22]))='aria-level' or string(name(@*[22]))='aria-live' or string(name(@*[22]))='aria-orientation' or string(name(@*[22]))='aria-owns' or string(name(@*[22]))='aria-hidden' or starts-with(name(@*[22]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 22] Invalid XML attribute in position 22 with name of <sch:value-of select="string(name(@*[22]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[23]))=0 or string(name(@*[23]))='src' or string(name(@*[23]))='crossorigin' or string(name(@*[23]))='preload' or string(name(@*[23]))='autoplay' or string(name(@*[23]))='mediagroup' or string(name(@*[23]))='loop' or string(name(@*[23]))='muted' or string(name(@*[23]))='controls' or string(name(@*[23]))='poster' or string(name(@*[23]))='width' or string(name(@*[23]))='height' or string(name(@*[23]))='id' or string(name(@*[23]))='xml:lang' or string(name(@*[23]))='title' or string(name(@*[23]))='label' or string(name(@*[23]))='class' or string(name(@*[23]))='dir' or string(name(@*[23]))='role' or string(name(@*[23]))='aria-controls' or string(name(@*[23]))='aria-describedby' or string(name(@*[23]))='aria-flowto' or string(name(@*[23]))='aria-label' or string(name(@*[23]))='aria-labelledby' or string(name(@*[23]))='aria-level' or string(name(@*[23]))='aria-live' or string(name(@*[23]))='aria-orientation' or string(name(@*[23]))='aria-owns' or string(name(@*[23]))='aria-hidden' or starts-with(name(@*[23]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 23] Invalid XML attribute in position 23 with name of <sch:value-of select="string(name(@*[23]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[24]))=0 or string(name(@*[24]))='src' or string(name(@*[24]))='crossorigin' or string(name(@*[24]))='preload' or string(name(@*[24]))='autoplay' or string(name(@*[24]))='mediagroup' or string(name(@*[24]))='loop' or string(name(@*[24]))='muted' or string(name(@*[24]))='controls' or string(name(@*[24]))='poster' or string(name(@*[24]))='width' or string(name(@*[24]))='height' or string(name(@*[24]))='id' or string(name(@*[24]))='xml:lang' or string(name(@*[24]))='title' or string(name(@*[24]))='label' or string(name(@*[24]))='class' or string(name(@*[24]))='dir' or string(name(@*[24]))='role' or string(name(@*[24]))='aria-controls' or string(name(@*[24]))='aria-describedby' or string(name(@*[24]))='aria-flowto' or string(name(@*[24]))='aria-label' or string(name(@*[24]))='aria-labelledby' or string(name(@*[24]))='aria-level' or string(name(@*[24]))='aria-live' or string(name(@*[24]))='aria-orientation' or string(name(@*[24]))='aria-owns' or string(name(@*[24]))='aria-hidden' or starts-with(name(@*[24]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 24] Invalid XML attribute in position 24 with name of <sch:value-of select="string(name(@*[24]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[25]))=0 or string(name(@*[25]))='src' or string(name(@*[25]))='crossorigin' or string(name(@*[25]))='preload' or string(name(@*[25]))='autoplay' or string(name(@*[25]))='mediagroup' or string(name(@*[25]))='loop' or string(name(@*[25]))='muted' or string(name(@*[25]))='controls' or string(name(@*[25]))='poster' or string(name(@*[25]))='width' or string(name(@*[25]))='height' or string(name(@*[25]))='id' or string(name(@*[25]))='xml:lang' or string(name(@*[25]))='title' or string(name(@*[25]))='label' or string(name(@*[25]))='class' or string(name(@*[25]))='dir' or string(name(@*[25]))='role' or string(name(@*[25]))='aria-controls' or string(name(@*[25]))='aria-describedby' or string(name(@*[25]))='aria-flowto' or string(name(@*[25]))='aria-label' or string(name(@*[25]))='aria-labelledby' or string(name(@*[25]))='aria-level' or string(name(@*[25]))='aria-live' or string(name(@*[25]))='aria-orientation' or string(name(@*[25]))='aria-owns' or string(name(@*[25]))='aria-hidden' or starts-with(name(@*[25]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 25] Invalid XML attribute in position 25 with name of <sch:value-of select="string(name(@*[25]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[26]))=0 or string(name(@*[26]))='src' or string(name(@*[26]))='crossorigin' or string(name(@*[26]))='preload' or string(name(@*[26]))='autoplay' or string(name(@*[26]))='mediagroup' or string(name(@*[26]))='loop' or string(name(@*[26]))='muted' or string(name(@*[26]))='controls' or string(name(@*[26]))='poster' or string(name(@*[26]))='width' or string(name(@*[26]))='height' or string(name(@*[26]))='id' or string(name(@*[26]))='xml:lang' or string(name(@*[26]))='title' or string(name(@*[26]))='label' or string(name(@*[26]))='class' or string(name(@*[26]))='dir' or string(name(@*[26]))='role' or string(name(@*[26]))='aria-controls' or string(name(@*[26]))='aria-describedby' or string(name(@*[26]))='aria-flowto' or string(name(@*[26]))='aria-label' or string(name(@*[26]))='aria-labelledby' or string(name(@*[26]))='aria-level' or string(name(@*[26]))='aria-live' or string(name(@*[26]))='aria-orientation' or string(name(@*[26]))='aria-owns' or string(name(@*[26]))='aria-hidden' or starts-with(name(@*[26]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 26] Invalid XML attribute in position 26 with name of <sch:value-of select="string(name(@*[26]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[27]))=0 or string(name(@*[27]))='src' or string(name(@*[27]))='crossorigin' or string(name(@*[27]))='preload' or string(name(@*[27]))='autoplay' or string(name(@*[27]))='mediagroup' or string(name(@*[27]))='loop' or string(name(@*[27]))='muted' or string(name(@*[27]))='controls' or string(name(@*[27]))='poster' or string(name(@*[27]))='width' or string(name(@*[27]))='height' or string(name(@*[27]))='id' or string(name(@*[27]))='xml:lang' or string(name(@*[27]))='title' or string(name(@*[27]))='label' or string(name(@*[27]))='class' or string(name(@*[27]))='dir' or string(name(@*[27]))='role' or string(name(@*[27]))='aria-controls' or string(name(@*[27]))='aria-describedby' or string(name(@*[27]))='aria-flowto' or string(name(@*[27]))='aria-label' or string(name(@*[27]))='aria-labelledby' or string(name(@*[27]))='aria-level' or string(name(@*[27]))='aria-live' or string(name(@*[27]))='aria-orientation' or string(name(@*[27]))='aria-owns' or string(name(@*[27]))='aria-hidden' or starts-with(name(@*[27]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 27] Invalid XML attribute in position 27 with name of <sch:value-of select="string(name(@*[27]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[28]))=0 or string(name(@*[28]))='src' or string(name(@*[28]))='crossorigin' or string(name(@*[28]))='preload' or string(name(@*[28]))='autoplay' or string(name(@*[28]))='mediagroup' or string(name(@*[28]))='loop' or string(name(@*[28]))='muted' or string(name(@*[28]))='controls' or string(name(@*[28]))='poster' or string(name(@*[28]))='width' or string(name(@*[28]))='height' or string(name(@*[28]))='id' or string(name(@*[28]))='xml:lang' or string(name(@*[28]))='title' or string(name(@*[28]))='label' or string(name(@*[28]))='class' or string(name(@*[28]))='dir' or string(name(@*[28]))='role' or string(name(@*[28]))='aria-controls' or string(name(@*[28]))='aria-describedby' or string(name(@*[28]))='aria-flowto' or string(name(@*[28]))='aria-label' or string(name(@*[28]))='aria-labelledby' or string(name(@*[28]))='aria-level' or string(name(@*[28]))='aria-live' or string(name(@*[28]))='aria-orientation' or string(name(@*[28]))='aria-owns' or string(name(@*[28]))='aria-hidden' or starts-with(name(@*[28]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 28] Invalid XML attribute in position 28 with name of <sch:value-of select="string(name(@*[28]))" />.
                    </sch:assert>
                    <sch:assert test="string-length(name(@*[29]))=0 or string(name(@*[29]))='src' or string(name(@*[29]))='crossorigin' or string(name(@*[29]))='preload' or string(name(@*[29]))='autoplay' or string(name(@*[29]))='mediagroup' or string(name(@*[29]))='loop' or string(name(@*[29]))='muted' or string(name(@*[29]))='controls' or string(name(@*[29]))='poster' or string(name(@*[29]))='width' or string(name(@*[29]))='height' or string(name(@*[29]))='id' or string(name(@*[29]))='xml:lang' or string(name(@*[29]))='title' or string(name(@*[29]))='label' or string(name(@*[29]))='class' or string(name(@*[29]))='dir' or string(name(@*[29]))='role' or string(name(@*[29]))='aria-controls' or string(name(@*[29]))='aria-describedby' or string(name(@*[29]))='aria-flowto' or string(name(@*[29]))='aria-label' or string(name(@*[29]))='aria-labelledby' or string(name(@*[29]))='aria-level' or string(name(@*[29]))='aria-live' or string(name(@*[29]))='aria-orientation' or string(name(@*[29]))='aria-owns' or string(name(@*[29]))='aria-hidden' or starts-with(name(@*[29]), 'data-')">
                        [RULE ROOT ELEMENT (video): Assertion 29] Invalid XML attribute in position 29 with name of <sch:value-of select="string(name(@*[29]))" />.
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- RULESET ******************************************************************* -->

        </xs:appinfo>
    </xs:annotation>

    <xs:annotation>
        <xs:documentation>
            Definition of Schematron Validation Rules
            =========================================
            Author:         Colin Smythe (IMS Global, UK) and Mark McKell (IMS Global, USA)
            Date:           1st September, 2015
            Version:        1.0
            Status:         Final Release

            Description:    The set of Schematron Rules to further enforce the HTML5 features in the QTIv2.2 Information Model. The rule sets that have been defined are:

                            [RULE_SET_GENERAL] Ensure the figcaption element positioning within the figure element.

                            RULE_SET_GENERAL: Ensure the figcaption element positioning within the figure element. The set of rules are:-
                            * RULE GENERAL 1-Assertion 1 :- The figcaption must be either the first or last element in the contained sequence.

            History:        The first set of of schematron rules for the IMS QTIv2.2 specification.

        </xs:documentation>

        <xs:appinfo>
            <sch:title>Schematron Validation Rules for the HTML5 Features in the QTIv2.2 Specification.</sch:title>

            <!-- RULESET ******************************************************************* -->
            <sch:pattern abstract="false" id="RULE_SET_GENERAL">
                <sch:title>Ensure the figcaption element positioning within the figure element.</sch:title>

                <sch:rule abstract="false" context="//qh5:figure">
                    <sch:assert test="qh5:figcaption[position()=1 or position()=last()]">
                        [RULE GENERAL 1: Assertion 1] The figcaption must be either the first or last element in the contained sequence.<sch:value-of select="concat('The Figure identifier is: ', @id)" />
                    </sch:assert>
                </sch:rule>

            </sch:pattern>
            <!-- *************************************************************************** -->

        </xs:appinfo>
    </xs:annotation>

    <!-- Generate Global Attributes (non-assigned) ******************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate Global Attributes *********************************************************************** -->

    <xs:attributeGroup name="autoplay.Audio.Attr">
        <xs:attribute name="autoplay" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="controls.Audio.Attr">
        <xs:attribute name="controls" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="crossorigin.Audio.Attr">
        <xs:attribute name="crossorigin" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="anonymous" />
                    <xs:enumeration value="use-credentials" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="loop.Audio.Attr">
        <xs:attribute name="loop" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="mediagroup.Audio.Attr">
        <xs:attribute name="mediagroup" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="muted.Audio.Attr">
        <xs:attribute name="muted" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="preload.Audio.Attr">
        <xs:attribute name="preload" use="optional" default="metadata">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="none" />
                    <xs:enumeration value="auto" />
                    <xs:enumeration value="metadata" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="src.Audio.Attr">
        <xs:attribute name="src" use="optional" type="URLDType" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-controls.BaseHTML5.Attr">
        <xs:attribute name="aria-controls" use="optional" type="xs:IDREFS" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-describedby.BaseHTML5.Attr">
        <xs:attribute name="aria-describedby" use="optional" type="xs:IDREFS" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-flowto.BaseHTML5.Attr">
        <xs:attribute name="aria-flowto" use="optional" type="xs:IDREFS" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-hidden.BaseHTML5.Attr">
        <xs:attribute name="aria-hidden" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-label.BaseHTML5.Attr">
        <xs:attribute name="aria-label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-labelledby.BaseHTML5.Attr">
        <xs:attribute name="aria-labelledby" use="optional" type="xs:IDREFS" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-level.BaseHTML5.Attr">
        <xs:attribute name="aria-level" use="optional" type="AriaLevelIntegerDType" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-live.BaseHTML5.Attr">
        <xs:attribute name="aria-live" use="optional" default="off">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="off" />
                    <xs:enumeration value="polite" />
                    <xs:enumeration value="assertive" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-orientation.BaseHTML5.Attr">
        <xs:attribute name="aria-orientation" use="optional" default="horizontal">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="vertical" />
                    <xs:enumeration value="horizontal" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-owns.BaseHTML5.Attr">
        <xs:attribute name="aria-owns" use="optional" type="xs:IDREFS" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.BaseHTML5.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringListDType" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="dataExtension.BaseHTML5.Attr">
        <xs:anyAttribute namespace = "##any" processContents = "lax" />
    </xs:attributeGroup>

    <xs:attributeGroup name="dir.BaseHTML5.Attr">
        <xs:attribute name="dir" use="optional" default="auto">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ltr" />
                    <xs:enumeration value="rtl" />
                    <xs:enumeration value="auto" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.BaseHTML5.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifierDType" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.BaseHTML5.Attr">
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="language.BaseHTML5.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="role.BaseHTML5.Attr">
        <xs:attribute name="role" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="article" />
                    <xs:enumeration value="columnheader" />
                    <xs:enumeration value="definition" />
                    <xs:enumeration value="directory" />
                    <xs:enumeration value="document" />
                    <xs:enumeration value="group" />
                    <xs:enumeration value="heading" />
                    <xs:enumeration value="img" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="listitem" />
                    <xs:enumeration value="math" />
                    <xs:enumeration value="note" />
                    <xs:enumeration value="presentation" />
                    <xs:enumeration value="region" />
                    <xs:enumeration value="row" />
                    <xs:enumeration value="rowgroup" />
                    <xs:enumeration value="rowheader" />
                    <xs:enumeration value="separator" />
                    <xs:enumeration value="toolbar" />
                    <xs:enumeration value="button" />
                    <xs:enumeration value="checkbox" />
                    <xs:enumeration value="gridcell" />
                    <xs:enumeration value="link" />
                    <xs:enumeration value="log" />
                    <xs:enumeration value="option" />
                    <xs:enumeration value="radio" />
                    <xs:enumeration value="slider" />
                    <xs:enumeration value="spinbutton" />
                    <xs:enumeration value="status" />
                    <xs:enumeration value="tab" />
                    <xs:enumeration value="tabpanel" />
                    <xs:enumeration value="textbox" />
                    <xs:enumeration value="timer" />
                    <xs:enumeration value="listbox" />
                    <xs:enumeration value="radiogroup" />
                    <xs:enumeration value="tablist" />
                    <xs:enumeration value="complementary" />
                    <xs:enumeration value="contentinfo" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="title.BaseHTML5.Attr">
        <xs:attribute name="title" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-controls.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-controls" use="optional" type="xs:IDREFS" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-describedby.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-describedby" use="optional" type="xs:IDREFS" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-flowto.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-flowto" use="optional" type="xs:IDREFS" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-hidden.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-hidden" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-label.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-labelledby.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-labelledby" use="optional" type="xs:IDREFS" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-level.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-level" use="optional" type="AriaLevelIntegerDType" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-live.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-live" use="optional" default="off">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="off" />
                    <xs:enumeration value="polite" />
                    <xs:enumeration value="assertive" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-orientation.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-orientation" use="optional" default="horizontal">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="vertical" />
                    <xs:enumeration value="horizontal" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-owns.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-owns" use="optional" type="xs:IDREFS" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.BaseHTML5Empty.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringListDType" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="dataExtension.BaseHTML5Empty.Attr">
        <xs:anyAttribute namespace = "##any" processContents = "lax" />
    </xs:attributeGroup>

    <xs:attributeGroup name="dir.BaseHTML5Empty.Attr">
        <xs:attribute name="dir" use="optional" default="auto">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ltr" />
                    <xs:enumeration value="rtl" />
                    <xs:enumeration value="auto" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.BaseHTML5Empty.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifierDType" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.BaseHTML5Empty.Attr">
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="language.BaseHTML5Empty.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="role.BaseHTML5Empty.Attr">
        <xs:attribute name="role" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="article" />
                    <xs:enumeration value="columnheader" />
                    <xs:enumeration value="definition" />
                    <xs:enumeration value="directory" />
                    <xs:enumeration value="document" />
                    <xs:enumeration value="group" />
                    <xs:enumeration value="heading" />
                    <xs:enumeration value="img" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="listitem" />
                    <xs:enumeration value="math" />
                    <xs:enumeration value="note" />
                    <xs:enumeration value="presentation" />
                    <xs:enumeration value="region" />
                    <xs:enumeration value="row" />
                    <xs:enumeration value="rowgroup" />
                    <xs:enumeration value="rowheader" />
                    <xs:enumeration value="separator" />
                    <xs:enumeration value="toolbar" />
                    <xs:enumeration value="button" />
                    <xs:enumeration value="checkbox" />
                    <xs:enumeration value="gridcell" />
                    <xs:enumeration value="link" />
                    <xs:enumeration value="log" />
                    <xs:enumeration value="option" />
                    <xs:enumeration value="radio" />
                    <xs:enumeration value="slider" />
                    <xs:enumeration value="spinbutton" />
                    <xs:enumeration value="status" />
                    <xs:enumeration value="tab" />
                    <xs:enumeration value="tabpanel" />
                    <xs:enumeration value="textbox" />
                    <xs:enumeration value="timer" />
                    <xs:enumeration value="listbox" />
                    <xs:enumeration value="radiogroup" />
                    <xs:enumeration value="tablist" />
                    <xs:enumeration value="complementary" />
                    <xs:enumeration value="contentinfo" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="title.BaseHTML5Empty.Attr">
        <xs:attribute name="title" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="src.Source.Attr">
        <xs:attribute name="src" use="required" type="URLDType" />
    </xs:attributeGroup>

    <xs:attributeGroup name="type.Source.Attr">
        <xs:attribute name="type" use="optional" type="MimeTypeDType" />
    </xs:attributeGroup>

    <xs:attributeGroup name="default.Track.Attr">
        <xs:attribute name="default" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="kind.Track.Attr">
        <xs:attribute name="kind" use="optional" default="subtitles">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="subtitles" />
                    <xs:enumeration value="captions" />
                    <xs:enumeration value="descriptions" />
                    <xs:enumeration value="chapters" />
                    <xs:enumeration value="metadata" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="src.Track.Attr">
        <xs:attribute name="src" use="required" type="URLDType" />
    </xs:attributeGroup>

    <xs:attributeGroup name="srclang.Track.Attr">
        <xs:attribute name="srclang" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="autoplay.Video.Attr">
        <xs:attribute name="autoplay" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="controls.Video.Attr">
        <xs:attribute name="controls" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="crossorigin.Video.Attr">
        <xs:attribute name="crossorigin" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="anonymous" />
                    <xs:enumeration value="use-credentials" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="height.Video.Attr">
        <xs:attribute name="height" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="loop.Video.Attr">
        <xs:attribute name="loop" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="mediagroup.Video.Attr">
        <xs:attribute name="mediagroup" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="muted.Video.Attr">
        <xs:attribute name="muted" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="poster.Video.Attr">
        <xs:attribute name="poster" use="optional" type="URLDType" />
    </xs:attributeGroup>

    <xs:attributeGroup name="preload.Video.Attr">
        <xs:attribute name="preload" use="optional" default="metadata">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="none" />
                    <xs:enumeration value="auto" />
                    <xs:enumeration value="metadata" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="src.Video.Attr">
        <xs:attribute name="src" use="optional" type="URLDType" />
    </xs:attributeGroup>

    <xs:attributeGroup name="width.Video.Attr">
        <xs:attribute name="width" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <!-- ================================================================================================== -->

    <!-- Generate Global List Types *********************************************************************** -->

    <xs:simpleType name="StringListDType">
        <xs:restriction base="xs:string" />
    </xs:simpleType>

    <!-- ================================================================================================== -->

    <!-- Generate Namespaced extension Group  ************************************************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate Special DataTypes  ********************************************************************** -->

    <xs:complexType name="EmptyPrimitiveTypeDType">
        <xs:complexContent>
            <xs:restriction base="xs:anyType" />
        </xs:complexContent>
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Generate the enumerated simpleType declarations ************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Parameter) ***************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Derived) ******************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Union) ********************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Complex) ******************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the derived data-type elements based upon simpleType ************************************ -->

    <xs:simpleType name="AriaLevelIntegerDType">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="1" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="MimeTypeDType">
        <xs:restriction base="xs:normalizedString">
            <xs:pattern value="[\p{IsBasicLatin}-[()&lt;&gt;@,;:\\&quot;/\[\]?=]]+/[\p{IsBasicLatin}-[()&lt;&gt;@,;:\\&quot;/\[\]?=]]+" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="URLDType">
        <xs:restriction base="xs:normalizedString" />
    </xs:simpleType>

    <xs:simpleType name="UniqueIdentifierDType">
        <xs:restriction base="xs:ID" />
    </xs:simpleType>

    <!-- ================================================================================================== -->

    <!-- Generate the derived data-type elements based upon derived simpleType **************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the ComplexTypes ************************************************************************ -->

    <xs:complexType name="ArticleDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'article' tag. The article tag represents
                a complete, or self-contained, composition in a document, page, application, or site and  
                that is, in principle, independently distributable or reusable, e.g. in syndication. This 
                could be a forum post, a magazine or newspaper article, a blog entry, a user-submitted co-
                mment, an interactive widget or gadget, or any other independent item of content. When ar-
                ticle tags are nested, the inner article tags represent articles that are in principle re-
                lated to the contents of the outer article. For instance, a blog entry on a site that acc-
                epts user-submitted comments could represent the comments as article elements nested with-
                in the article tag for the blog entry. Author information associated with an article tag  
                (q.v. the address tag) does not apply to nested article tags.                             
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m2:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="qti:img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AsideDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                 This defines the permitted content for the HTML5 'aside' tag. The aside tag represents a 
                section of a page that consists of content that is tangentially related to the content ar-
                ound the aside tag, and which could be considered separate from that content. Such sectio-
                ns are often represented as sidebars in printed typography. The tag can be used for typog-
                raphical effects like pull quotes or sidebars, for advertising, for groups of nav tags, a-
                nd for other content that is considered separate from the main content of the page.       
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m2:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="qti:img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AudioDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'audio' tag is an HTML5 feature. An audio tag represents a sound or audio stream. Con-
                tent may be provided inside the audio tag. User agents should not show this content to the
                user; it is intended for older Web browsers which do not support audio, so that legacy au-
                dio plugins can be tried, or to show text to the users of these older browsers informing  
                them of how to access the audio contents.                                                 
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:sequence>
                    <xs:element ref="source" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element ref="track" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="src.Audio.Attr" />
                <xs:attributeGroup ref="crossorigin.Audio.Attr" />
                <xs:attributeGroup ref="preload.Audio.Attr" />
                <xs:attributeGroup ref="autoplay.Audio.Attr" />
                <xs:attributeGroup ref="mediagroup.Audio.Attr" />
                <xs:attributeGroup ref="loop.Audio.Attr" />
                <xs:attributeGroup ref="muted.Audio.Attr" />
                <xs:attributeGroup ref="controls.Audio.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BaseHTML5DType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the base class for the HTML5 features that have children. This consists of a set  
                of children characteristics.                                                              
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
        </xs:sequence>
        <xs:attributeGroup ref="id.BaseHTML5.Attr" />
        <xs:attributeGroup ref="language.BaseHTML5.Attr" />
        <xs:attributeGroup ref="title.BaseHTML5.Attr" />
        <xs:attributeGroup ref="label.BaseHTML5.Attr" />
        <xs:attributeGroup ref="class.BaseHTML5.Attr" />
        <xs:attributeGroup ref="dir.BaseHTML5.Attr" />
        <xs:attributeGroup ref="role.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-controls.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-describedby.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-flowto.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-label.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-labelledby.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-level.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-live.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-orientation.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-owns.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-hidden.BaseHTML5.Attr" />
        <xs:attributeGroup ref="dataExtension.BaseHTML5.Attr" />
    </xs:complexType>

    <xs:complexType name="BDIDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the content for defining bidirectional content. The bdi tag represents a span
                of text that is to be isolated from its surroundings for the purposes of bidirectional te-
                xt formatting.                                                                            
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti:img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:acronym" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:big" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:tt" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:pre" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:h1" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:h2" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:h3" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:h4" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:h5" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:h6" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:address" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:dl" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:ol" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:ul" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:hr" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="FigCaptionDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'figcaption' tag. The 'figcaption' eleme-
                nt represents a caption or legend for the rest of the contents of the figcaption element's
                parent figure element, if any.                                                            
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m2:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="qti:img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="FigureDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'figure' tag. The 'figure' tag represents
                some flow content, optionally with a caption, that is self-contained (like a complete sen-
                tence) and is typically referenced as a single unit from the main flow of the document.   
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:choice minOccurs = "0" maxOccurs = "unbounded">
                    <xs:element ref="figcaption" minOccurs="0" maxOccurs="1" />
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti:img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:acronym" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:big" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:tt" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:pre" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:h1" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:h2" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:h3" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:h4" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:h5" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:h6" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:address" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:dl" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:ol" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:ul" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:hr" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="FooterDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'footer' tag. The footer tag represents a
                footer for its nearest ancestor sectioning content or sectioning root element. A footer t-
                ypically contains information about its section such as who wrote it, links to related do-
                cuments, copyright data, and the like.                                                    
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m2:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="qti:img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="HeaderDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'header' tag. The header tag represents  
                introductory content for its nearest ancestor sectioning content or sectioning root tag. A
                header typically contains a group of introductory or navigational aids.                   
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m2:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="qti:img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="LabelDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'label' tag. The label tag represents a  
                caption in a user interface. The caption can be associated with a specific form control,  
                known as the label element's labeled control, either using the for attribute, or by putti-
                ng the form control inside the label element itself. Except where otherwise specified by  
                the following rules, a label element has no labeled control.                              
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m2:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="qti:img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="NavDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'nav' tag. The nav tag represents a sect-
                ion of a page that links to other pages or to parts within the page: a section with navig-
                ation links.                                                                              
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m2:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="qti:img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RBDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This feature is a part of the HTML5 Ruby annotation. The rb tag marks the base text compo-
                nent of a ruby annotation. When it is the child of a ruby tag, it doesn't represent anyth-
                ing itself, but its parent ruby tag uses it as part of determining what it represents.    
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti:a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RPDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This feature is a part of the HTML5 Ruby annotation. The 'rp' tag is used to provide fall-
                back text to be shown by user agents that don't support ruby annotations. One widespread  
                convention is to provide parentheses around the ruby text component of a ruby annotation. 
                The contents of the rp tags are typically not displayed by user agents which do support r-
                uby annotations. An rp tag that is a child of a ruby tag represents nothing. An rp element
                whose parent tag is not a ruby tag represents its children.                               
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti:a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RTDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This feature is a part of the HTML5 Ruby annotation. The 'rt' tag marks the ruby text com-
                ponent of a ruby annotation. When it is the child of a ruby tag or of an rtc tag that is  
                itself the child of a ruby tag, it doesn't represent anything itself, but its ancestor ru-
                by tag uses it as part of determining what it represents.                                 
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti:a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RTCDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This feature is a part of the HTML5 Ruby annotation. The 'rtc' tag marks a ruby text cont-
                ainer for ruby text components in a ruby annotation. When it is the child of a ruby tag it
                doesn't represent anything itself, but its parent ruby tag uses it as part of determining 
                what it represents. An rtc tag that is not a child of a ruby tag represents the same thing
                as its children.                                                                          
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:choice>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti:a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti:var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="rt" minOccurs="0" maxOccurs="unbounded" />
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RubyDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This feature is a part of the HTML5 Ruby annotation. The ruby tag allows one or more spans
                of phrasing content to be marked with ruby annotations. Ruby annotations are short runs of
                text presented alongside base text, primarily used in East Asian typography as a guide for
                pronunciation or to include other annotations. In Japanese, this form of typography is al-
                so known as furigana. Ruby text can appear on either side, and sometimes both sides, of t-
                he base text, and it is possible to control its position using CSS.                       
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="qti:a" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:abbr" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:b" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:bdo" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:br" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:cite" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:code" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:dfn" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:em" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:i" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:img" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:kbd" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:object" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:q" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:samp" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:small" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:span" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:strong" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:sup" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="qti:var" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="rb" minOccurs="0" maxOccurs="unbounded" />
                        </xs:choice>
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="rp" minOccurs="0" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="rt" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="rtc" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SectionDType" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'section' tag. The section tag represents
                a generic section of a document or application. A section, in this context, is a thematic 
                grouping of content. The theme of each section should be identified, typically by includi-
                ng a heading (h1-h6 tag) as a child of the section tag.                                   
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m2:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="qti:img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti:hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml11:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml11:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SourceDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'source' tag is an HTML5 feature. The source tag allows authors to specify multiple a-
                lternative media resources for media tags. It does not represent anything on its own.     
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5EmptyDType">
                <xs:attributeGroup ref="src.Source.Attr" />
                <xs:attributeGroup ref="type.Source.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TrackDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'track' tag is an HTML5 feature. The track tag allows authors to specify explicit ext-
                ernal timed text tracks for media elements. It does not represent anything on its own.    
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5EmptyDType">
                <xs:attributeGroup ref="kind.Track.Attr" />
                <xs:attributeGroup ref="src.Track.Attr" />
                <xs:attributeGroup ref="srclang.Track.Attr" />
                <xs:attributeGroup ref="default.Track.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="VideoDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'video' tag is an HTML5 feature. A video tag is used for playing videos or movies, and
                audio files with captions.                                                                
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5DType">
                <xs:sequence>
                    <xs:element ref="source" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element ref="track" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="src.Video.Attr" />
                <xs:attributeGroup ref="crossorigin.Video.Attr" />
                <xs:attributeGroup ref="preload.Video.Attr" />
                <xs:attributeGroup ref="autoplay.Video.Attr" />
                <xs:attributeGroup ref="mediagroup.Video.Attr" />
                <xs:attributeGroup ref="loop.Video.Attr" />
                <xs:attributeGroup ref="muted.Video.Attr" />
                <xs:attributeGroup ref="controls.Video.Attr" />
                <xs:attributeGroup ref="poster.Video.Attr" />
                <xs:attributeGroup ref="width.Video.Attr" />
                <xs:attributeGroup ref="height.Video.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Generate the SOAP Binding ComplexTypes *********************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the derived ComplexTypes **************************************************************** -->

    <xs:complexType name="BaseHTML5EmptyDType" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the base class for the HTML5 features that have no children tags i.e. must be emp-
                ty. This consists of a set of children characteristics.                                   
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveTypeDType">
                <xs:attributeGroup ref="id.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="language.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="title.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="label.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="class.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="dir.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="role.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-controls.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-describedby.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-flowto.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-label.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-labelledby.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-level.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-live.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-orientation.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-owns.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-hidden.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="dataExtension.BaseHTML5Empty.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Declaration of the elements (Complex) ************************************************************ -->

    <!-- ================================================================================================== -->

    <!-- Declaration of the elements (Derived) ************************************************************ -->

    <!-- ================================================================================================== -->

    <!-- Declaration of the root element(s) *************************************************************** -->

    <xs:element name="article" type="ArticleDType" />
    <xs:element name="aside" type="AsideDType" />
    <xs:element name="audio" type="AudioDType" />
    <xs:element name="bdi" type="BDIDType" />
    <xs:element name="figcaption" type="FigCaptionDType" />
    <xs:element name="figure" type="FigureDType" />
    <xs:element name="footer" type="FooterDType" />
    <xs:element name="header" type="HeaderDType" />
    <xs:element name="label" type="LabelDType" />
    <xs:element name="nav" type="NavDType" />
    <xs:element name="rb" type="RBDType" />
    <xs:element name="rp" type="RPDType" />
    <xs:element name="rt" type="RTDType" />
    <xs:element name="rtc" type="RTCDType" />
    <xs:element name="ruby" type="RubyDType" />
    <xs:element name="section" type="SectionDType" />
    <xs:element name="source" type="SourceDType" />
    <xs:element name="track" type="TrackDType" />
    <xs:element name="video" type="VideoDType" />

    <!-- ================================================================================================== -->

</xs:schema>


